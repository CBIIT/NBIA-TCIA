openapi: 3.0.4
info:
  title: NBIA API
  description: |
    This API provides access to the National Biomedical Imaging Archive (NBIA) for searching and downloading imaging data, including restricted collections requiring authentication.
  termsOfService: https://www.cancerimagingarchive.net/terms-of-service/
  contact:
    email: help@cancerimagingarchive.net
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 4.0.0
servers:
  - url: https://nbia.cancerimagingarchive.net/nbia-api/services/v4/
    description: v4 Production server
  - url: https://nbia-stage.cancerimagingarchive.net/nbia-api/services/v4/
    description: v4 Stage Server
tags:
  - name: Image Downloads
    description: Endpoints for downloading DICOM images and thumbnails
  - name: Collection Metadata
    description: Collection information and descriptions
  - name: Patient Metadata
    description: Patient-related data retrieval
  - name: Study Metadata
    description: Study-level metadata operations
  - name: Series Metadata
    description: Series-level metadata and operations
  - name: Utilities
    description: Helper endpoints for values, counts, and validation

components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        password:
          tokenUrl: https://keycloak-stg.dbmi.cloud/auth/realms/TCIA/protocol/openid-connect/token
          refreshUrl: https://keycloak-stg.dbmi.cloud/auth/realms/TCIA/protocol/openid-connect/token
          scopes:
            openid: ''

  schemas:
    Collection:
      type: object
      properties:
        collection:
          type: string
          description: Name of the collection
          example: "TCGA-LUAD"
      required:
        - collection
paths:
  /getDCMImage:
    get:
      summary: Download DICOM images for a given SeriesInstanceUID.
      description: |
        Retrieves a ZIP archive of DICOM images associated with the specified SeriesInstanceUID.
        Optional parameters allow inclusion of annotations and MD5 hash verification.
        
      tags:
        - Image Downloads
      parameters:
        - name: SeriesInstanceUID
          in: query
          description: Unique identifier for the DICOM series to download.
          required: true
          schema:
            type: string
        - name: IncludeAnnotation
          in: query
          description: Set to true to include annotations in the ZIP file.
          required: false
          schema:
            type: boolean
        - name: MD5Verification
          in: query
          description: Set to true to include MD5 hash values for each image.
          required: false
          schema:
            type: boolean
      security:
        - oauth2: []
      x-codeSamples:
        - lang: curl
          label: Basic download of a DICOM series
          source: |
            curl -H "Authorization:Bearer <TOKEN>" -k \
            "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getDCMImage?SeriesInstanceUID=1.3.6.1.4.1.14519.5.2.1.6834.5010.322628904903035357840500590726"
      responses:
        '200':
          description: A ZIP archive containing DICOM images (and optionally annotations and MD5 hashes).
          content:
            '*/*':
              schema:
                type: string
                format: binary
        '400':
          description: Bad request – Missing or invalid parameters.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing SeriesInstanceUID or invalid parameter format.
        '401':
          description: Unauthorized – Invalid or missing access token.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Access token required.
        '404':
          description: SeriesInstanceUID not found.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Series not found for the given UID.
        '500':
          description: Internal server error.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: An unexpected error occurred.
  /getSpeciesValuesAndCounts:
    get:
      summary: Get species values and their counts.
      description: Returns the species values and counts.
      tags:
        - Patient Metadata
      responses:
        '200':
          description: Successful species counts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    criteria:
                      type: string
                    count:
                      type: string
        '401':
          description: Unauthorized – Invalid or missing access token
        '500':
          description: Internal server error
      security:
        - oauth2: []
  /getSpeciesTax:
    get:
      summary: Retrieve species taxonomy.
      description: Returns the current species taxonomy.
      tags:
        - Utilities
      responses:
        '200':
          description: Successful taxonomy list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    speciesCode:
                      type: string
                    speciesDescription:
                      type: string
        '401':
          description: Unauthorized – Invalid or missing access token
        '500':
          description: Internal server error
      security:
        - oauth2: []
  /getSimpleSearch:
    post:
      summary: Perform a paged simple search using modality and body part.
      description: Performs paged simple search with various criteria.
      tags:
        - Patient Metadata
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                criteriaType0:
                  type: string
                value0:
                  type: string
                sortField:
                  type: string
                  description: Field to sort by (e.g., subject)
                sortDirection:
                  type: string
                  enum: [ascending, descending]
                  description: Sort direction
                start:
                  type: integer
                  description: Offset for paged results
                size:
                  type: integer
                  description: Page size
                AuthorizationCriteria:
                  type: string
                ImageModalityCriteria:
                  type: string
                CollectionCriteria:
                  type: string
                SpeciesCriteria:
                  type: string
                PatientSexCriteria:
                  type: string
                AnatomicalSiteCriteria:
                  type: string
                BodyPartExaminedCriteria:
                  type: string
                ManufacturerCriteria:
                  type: string
                ModelCriteria:
                  type: string
                SoftwareVersionCriteria:
                  type: string
                DateRangeCriteria:
                  type: string
                PatientAgeRangeCriteria:
                  type: string
                DescriptionCriteria:
                  type: string
                PixelSpacingRangeCriteria:
                  type: string
                SliceThicknessRangeCriteria:
                  type: string
                PatientCriteria:
                  type: string
                StudyCriteria:
                  type: string
                SeriesCriteria:
                  type: string
                MinNumberOfStudiesCriteria:
                  type: string
                MinNumberOfStudyDatesCriteria:
                  type: string
                ModalityAndedSearchCriteria:
                  type: string
                PhantomCriteria:
                  type: string
                ThirdPartyAnalysisCriteria:
                  type: string
                DataLicenseCriteria:
                  type: string
                TimePointCriteria:
                  type: string
                DynamicSearchCriteria:
                  type: string
      responses:
        '200':
          description: Successful search results
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized – Invalid or missing access token
        '500':
          description: Internal server error
      security:
        - oauth2: []
  /getRestrictionsForSimpleSearch:
    post:
      summary: Check for commercial restrictions in a simple search.
      description: Returns whether any results from the simple search have commercial restrictions.
      tags:
        - Patient Metadata
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                criteriaType0:
                  type: string
                value0:
                  type: string
                sortField:
                  type: string
                sortDirection:
                  type: string
                start:
                  type: string
                size:
                  type: string
      responses:
        '200':
          description: Successful restriction result
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized – Invalid or missing access token
        '500':
          description: Internal server error
      security:
        - oauth2: []

  /getMD5Hierarchy:
    post:
      summary: Get MD5 hash hierarchy for specified collection, patient, study, or series.
      description: Returns MD5 hash hierarchy.
      tags:
        - Patient Metadata
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Collection:
                  type: string
                  description: Name of the collection.
                PatientId:
                  type: string
                  description: DICOM Tag (0010,0020) – De-identified patient ID.
                StudyInstanceUID:
                  type: string
                  description: DICOM Tag (0020,000D) – Unique identifier for the study.
                SeriesInstanceUID:
                  type: string
                  description: DICOM Tag (0020,000E) – Unique identifier for the series.
      responses:
        '200':
          description: Successful response with MD5 hash
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized – Invalid or missing access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      security:
        - oauth2: []

  /getMD5HashForImage:
    get:
      summary: Get MD5 hash for a single image.
      description: Returns MD5 hash for the given SOPInstanceUID.
      tags:
        - Patient Metadata
      parameters:
        - name: SOPInstanceUID
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with MD5 hash
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized – Invalid or missing access token
        '500':
          description: Internal server error
      security:
        - oauth2: []

  /getManifestFromPatientStudySeries:
    post:
      summary: Generate a manifest from patient, study, and series UIDs.
      description: |
        Returns a manifest file containing series for the specified patient, study, or series UIDs.
        
      tags:
        - Image Downloads
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - patientIDs
              properties:
                patientIDs:
                  type: string
                  description: Comma-separated patient IDs. (e.g. ISPY1_1001,ISPY1_1002)
                studyUIDs:
                  type: string
                  description: Comma-separated studyInstanceUIDs (optional).
                seriesUIDs:
                  type: string
                  description: Comma-separated seriesInstanceUIDs (optional).
                anyOrAll:
                  type: string
                  description: Criteria filter (optional).
                includeAnnotation:
                  type: string
                  description: Whether to include annotations (true/false).
      responses:
        '200':
          description: Manifest text file generated successfully.
          content:
            text/plain:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
        '400':
          description: Bad request – Missing or invalid parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized – Invalid or missing access token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      security:
        - oauth2: [] 
        
  /getManifestText:
    post:
      summary: Generate a manifest file for a list of series.
      description: |
        Returns a manifest text file containing series UIDs and download instructions for the NBIA Data Retriever.
        
      tags:
        - Image Downloads
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - list
              properties:
                list:
                  type: string
                  description: Comma-separated list of series UIDs for each series you want to download.
                includeAnnotation:
                  type: boolean
                  description: If true, annotations are included in the manifest.
                format:
                  type: string
                  enum: [json, xml, csv]
                  default: json
                  description: Desired response format (json, xml, csv).
      responses:
        '200':
          description: Successfully generated manifest text.
          content:
            text/plain:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
        '400':
          description: Bad request – Missing or invalid parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized – Invalid or missing access token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      security:
        - oauth2: []
  /getManifestForSimpleSearch:
    post:
      summary: Generate a manifest file from simple search criteria.
      description: |
        Creates a manifest file from the specified simple search parameters,
        which can be used with the NBIA Data Retriever.
        
      tags:
        - Image Downloads
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                criteriaType0:
                  type: string
                  description: Field name to filter on (e.g., CollectionCriteria)
                value0:
                  type: string
                  description: Value to match for the specified criteriaType0
                sortField:
                  type: string
                  description: Field by which to sort the manifest results
                sortDirection:
                  type: string
                  enum: [ascending, descending]
                  description: Direction to sort the results
                start:
                  type: integer
                  description: Starting index of the result set
                size:
                  type: integer
                  description: Number of results to return
                AuthorizationCriteria:
                  type: string
                ImageModalityCriteria:
                  type: string
                CollectionCriteria:
                  type: string
                SpeciesCriteria:
                  type: string
                PatientSexCriteria:
                  type: string
                AnatomicalSiteCriteria:
                  type: string
                BodyPartExaminedCriteria:
                  type: string
                ManufacturerCriteria:
                  type: string
                ModelCriteria:
                  type: string
                SoftwareVersionCriteria:
                  type: string
                DateRangeCriteria:
                  type: string
                PatientAgeRangeCriteria:
                  type: string
                DescriptionCriteria:
                  type: string
                PixelSpacingRangeCriteria:
                  type: string
                SliceThicknessRangeCriteria:
                  type: string
                PatientCriteria:
                  type: string
                StudyCriteria:
                  type: string
                SeriesCriteria:
                  type: string
                MinNumberOfStudiesCriteria:
                  type: string
                MinNumberOfStudyDatesCriteria:
                  type: string
                ModalityAndedSearchCriteria:
                  type: string
                PhantomCriteria:
                  type: string
                ThirdPartyAnalysisCriteria:
                  type: string
                DataLicenseCriteria:
                  type: string
                TimePointCriteria:
                  type: string
                DynamicSearchCriteria:
                  type: string
      responses:
        '200':
          description: Manifest file generated successfully
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Bad request – Missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing or invalid input.
        '401':
          description: Unauthorized – Invalid or missing access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized access.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: An unexpected error occurred.
      security:
        - oauth2: []

  /getDicomTags:
    get:
      summary: Retrieve DICOM metadata for a specific series.
      description: |
        Returns metadata (DICOM tags and values) for the specified SeriesInstanceUID.
        
      tags:
        - Series Metadata
      parameters:
        - name: SeriesUID
          in: query
          description: SeriesInstanceUID for which to retrieve DICOM tags
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with DICOM tags
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    element:
                      type: string
                      description: DICOM element tag (e.g., (0028,0010))
                    name:
                      type: string
                      description: Name of the DICOM tag
                    data:
                      type: string
                      description: Value associated with the tag
        '400':
          description: Bad request – Missing or invalid SeriesUID
        '401':
          description: Unauthorized – Invalid or missing access token
        '404':
          description: SeriesUID not found
        '500':
          description: Internal server error
   

  /getCollectionDescriptions:
    get:
      summary: Retrieve detailed metadata for NBIA collections.
      description: |
        Returns metadata for collections, including HTML-formatted descriptions, timestamps, submitter username, and DOI links.
        You may optionally filter by collection name.      
      tags:
        - Collection Metadata
      parameters:
        - name: collectionName
          in: query
          required: false
          schema:
            type: string
          description: Collection name to filter results
      responses:
        '200':
          description: Successful response with collection descriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    description:
                      type: string
                      description: HTML-formatted description of the collection
                    id:
                      type: integer
                      description: Internal identifier for the collection metadata
                    collectionDescTimestamp:
                      type: integer
                      description: Last update timestamp (epoch format)
                    collectionName:
                      type: string
                      description: Name of the collection
                    userName:
                      type: string
                      description: User who submitted or last updated the description
                    licenseId:
                      type: integer
                      nullable: true
                      description: Internal license reference ID (often null)
                    descriptionURI:
                      type: string
                      description: DOI or external metadata page link for the collection
        '401':
          description: Unauthorized – Invalid or missing access token
        '500':
          description: Internal server error
      security:
        - oauth2: []

  
  /getCollectionOrSeriesForDOI:
    post:
      summary: Resolve a DOI to a collection or series.
      x-code-samples:
        - lang: curl
          source: |
            curl -X POST "https://services.cancerimagingarchive.net/nbia-api/services/getCollectionOrSeriesForDOI" \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer YOUR_TOKEN" \
              -d '{
                "DOI": "https://doi.org/10.7937/K9/TCIA.2016.ELN8YGLE&CollectionOrSeries=collection",
                             }'
      description: |
        Resolves a DOI to its associated NBIA collection name or SeriesInstanceUID.
        Specify CollectionOrSeries=collection to resolve to a collection name or CollectionOrSeries=series to resolve to SeriesInstanceUID.
      tags:
        - Collection Metadata
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DOI:
                  type: string
                  description: Digital Object Identifier (DOI) to resolve
                CollectionOrSeries:
                  type: string
                  enum: [collection, series]
                  default: collection
                  description: Whether to search for a collection or a series 
      responses:
        '200':
          description: Successful response with resolved collection or series
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    collection:
                      type: string
                      nullable: true
                      description: Name of the collection (if resolved to a collection)
                    seriesInstanceUID:
                      type: string
                      nullable: true
                      description: SeriesInstanceUID (if resolved to a series)
                    thirdPartyAnalysis:
                      type: string
                      nullable: true
                      description: Reserved field (currently unused)
        '400':
          description: Bad request – Missing or invalid parameters
        '401':
          description: Unauthorized – Invalid or missing access token
        '404':
          description: DOI not found
        '500':
          description: Internal server error
      security:
        - oauth2: []
  /getManufacturerValuesAndCounts:
    get:
      summary: Retrieve manufacturer values and their occurrence counts.
      description: |
        Returns manufacturer names and the number of times each appears in the database,
        along with authorization information.
        
      tags:
        - Utilities
      parameters:
        - name: Collection
          in: query
          required: false
          schema:
            type: string
        - name: Modality
          in: query
          required: false
          schema:
            type: string
        - name: BodyPartExamined
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response with manufacturer counts and authorization
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    manufacturer:
                      type: string
                      description: Manufacturer name
                    count:
                      type: integer
                      description: Number of series produced by this manufacturer
                    Authorized:
                      type: integer
                      description: User has access to the specified collection. 1 means yes and 0 means no.
        '401':
          description: Unauthorized – Invalid or missing access token
        '500':
          description: Internal server error
      security:
        - oauth2: []

  /getModalityValuesAndCounts:
    get:
      summary: Retrieve modality values and their occurrence counts.
      description: |
        Returns modality types along with how often each appears in the database,
        and whether the user is authorized to access the associated collection.
        
      tags:
        - Utilities
      parameters:
        - name: Collection
          in: query
          required: false
          schema:
            type: string
        - name: BodyPartExamined
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response with modality counts and authorization
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    modality:
                      type: string
                      description: Modality type (e.g., CT, MR)
                    count:
                      type: integer
                      description: Number of series using this modality
                    Authorized:
                      type: integer
                      description: User has access to the specified collection. 1 means yes and 0 means no.
        '401':
          description: Unauthorized – Invalid or missing access token
        '500':
          description: Internal server error
      security:
        - oauth2: []

  /getCollectionValuesAndCounts:
    get:
      summary: Retrieve collection names and patient counts.
      description: |
        Returns all collection names, patient counts, and authorization status.
        
      tags:
        - Collection Metadata
      responses:
        '200':
          description: Successful response with collection counts and authorization
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    collection:
                      type: string
                      description: Collection name
                    count:
                      type: integer
                      description: Number of patients in the collection
                    Authorized:
                      type: integer
                      description: User has access to the specified collection. 1 means yes and 0 means no.
        '401':
          description: Unauthorized – Invalid or missing access token
        '500':
          description: Internal server error
      security:
        - oauth2: []

  /getBodyPartValuesAndCounts:
    get:
      summary: Retrieve body part values and their occurrence counts.
      description: |
        Returns a list of body part names along with the number of times each appears in the database.
        Optionally filter by Collection or Modality.    
      tags:
        - Patient Metadata
      parameters:
        - name: Collection
          in: query
          required: false
          schema:
            type: string
        - name: Modality
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response with body part counts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    bodyPart:
                      type: string
                      description: Body part name
                    count:
                      type: integer
                      description: Number of series/studies with this body part
                    Authorized:
                      type: integer
                      description: User has access to the specified collection. 1 means yes and 0 means no.
        '401':
          description: Unauthorized – Invalid or missing access token
        '500':
          description: Internal server error
      security:
        - oauth2: []

  /getPatient:
    get:
      summary: Retrieve patients in a collection.
      description: |
        Returns a list of de-identified patients associated with the specified collection.
        
      tags:
        - Patient Metadata
      parameters:
        - name: format
          in: query
          description: Desired response format (json, xml, csv)
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
        - name: PatientId
          in: query
          description: De‑identified PatientID (optional – restricts results to a single patient)
          required: false
          schema:
            type: string
        - name: Collection
          in: query
          required: true
          schema:
            type: string
          description: Name of the collection to retrieve patients from
      responses:
        '200':
          description: Successful response with patient metadata
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    PatientId:
                      type: string
                      description: DICOM Tag (0010,0020) – De-identified patient ID
                    PatientName:
                      type: string
                      description: DICOM Tag (0010,0010) – De-identified patient name
                    PatientSex:
                      type: string
                      description: DICOM Tag (0010,0040) – Patient’s sex
                    PatientBirthDate:
                      type: string
                      format: date
                      description: DICOM Tag (0010,0030) – De-identified birth date
                    EthnicGroup:
                      type: string
                      description: DICOM Tag (0010,2160) – Ethnic group of the patient
                    Authorized:
                      type: integer
                      description: User has access to the specified collection. 1 means yes and 0 means no.
        '400':
          description: Bad request – Missing or invalid parameters
        '401':
          description: Unauthorized – Invalid or missing access token
        '500':
          description: Internal server error
      security:
        - oauth2: []

  /getPatientStudy:
    get:
      summary: Retrieve studies for patients in a collection.
      description: |
        Returns metadata for studies associated with patients in the specified collection.
        You can optionally filter by PatientID.
        
      tags:
        - Patient Metadata
      parameters:
        - name: format
          in: query
          description: Desired response format (json, xml, csv)
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
        - name: Collection
          in: query
          description: Name of the image collection
          required: true
          schema:
            type: string
        - name: PatientID
          in: query
          description: De‑identified PatientID (optional – restricts results to a single patient)
          required: false
          schema:
            type: string
        - name: StudyInstanceUID
          in: query
          description: DICOM Tag (0020,000D) – Unique identifier for the study
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response with study metadata
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    StudyDate:
                      type: string
                      format: date
                      description: DICOM Tag (0008,0020) – Date the study was performed
                    StudyDescription:
                      type: string
                      description: DICOM Tag (0008,1030) – Description of the study
                    PatientID:
                      type: string
                      description: DICOM Tag (0010,0020) – De‑identified Patient ID
                    PatientName:
                      type: string
                      description: DICOM Tag (0010,0010) – De‑identified Patient Name
                    PatientSex:
                      type: string
                      description: DICOM Tag (0010,0040) – Sex of the patient
                    Collection:
                      type: string
                      description: Name of the collection
                    SeriesCount:
                      type: integer
                      description: Number of series in this study
                    Authorized:
                      type: integer
                      description: User has access to the specified collection. 1 means yes and 0 means no.
        '400':
          description: Bad request – Missing or invalid parameters
        '401':
          description: Unauthorized – Invalid or missing access token
        '500':
          description: Internal server error
      security:
        - oauth2: []

  /getUpdatedSeries:
    get:
      summary: Retrieve updated series in a collection since a specified date.
      description: |
        Returns a list of SeriesInstanceUIDs for imaging series in a given collection that have been updated on or after the specified date.
        
      tags:
        - Series Metadata
      parameters:
        - name: Collection
          in: query
          required: false
          schema:
            type: string
          description: Name of the image collection
        - name: fromDate
          in: query
          required: true
          schema:
            type: string
          description: Date in MM/DD/YYYY format. Returns series updated on or after this date.
        - name: format
          in: query
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
          description: Desired response format (json, xml, or csv)
      responses:
        '200':
          description: Successful response with updated SeriesInstanceUIDs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: DICOM Tag (0020,000E) – Unique identifier for a DICOM series
        '400':
          description: Bad request – Missing or invalid parameters
        '401':
          description: Unauthorized – Invalid or missing access token
        '404':
          description: No updated series found
        '500':
          description: Internal server error
      security:
        - oauth2: []

  /getSOPInstanceUIDS:
    get:
      summary: Retrieve SOP Instance UIDs for a DICOM series.
      description: |
        Returns a list of SOPInstanceUIDs (unique image identifiers) associated with the specified SeriesInstanceUID.
        Useful for accessing or referencing individual DICOM images.
        
      tags:
        - Series Metadata
      parameters:
        - name: SeriesInstanceUID
          in: query
          required: true
          schema:
            type: string
          description: DICOM Tag (0020,000E) – Unique identifier for the DICOM series
      responses:
        '200':
          description: Successful response with SOPInstanceUIDs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: DICOM Tag (0008,0018) – Unique identifier for an individual DICOM image
        '400':
          description: Bad request – Missing or invalid SeriesInstanceUID
        '401':
          description: Unauthorized – Invalid or missing access token
        '404':
          description: Series not found or contains no images
        '500':
          description: Internal server error
      security:
        - oauth2: []

  /getSeriesSize:
    get:
      summary: Retrieve size and image count for a DICOM series.
      description: |
        Returns the number of images and total file size (in bytes) for the specified SeriesInstanceUID.
        Useful for estimating storage requirements before downloading.
        
      tags:
        - Series Metadata
      parameters:
        - name: SeriesInstanceUID
          in: query
          required: true
          schema:
            type: string
          description: DICOM Tag (0020,000E) – Unique identifier for the image series
        - name: format
          in: query
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
          description: Desired output format.
      responses:
        '200':
          description: Successful response with image count and total size
          content:
            application/json:
              schema:
                type: object
                properties:
                  imageCount:
                    type: integer
                    description: Number of images in the series
                  seriesSize:
                    type: integer
                    description: Total size in bytes of the series
        '400':
          description: Bad request – Missing or invalid SeriesInstanceUID
        '401':
          description: Unauthorized – Invalid or missing access token
        '404':
          description: Series not found
        '500':
          description: Internal server error
      security:
        - oauth2: []       
  /getSeriesMetadata:
    post:
      summary: Retrieve detailed metadata for a DICOM series.
      description: |
        Returns a list of metadata fields and values for the specified SeriesInstanceUID.
        This includes DICOM tags and related technical attributes.
        
      tags:
        - Series Metadata
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                list:
                  type: string
                  description: Comma-separated list of SeriesInstanceUIDs (DICOM Tag 0020,000E)
      responses:
        '200':
          description: Successful response with series metadata key-value pairs
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: Bad request – Missing or invalid SeriesInstanceUID
        '401':
          description: Unauthorized – Invalid or missing access token
        '404':
          description: SeriesInstanceUID not found
        '500':
          description: Internal server error
      security:
        - oauth2: []
  /getSeries:
    get:
      summary: Retrieve DICOM series metadata.
      description: |
        Returns metadata for imaging series based on optional filters like Collection, PatientID, StudyInstanceUID,
        Modality, BodyPartExamined, Manufacturer, ManufacturerModelName, and SeriesInstanceUID.
        
      tags:
        - Series Metadata
      parameters:
        - name: SeriesInstanceUID
          in: query
          required: false
          schema:
            type: string
          description: Filter results by SeriesInstanceUID.
        - name: StudyInstanceUID
          in: query
          required: false
          schema:
            type: string
          description: Filter results by StudyInstanceUID.
        - name: format
          in: query
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
          description: Desired output format.
        - name: Collection
          in: query
          required: false
          schema:
            type: string
          description: Filter results by collection name.
        - name: ManufacturerModelName
          in: query
          required: false
          schema:
            type: string
          description: Filter results by ManufacturerModelName.
        - name: PatientID
          in: query
          required: false
          schema:
            type: string
          description: Filter results by patient ID.
        - name: Manufacturer
          in: query
          required: false
          schema:
            type: string
          description: Filter results by manufacturer.
        - name: BodyPartExamined
          in: query
          required: false
          schema:
            type: string
          description: Filter results by body part examined.
        - name: Modality
          in: query
          required: false
          schema:
            type: string
          description: Filter results by imaging modality (e.g., CT, MR).
      responses:
        '200':
          description: Successful response with series metadata
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    SeriesInstanceUID:
                      type: string
                      description: DICOM Tag (0020,000E) – Unique identifier for the imaging series
                    StudyInstanceUID:
                      type: string
                      description: DICOM Tag (0020,000D) – Unique identifier for the study
                    SeriesDate:
                      type: string
                      format: date
                      description: DICOM Tag (0008,0021) – Date the series was performed
                    Modality:
                      type: string
                      description: DICOM Tag (0008,0060) – Modality of the imaging series (e.g., CT, MR)
                    SeriesDescription:
                      type: string
                      description: DICOM Tag (0008,103E) – Description of the series
                    BodyPartExamined:
                      type: string
                      description: DICOM Tag (0018,0015) – Anatomical region examined
                    SeriesNumber:
                      type: integer
                      description: DICOM Tag (0020,0011) – Number identifying the series within the study
                    Manufacturer:
                      type: string
                      description: DICOM Tag (0008,0070) – Name of the manufacturer of the equipment
                    ImageCount:
                      type: integer
                      description: Number of images in the series
                    PatientID:
                      type: string
                      description: DICOM Tag (0010,0020) – De-identified patient ID
                    Collection:
                      type: string
                      description: Collection name that the series belongs to
        '400':
          description: Bad request – Missing or invalid parameters
        '401':
          description: Unauthorized – Invalid or missing access token
        '500':
          description: Internal server error
      security:
        - oauth2: []

  /getPatientByCollectionAndModality:
    get:
      summary: Retrieve patients in a collection filtered by modality.
      description: |
        Returns a list of de-identified patients associated with a specific collection and imaging modality.
        
      tags:
        - Patient Metadata
      parameters:
        - name: format
          in: query
          description: Desired response format (json, xml, csv)
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
        - name: Collection
          in: query
          description: Name of the image collection
          required: true
          schema:
            type: string
        - name: Modality
          in: query
          description: Imaging modality to filter by (e.g., CT, MR)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with patient metadata
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    PatientID:
                      type: string
                      description: DICOM Tag (0010,0020) – De-identified patient ID
                    PatientName:
                      type: string
                      description: DICOM Tag (0010,0010) – De-identified patient name
                    PatientSex:
                      type: string
                      description: DICOM Tag (0010,0040) – Patient’s sex
                    PatientBirthDate:
                      type: string
                      format: date
                      description: DICOM Tag (0010,0030) – De-identified birth date
                    EthnicGroup:
                      type: string
                      description: DICOM Tag (0010,2160) – Ethnic group of the patient
                    Authorized:
                      type: integer
                      description: User has access to the specified collection. 1 means yes and 0 means no.
        '400':
          description: Bad request – Missing or invalid parameters
        '401':
          description: Unauthorized – Invalid or missing access token
        '500':
          description: Internal server error
      security:
        - oauth2: []

  /NewStudiesInPatientCollection:
    get:
      summary: Retrieve new studies in a patient collection since a specified date.
      description: |
        Returns a list of studies for patients that were added to the specified collection on or after the given date.
        
      tags:
        - Study Metadata
      parameters:
        - name: PatientID
          in: query
          description: De‑identified PatientID (optional – restricts results to a single patient)
          required: false
          schema:
            type: string
        - name: format
          in: query
          description: Desired response format (json, xml, csv)
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
        - name: Collection
          in: query
          description: Name of the image collection
          required: true
          schema:
            type: string
        - name: Date
          in: query
          description: Date in MM/DD/YYYY format to filter new studies
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with study metadata
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    PatientID:
                      type: string
                      description: DICOM Tag (0010,0020) – De-identified patient ID
                    StudyInstanceUID:
                      type: string
                      description: DICOM Tag (0020,000D) – Unique identifier for the study
                    StudyDate:
                      type: string
                      format: date
                      description: DICOM Tag (0008,0020) – Date the study was performed
                    StudyDescription:
                      type: string
                      description: DICOM Tag (0008,1030) – Description of the study
                    AccessionNumber:
                      type: string
                      description: DICOM Tag (0008,0050) – Identifier for the study requested
                    StudyID:
                      type: string
                      description: DICOM Tag (0020,0010) – User or system-supplied ID for the study
                    Collection:
                      type: string
                      description: Name of the image collection
                    Authorized:
                      type: integer
                      description: User has access to the specified collection. 1 means yes and 0 means no.
        '400':
          description: Bad request – Missing or invalid parameters
        '401':
          description: Unauthorized – Invalid or missing access token
        '500':
          description: Internal server error
      security:
        - oauth2: []

  /NewPatientsInCollection:
    get:
      summary: Retrieve new patients in a collection since a specified date.
      description: |
        Returns a list of patients added to a specified collection since a given date.
        
      tags:
        - Patient Metadata
      parameters:
        - name: format
          in: query
          description: Desired response format (json, xml, csv)
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
        - name: Collection
          in: query
          description: Name of the collection
          required: true
          schema:
            type: string
        - name: Date
          in: query
          description: Date in MM/DD/YYYY format to filter new patients
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with patient data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    PatientID:
                      type: string
                      description: DICOM Tag (0010,0020) – De-identified patient identifier.
                    PatientName:
                      type: string
                      description: DICOM Tag (0010,0010) – De-identified patient name.
                    PatientBirthDate:
                      type: string
                      format: date
                      description: DICOM Tag (0010,0030) – De-identified birth date.
                    PatientSex:
                      type: string
                      description: DICOM Tag (0010,0040) – Patient's sex.
                    EthnicGroup:
                      type: string
                      description: DICOM Tag (0010,2160) – Ethnic group of the patient.
                    Collection:
                      type: string
                      description: Label for the image collection.
                    Phantom:
                      type: string
                      description: DICOM Tag (0010,0200) – Indicates if the subject is a quality control phantom.
                    SpeciesCode:
                      type: string
                      description: DICOM Tag (0010,2202) – Taxonomic rank value of the patient.
                    SpeciesDescription:
                      type: string
                      description: DICOM Tag (0010,2201) – Description of the species.
                    Authorized:
                      type: integer
                      description: User has access to the specified collection. 1 means yes and 0 means no.
        '400':
          description: Bad request – Missing or invalid parameters
        '401':
          description: Unauthorized – Invalid or missing access token
        '500':
          description: Internal server error
      security:
        - oauth2: []
  /getModalityValues:
    get:
      summary: Retrieve available modality values.
      description: |
        Returns a list of modality types (e.g., CT, MR, PET) available in the NBIA database.
        Optional query parameters allow filtering by collection name and body part examined.
        
      tags:
        - Utilities
      parameters:
        - name: Collection
          in: query
          description: Filter results by collection name
          required: false
          schema:
            type: string
        - name: BodyPartExamined
          in: query
          description: Filter results by body part examined
          required: false
          schema:
            type: string
        - name: format
          in: query
          description: Desired response format (json, xml, csv).
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
      responses:
        '200':
          description: Successful response with modality values
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Bad request – Missing or invalid parameters
        '401':
          description: Unauthorized – Invalid or missing access token
        '500':
          description: Internal server error
      security:
        - oauth2: []
  /getImage:
    get:
      summary: Download a ZIP of DICOM images for a given SeriesInstanceUID.
      description: |
        Retrieves a ZIP archive containing all DICOM images associated with the specified SeriesInstanceUID.
        Optionally, you can specify whether to use new file naming conventions.
      tags:
        - Image Downloads
      parameters:
        - name: SeriesInstanceUID
          in: query
          description: The unique identifier for the image series.
          required: true
          schema:
            type: string
        - name: NewFileNames
          in: query
          description: >
            If set to 'Yes', the naming scheme changes from sequential numbers to 'acquisition number - instance number'.
          required: false
          schema:
            type: string
            enum: [Yes, No]
      responses:
        '200':
          description: A ZIP file containing the DICOM images.
          content:
            '*/*':
              schema:
                type: string
                format: binary
        '400':
          description: Bad request – Missing or invalid parameters.
        '401':
          description: Unauthorized – Invalid or missing access token.
        '404':
          description: SeriesInstanceUID not found.
        '500':
          description: Internal server error.
      security:
        - oauth2: []
  /getImageWithMD5Hash:
    get:
      summary: Download a ZIP of DICOM images with MD5 hashes for a given SeriesInstanceUID.
      description: |
        Retrieves a ZIP archive containing all DICOM images associated with the specified SeriesInstanceUID, along with their corresponding MD5 hash values for integrity verification.
        
      tags:
        - Image Downloads
      parameters:
        - name: SeriesInstanceUID
          in: query
          description: The unique identifier for the image series.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A ZIP file containing the DICOM images and their MD5 hash values.
          content:
            '*/*':
              schema:
                type: string
                format: binary
        '400':
          description: Bad request – Missing or invalid parameters.
        '401':
          description: Unauthorized – Invalid or missing access token.
        '404':
          description: SeriesInstanceUID not found.
        '500':
          description: Internal server error.
      security:
        - oauth2: []

  /getCollectionValues:
    get:
      summary: Retrieve available collection values.
      description: Returns a list of available collection names in NBIA.
      tags:
        - Collection Metadata
      security:
        - oauth2: []
      responses:
        '200':
          description: A list of collection names.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Collection'
        '401':
          description: Unauthorized. Authentication token is missing or invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized access.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: An unexpected error occurred.
  /getManufacturerValues:
    get:
      summary: Retrieve available manufacturer values.
      description: |
        Returns a list of manufacturer names filtered by optional query parameters.
        
      tags:
        - Utilities
      parameters:
        - name: Collection
          in: query
          description: Filter results by collection name
          required: false
          schema:
            type: string
        - name: BodyPartExamined
          in: query
          description: Filter results by body part examined
          required: false
          schema:
            type: string
        - name: Modality
          in: query
          description: Filter results by modality
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response with manufacturer names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Bad request – Missing or invalid parameters
        '401':
          description: Unauthorized – Invalid or missing access token
        '500':
          description: Internal server error
      security:
        - oauth2: []

  /getBodyPartValues:
    get:
      summary: Retrieve available body part values.
      description: Returns a list of body part names filtered by optional query parameters.
      tags:
        - Utilities
      parameters:
        - name: Collection
          in: query
          description: Filter results by collection name
          required: false
          schema:
            type: string
        - name: Modality
          in: query
          description: Filter results by modality
          required: false
          schema:
            type: string
        - name: format
          in: query
          description: Desired response format (json, xml, csv).
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    BodyPartExamined:
                      type: string
                      description: Name of the body part
        '401':
          description: Unauthorized – Invalid or missing access token
        '500':
          description: Internal server error
      security:
        - oauth2: []

