openapi: 3.1.0
info:
  title: NBIA API
  description: |
    This API provides access to the National Biomedical Imaging Archive (NBIA) for searching and downloading imaging data, including restricted collections requiring authentication.
  termsOfService: https://www.cancerimagingarchive.net/terms-of-service/
  contact:
    email: help@cancerimagingarchive.net
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 4.0.0
servers:
  - url: https://nbia.cancerimagingarchive.net/nbia-api/services/v4/
    description: v4 Production server
  - url: https://nbia-stage.cancerimagingarchive.net/nbia-api/services/v4/
    description: v4 Stage Server
tags:
  - name: Image Downloads
    description: Endpoints for downloading DICOM images and thumbnails
  - name: Collection Metadata
    description: Collection information and descriptions
  - name: Patient Metadata
    description: Patient-related data retrieval
  - name: Study Metadata
    description: Study-level metadata operations
  - name: Series Metadata
    description: Series-level metadata and operations
  - name: Utilities
    description: Helper endpoints for values, counts, and validation
components:
  schemas:
    Collection:
      type: object
      properties:
        collection:
          type: string
          description: Name of the collection
          example: "TCGA-LUAD"
      required:
        - collection
    CriteriaTypeEnum:
      type: string
      description: |
        Enum of criteria types used for filtering search results.
        Each criterion corresponds to a specific filter that can be applied in searches.

        **General Section**:
        - `CollectionCriteria`: Data collection or study name
        - `DateRangeCriteria`: Date range for the study (e.g., start and end dates, in MM-DD-YYYY format)
        - `ExcludeCommercialCriteria`: Exclude commercial use
        - `PatientCriteria`: PatientID or (subject ID in the case of TCIA), one or more patient IDs separated by commas
        - `SeriesCriteria`: SeriesUID or SeriesInstanceUID, one or more series UIDs separated by commas
        - `StudyCriteria`: StudyUIDs, one or more study UIDs separated by commas
        - `ThirdPartyAnalysis`: Third-party analysis criteria

        **Patient Section**:
        - `MinNumberOfStudiesCriteria`: Minimum number of studies per patient
        - `MinNumberOfStudyDatesCriteria`: Minimum number of study dates per patient
        - `PatientAgeRangeCriteria`: Age range of the patient, max-age is 90 (more than 90 is considered as 90 years old)
        - `PatientSexCriteria`: Sex of the patient, options are 'Female', 'Male', 'Not Specified (Null)'
        - `PhantomCriteria`: Phantom-related criteria
        - `SpeciesCriteria`: Species-related criteria
        - `TimePointCriteria`: Time point criteria

        **Image Section**:
        - `BodyPartExaminedCriteria`: Specific body part examined (e.g., brain, lung)
        - `DescriptionCriteria`: Description of the image, Free-text metadata search  
        - `ImageModalityCriteria`: Imaging modality (CT, MRI, etc.)
        - `ManufacturerCriteria`: Manufacturer of the imaging equipment
        - `PixelSpacingRangeCriteria`: Range of pixel spacing values - row spacing only
        - `SliceThicknessRangeCriteria`: Range of slice thickness values
        
      enum:
        - CollectionCriteria
        - DateRangeCriteria
        - ExcludeCommercialCriteria
        - PatientCriteria
        - SeriesCriteria
        - StudyCriteria
        - ThirdPartyAnalysis
        - MinNumberOfStudiesCriteria
        - MinNumberOfStudyDatesCriteria
        - PatientAgeRangeCriteria
        - PatientSexCriteria
        - PhantomCriteria
        - SpeciesCriteria
        - TimePointCriteria
        - BodyPartExaminedCriteria
        - DescriptionCriteria
        - ImageModalityCriteria
        - ManufacturerCriteria
        - PixelSpacingRangeCriteria
        - SliceThicknessRangeCriteria

paths:
  /getSpeciesTax:
    get:
      summary: Retrieve species taxonomy.
      description: |
        Returns the current species taxonomy.

        **Example curl command:**
        ```bash
        curl -X POST -H "Content-Type: application/json" -k "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getSpeciesTax"
        ```
      tags:
        - Utilities
      responses:
        '200':
          description: Successful taxonomy list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    speciesCode:
                      type: string
                    speciesDescription:
                      type: string
              examples:
                default:
                  summary: Example Species Taxonomy
                  value:
                    - speciesCode: "337915000"
                      speciesDescription: "Homo sapiens"
                    - speciesCode: "447612001"
                      speciesDescription: "Mus musculus"
                    - speciesCode: "448771007"
                      speciesDescription: "Canis lupus familiaris"
            text/plain:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    speciesCode:
                      type: string
                    speciesDescription:
                      type: string
        '500':
          description: Internal server error
     
  /getSimpleSearch:
    post:
      summary: Perform a paged search with customizable criteria.
      description: |
        Performs a search with customizable criteria and returns results matching the specified filters.
        To use this endpoint, specify one or more search criteria by providing the name of the criterion in the `criteriaType0` (and, if applicable, `criteriaType1`, `criteriaType2`, etc.) parameter(s), and the corresponding value(s) in `value0` (and `value1`, `value2`, etc.).
        The `sortField` parameter allows you to specify the field by which to sort the results, and `sortDirection` specifies whether to sort in ascending or descending order.
        The `start` parameter is used for paged results, indicating the offset from which to start returning results, and `size` specifies the number of results to return per page.

        Allowed values for `criteriaTypeX`: See `CriteriaTypeEnum` schema in the Schemas section below.
        
        **Example curl command:**
        ```bash
        curl 'https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getSimpleSearch' \
          -H 'accept: application/json' \
          -H 'Content-Type: application/x-www-form-urlencoded' \
          -d 'criteriaType0=CollectionCriteria&value0=TCGA-GBM&sortField=PatientID&sortDirection=ascending&start=0&size=2&format=json'
        ```
  
      tags:
        - Patient Metadata
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                criteriaType0:
                  $ref: '#/components/schemas/CriteriaTypeEnum'
                value0:
                  type: string
                  description: Value for the first search criterion.
                sortField:
                  type: string
                  description: Field to sort by (e.g., subject)
                  default: collection
                sortDirection:
                  type: string
                  enum: [ascending, descending]
                  description: Sort direction
                  default: ascending
                start:
                  type: integer
                  description: Offset for paged results
                  default: 0
                size:
                  type: integer
                  description: Page size
                  default: 25
                format:
                  type: string
                  enum: [json, xml, csv]
                  default: json
                  description: Desired response format (json, xml, csv).
              example:
                criteriaType0: "CollectionCriteria"
                value0: "TCGA-GBM"
                sortField: "PatientID"
                sortDirection: "ascending"
                start: 0
                size: 2
                format: "json"
      responses:
        '200':
          description: Successful search results
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    PatientID:
                      type: string
                    PatientName:
                      type: string
                    PatientSex:
                      type: string
                    PatientBirthDate:
                      type: string
                      format: date
                    StudyInstanceUID:
                      type: string
                    StudyDate:
                      type: string
                    Modality:
                      type: string
                    BodyPartExamined:
                      type: string
                    Collection:
                      type: string
                    Manufacturer:
                      type: string
                    SliceThickness:
                      type: number
                    PixelSpacing:
                      type: string
                    SeriesUID:
                      type: string
              example:
                - PatientID: "TCIA-001"
                  PatientName: "Anonymous"
                  PatientSex: "Female"
                  PatientBirthDate: "1965-03-22"
                  StudyInstanceUID: "1.2.840.113619.2.55.3.604688405.781.1554839724.467"
                  StudyDate: "2019-04-09"
                  Modality: "CT"
                  BodyPartExamined: "Chest"
                  Collection: "LIDC-IDRI"
                  Manufacturer: "GE MEDICAL SYSTEMS"
                  SliceThickness: 1.25
                  PixelSpacing: "0.703125"
                  SeriesUID: "1.2.840.113619.2.55.3.604688405.781.1554839756.835"
                - PatientID: "TCIA-002"
                  PatientName: "Anonymous"
                  PatientSex: "Male"
                  PatientBirthDate: "1952-11-07"
                  StudyInstanceUID: "1.3.6.1.4.1.14519.5.2.1.6279.6001.298806137288633453246975630178"
                  StudyDate: "2020-07-11"
                  Modality: "MR"
                  BodyPartExamined: "Brain"
                  Collection: "TCGA-GBM"
                  Manufacturer: "Siemens"
                  SliceThickness: 5.0
                  PixelSpacing: "0.9375"
                  SeriesUID: "1.3.6.1.4.1.14519.5.2.1.6279.6001.223679780596407876485803138694"
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error
          
  /getMD5Hierarchy:
    post:
      summary: Get MD5 hash for DICOM object hierarchy
      description: |
        Returns an MD5 hash representing the hierarchy of DICOM objects based on the specified level (series, study, patient, or collection).

        Only one hierarchy level should be specified per request.

        **Note:** The response is returned as `text/plain`.

        **Example curl command:**
        ```bash
        curl -X POST \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -d "SeriesInstanceUID=1.2.3.4.5" \
          https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getMD5Hierarchy
        ```
      tags:
        - Utilities
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SeriesInstanceUID:
                  type: string
                  description: The series UID to generate a hash from.
                  example: "1.3.6.1.4.1.14519.5.2.1.1600.1201.118372230250017912588165730372"
                StudyInstanceUID:
                  type: string
                  description: The study UID to generate a hash from.
                  example: "1.3.6.1.4.1.14519.5.2.1.1600.1201.238264055930002373254453629668"
                PatientID:
                  type: string
                  description: The patient ID to generate a hash from.
                  example: "CMB-CRC-MSB-01068"
                Collection:
                  type: string
                  description: The collection name to generate a hash from.
                  example: "CMB-CRC"
      responses:
        '200':
          description: MD5 hash generated successfully.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request – Invalid or unsupported parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    
  /getMD5HashForImage:
   get:
     summary: Get MD5 hash for a single image
     description: |
       Returns the MD5 hash for the given SOPInstanceUID.
 
       **Example curl command:**
       ```bash
       curl -X GET -H "Content-Type: application/json" -k "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getMD5HashForImage?SOPInstanceUID=1.3.6.1.4.1.14519.5.2.1.6834.5010.129790817462380794533151446268&format=json"
       ```
     tags:
       - Patient Metadata
     parameters:
       - name: SOPInstanceUID
         in: query
         required: true
         schema:
           type: string
         example: "1.3.6.1.4.1.14519.5.2.1.6834.5010.129790817462380794533151446268"
     responses:
       '200':
         description: Successful response with MD5 hash
         content:
           text/plain:
             schema:
               type: string
           application/xml:
             schema:
               type: string
           text/csv:
             schema:
               type: string
       '500':
         description: Internal server error
 
  /getManifestFromPatientStudySeries:
    post:
      summary: Generate a manifest from patient, study, and series UIDs
      description: |
        Returns a manifest file in `application/x-nbia-manifest-file` format containing series for the specified patient, study, or series UIDs.

        **Note:** Only the following form parameters are accepted: `patientIDs`, `studyUIDs`, `seriesUIDs`, `anyOrAll`, `includeAnnotation`.

        **Example curl command:**
        ```bash
        curl -X POST \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -H "Accept: text/plain" \
          -d "patientIDs=ISPY1_1001,ISPY1_1002&includeAnnotation=true" \
          https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getManifestFromPatientStudySeries
        ```
      tags:
        - Image Downloads
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - patientIDs
              properties:
                patientIDs:
                  type: string
                  description: Comma-separated patient IDs. (e.g. ISPY1_1001,ISPY1_1002)
                studyUIDs:
                  type: string
                  description: Comma-separated studyInstanceUIDs (optional)
                seriesUIDs:
                  type: string
                  description: Comma-separated seriesInstanceUIDs (optional)
                anyOrAll:
                  type: string
                  enum: [any, all]
                  default: any
                  description: Criteria filter (optional)
                includeAnnotation:
                  type: string
                  enum: [true, false]
                  default: true
                  description: Whether to include annotations (true/false)
              example:
                patientIDs: "ISPY1_1001,ISPY1_1002"
                includeAnnotation: "true"
      responses:
        '200':
          description: Manifest file successfully generated
          content:
            text/plain:
              schema:
                type: string
                format: binary
              examples:
                example1:
                  summary: Sample manifest file
                  value: |
                    # Manifest File
                    PatientID: ISPY1_1001
                    StudyID: ...
        '400':
          description: Bad request – Missing or invalid parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '406':
          description: Not Acceptable – Client must set Accept header to text/plain
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  
  /getManifestText:
    post:
      summary: Generate a manifest file for a list of series.
      description: |
        Returns a manifest text file containing series UIDs and download instructions for the NBIA Data Retriever.

        **Example curl command:**
        ```bash
           curl -X POST \
           -H "Content-Type: application/x-www-form-urlencoded" \
           -H "Accept: text/plain" \
           -k "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getManifestText" \
           -d "list=1.3.6.1.4.1.14519.5.2.1.6834.5010.100089621274100103247029607723&includeAnnotation=true"
        ```
      tags:
        - Image Downloads
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - list
              properties:
                list:
                  type: string
                  description: Comma-separated list of series UIDs for each series you want to download
                includeAnnotation:
                  type: string
                  enum: [true, false]
                  description: If true, annotations are included in the manifest.
              example:
                list: "1.3.6.1.4.1.14519.5.2.1.6834.5010.100089621274100103247029607723"
                includeAnnotation: "true"
      responses:
        '200':
          description: Successfully generated manifest text
          content:
            text/plain:
              schema:
                type: string
                format: binary
              examples:
                example1:
                  summary: Sample manifest text
                  value: |
                    # NBIA Manifest
                    SeriesUID: 1.3.6.1.4.1.14519.5.2.1.6834.5010.100089621274100103247029607723
                    IncludeAnnotation: true
        '400':
          description: Bad request – Missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /getManifestForSimpleSearch:
    post:
      summary: Generate a plain text manifest file from simple search criteria
      description: |
        Accepts search parameters and returns a plain text manifest file containing SeriesInstanceUIDs
        for authorized patients and studies. The manifest can be used with the NBIA Data Retriever.

        **Note:** Only authorized series are included in the manifest.

        **Example curl command:**
        ```bash
        curl -X POST \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -H "Accept: text/plain" \
          -d "criteriaType0=Modality&value0=CT&sortField=subject&sortDirection=ascending&start=0&size=50" \
          https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getManifestForSimpleSearch
        ```
      tags:
        - Image Downloads
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - criteriaType0
                - value0
              properties:
                criteriaType0:
                  type: string
                  description: Metadata field to filter by (e.g., Modality, ThirdPartyAnalysis)
                value0:
                  type: string
                  description: Value to match for the specified criteriaType0
                sortField:
                  type: string
                  description: Field to sort results by (e.g., subject, collection)
                sortDirection:
                  type: string
                  enum: [ascending, descending]
                  description: Sort direction
                start:
                  type: integer
                  minimum: 0
                  description: Starting index for paginated results
                size:
                  type: integer
                  minimum: 1
                  default: 10
                  description: Number of results to return
            example:
              criteriaType0: "Modality"
              value0: "CT"
              sortField: "subject"
              sortDirection: "ascending"
              start: 0
              size: 50
      responses:
        '200':
          description: Manifest file generated successfully
          content:
            text/plain:
              schema:
                type: string
              examples:
                default:
                  summary: Sample manifest content
                  value: |
                    NBIA-Manifest-Version: 1.0
                    SeriesUID: 1.3.6.1.4.1.14519.5.2.1.6919.4624.313514201353787659031503464798
                    SeriesUID: 1.3.6.1.4.1.14519.5.2.1.6919.4624.313514201353787659031503464799
        '400':
          description: Bad request – Missing or invalid parameters
          content:
            text/plain:
              schema:
                type: string
              examples:
                default:
                  summary: Missing required fields
                  value: "Error: criteriaType0 and value0 are required."
        '404':
          description: No matching series found
          content:
            text/plain:
              schema:
                type: string
              examples:
                default:
                  summary: No results
                  value: "Error: No authorized series found for the given criteria."
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
              examples:
                default:
                  summary: Unexpected failure
                  value: "Error: Unable to process the request due to a server error."

  /getDicomTags:
    get:
      summary: Retrieve DICOM metadata for a specific series.
      description: |
        Returns metadata (DICOM tags and values) for the specified SeriesInstanceUID.
        
        **Example curl command:**
          ```bash
             curl -X GET -H "Content-Type: application/json" -k "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getDicomTags?SeriesUID=2.25.202638583638721901745794769668527472118" 
          ```        
      tags:
        - Series Metadata
      parameters:
        - name: SeriesUID
          in: query
          description: SeriesInstanceUID for which to retrieve DICOM tags
          required: true
          schema:
            type: string
          example: "2.25.202638583638721901745794769668527472118"
      responses:
        '200':
          description: Successful response with DICOM tags in ZIP format
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    element:
                      type: string
                      description: DICOM element tag (e.g., (0028,0010))
                    name:
                      type: string
                      description: Name of the DICOM tag
                    data:
                      type: string
                      description: Value associated with the tag
              example:
                - element: "(0008,0060)"
                  name: "Modality"
                  data: "CT"
                - element: "(0028,0010)"
                  name: "Rows"
                  data: "512"
            application/zip:
              schema:
                type: string
                format: binary
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
        '400':
          description: Bad request – Missing or invalid SeriesUID
        '404':
          description: SeriesUID not found
        '500':
          description: Internal server error
  
  /getSpeciesValuesAndCounts:
    get:
      summary: Get species values and their counts
      description: |
        Returns the species values and counts.

        **Example curl command:**
        ```bash
        curl -X GET "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getSpeciesValuesAndCounts?format=json"
        ```
      tags:
        - Patient Metadata
      parameters:
        - name: format
          in: query
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
          description: Desired response format (json, xml, csv)
      responses:
        '200':
          description: Successful species counts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    criteria:
                      type: string
                    count:
                      type: string
              example:
                - criteria: "337915000"
                  count: "33793"
                - criteria: "447612001"
                  count: "393"
                - criteria: "448771007"
                  count: "57"
            text/plain:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string          
        '500': 
          description: Internal server error
 
  /getCollectionDescriptions:
    get:
      summary: Retrieve detailed metadata for NBIA collections
      description: |
        Returns metadata for collections, including HTML-formatted descriptions, timestamps, submitter username, and DOI links.
        You may optionally filter by collection name.

        **Example curl command:**
        ```bash
        curl -X GET -H "Content-Type: application/json" -k "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getCollectionDescriptions?collectionName=4D-Lung&format=json"
        ```
      tags:
        - Collection Metadata
      parameters:
        - name: collectionName
          in: query
          required: false
          description: Collection name to filter results
          schema:
            type: string
          example: "4D-Lung"
      responses:
        '200':
          description: Successful response with collection descriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    description:
                      type: string
                      description: HTML-formatted description of the collection
                    id:
                      type: integer
                      description: Internal identifier for the collection metadata
                    collectionDescTimestamp:
                      type: integer
                      description: Last update timestamp (epoch format)
                    collectionName:
                      type: string
                      description: Name of the collection
                    userName:
                      type: string
                      description: User who submitted or last updated the description
                    licenseId:
                      type: integer
                      nullable: true
                      description: Internal license reference ID (often null)
                    descriptionURI:
                      type: string
                      description: DOI or external metadata page link for the collection
              examples:
                default:
                  summary: Example JSON response
                  value:
                    - description: "<p>This dataset consists of 4D lung CT images...</p>"
                      id: 101
                      collectionDescTimestamp: 1695410133
                      collectionName: "4D-Lung"
                      userName: "jdoe"
                      licenseId: null
                      descriptionURI: "https://doi.org/10.7937/K9/TCIA.2023.ABC123"
            application/xml:
              schema:
                type: string
              examples:
                default:
                  summary: Example XML response
                  value: |
                    <CollectionDescriptions>
                      <Collection>
                        <description><![CDATA[<p>This dataset consists of 4D lung CT images...</p>]]></description>
                        <id>101</id>
                        <collectionDescTimestamp>1695410133</collectionDescTimestamp>
                        <collectionName>4D-Lung</collectionName>
                        <userName>jdoe</userName>
                        <licenseId xsi:nil="true" />
                        <descriptionURI>https://doi.org/10.7937/K9/TCIA.2023.ABC123</descriptionURI>
                      </Collection>
                    </CollectionDescriptions>
            text/csv:
              schema:
                type: string
              examples:
                default:
                  summary: Example CSV response
                  value: |
                    id,collectionName,collectionDescTimestamp,userName,licenseId,description,descriptionURI
                    101,4D-Lung,1695410133,jdoe,,<p>This dataset consists of 4D lung CT images...</p>,https://doi.org/10.7937/K9/TCIA.2023.ABC123
            text/plain:
              schema:
                type: string
              examples:
                default:
                  summary: Example plain text response
                  value: |
                    Collection Name: 4D-Lung
                    Description: This dataset consists of 4D lung CT images...
                    Last Updated: 1695410133
                    Submitted By: jdoe
                    License ID: null
                    Metadata URI: https://doi.org/10.7937/K9/TCIA.2023.ABC123
        '500':
          description: Internal server error

  /getCollectionOrSeriesForDOI:
    post:
      summary: Resolve a DOI to a collection or series.
      description: |
        Resolves a DOI to its associated NBIA collection name or SeriesInstanceUID.
        Specify `CollectionOrSeries=collection` to resolve to a collection name or `CollectionOrSeries=series` to resolve to a SeriesInstanceUID.

        **Example curl command:**
        ```bash
        curl -X POST "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getCollectionOrSeriesForDOI" \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -d "DOI=https://doi.org/10.7937/K9/TCIA.2016.ELN8YGLE&CollectionOrSeries=collection&format=json"
        ```
      tags:
        - Collection Metadata
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - DOI
                - CollectionOrSeries
              properties:
                DOI:
                  type: string
                  description: Digital Object Identifier (DOI) to resolve
                CollectionOrSeries:
                  type: string
                  enum: [collection, series]
                  default: collection
                  description: Whether to search for a collection or a series
                format:
                  type: string
                  enum: [json, xml, csv]
                  default: json
                  description: Desired response format
              example:
                DOI: "https://doi.org/10.7937/K9/TCIA.2016.ELN8YGLE"
                CollectionOrSeries: "collection"
                format: "json"

      responses:
        '200':
          description: Successful response with resolved collection or series
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    collection:
                      type: string
                      nullable: true
                      description: Name of the collection (if resolved to a collection)
                    seriesInstanceUID:
                      type: string
                      nullable: true
                      description: SeriesInstanceUID (if resolved to a series)
                    thirdPartyAnalysis:
                      type: string
                      nullable: true
                      description: Reserved field (currently unused)
              examples:
                collectionExample:
                  summary: Example response for collection resolution
                  value:
                    - collection: "TCGA-LUAD"
                      seriesInstanceUID: null
                      thirdPartyAnalysis: null
                seriesExample:
                  summary: Example response for series resolution
                  value:
                    - collection: null
                      seriesInstanceUID: "1.2.840.113619.2.55.3.604688437.781.1596539266.467"
                      thirdPartyAnalysis: null

            application/xml:
              schema:
                type: string
              examples:
                xmlExample:
                  summary: Example XML response
                  value: |
                    <Results>
                      <Result>
                        <collection>TCGA-LUAD</collection>
                        <seriesInstanceUID/>
                        <thirdPartyAnalysis/>
                      </Result>
                    </Results>

            text/csv:
              schema:
                type: string
              examples:
                csvExample:
                  summary: Example CSV response
                  value: |
                    collection,seriesInstanceUID,thirdPartyAnalysis
                    TCGA-LUAD,,

            text/plain:
              schema:
                type: string
              examples:
                plainExample:
                  summary: Example plain text response
                  value: TCGA-LUAD

        '400':
           description: Bad request – Missing or invalid parameters
           content:
             application/json:
               schema:
                 type: object
                 properties:
                   error:
                     type: string
                     example: Missing required parameter - DOI

        '404':
           description: DOI not found
           content:
             application/json:
               schema:
                 type: object
                 properties:
                   error:
                     type: string
                     example: DOI not found in registry

        '500':
           description: Internal server error
           content:
             application/json:
               schema:
                 type: object
                 properties:
                   error:
                     type: string
                     example: Unexpected server error occurred.
 
  /getManufacturerValuesAndCounts:
    get:
      summary: Retrieve manufacturer values and their occurrence counts
      description: |
        Returns manufacturer names and the number of times each appears in the database,
        along with authorization information.

        **Example curl command:**
        ```bash
        curl -X GET -H "Content-Type: application/json" -k "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getManufacturerValuesAndCounts?Collection=4D-Lung&format=json"
        ```
      tags:
        - Utilities
      parameters:
        - name: Collection
          in: query
          required: false
          schema:
            type: string
          example: "4D-Lung"
        - name: Modality
          in: query
          required: false
          schema:
            type: string
          example: "CT"
        - name: BodyPartExamined
          in: query
          required: false
          schema:
            type: string
          example: "LUNG"
      responses:
        '200':
          description: Successful response with manufacturer counts and authorization
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    manufacturer:
                      type: string
                      description: Manufacturer name
                    count:
                      type: integer
                      description: Number of series produced by this manufacturer
                    Authorized:
                      type: integer
                      description: User has access to the specified collection. 1 means yes and 0 means no.
              examples:
                default:
                  summary: Example JSON response
                  value:
                    - manufacturer: "GE Medical Systems"
                      count: 120
                      Authorized: 1
                    - manufacturer: "Siemens"
                      count: 85
                      Authorized: 0
            application/xml:
              schema:
                type: string
              examples:
                default:
                  summary: Example XML response
                  value: |
                    <Manufacturers>
                      <Manufacturer>
                        <name>GE Medical Systems</name>
                        <count>120</count>
                        <Authorized>1</Authorized>
                      </Manufacturer>
                      <Manufacturer>
                        <name>Siemens</name>
                        <count>85</count>
                        <Authorized>0</Authorized>
                      </Manufacturer>
                    </Manufacturers>
            text/csv:
              schema:
                type: string
              examples:
                default:
                  summary: Example CSV response
                  value: |
                    manufacturer,count,Authorized
                    "GE Medical Systems",120,1
                    "Siemens",85,0
            text/plain:
              schema:
                type: string
              examples:
                default:
                  summary: Example plain text response
                  value: |
                    GE Medical Systems: 120 (Authorized: 1)
                    Siemens: 85 (Authorized: 0)
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unexpected server error occurred.

  /getModalityValuesAndCounts:
   get:
     summary: Retrieve modality values and their occurrence counts
     description: |
       Returns modality types along with how often each appears in the database,
       and whether the user is authorized to access the associated collection.

       **Example curl command:**
       ```bash
       curl -X GET -H "Content-Type: application/json" -k "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getModalityValuesAndCounts?Collection=VICTRE&format=json"
       ```
     tags:
       - Utilities
     parameters:
       - name: Collection
         in: query
         required: false
         schema:
           type: string
         example: "VICTRE"
       - name: BodyPartExamined
         in: query
         required: false
         schema:
           type: string
         example: "BREAST"
     responses:
       '200':
         description: Successful response with modality counts and authorization
         content:
           application/json:
             schema:
               type: array
               items:
                 type: object
                 properties:
                   modality:
                     type: string
                     description: Modality type (e.g., CT, MR)
                   count:
                     type: integer
                     description: Number of series using this modality
                   Authorized:
                     type: integer
                     description: User has access to the specified collection. 1 means yes, 0 means no.
             example:
              - modality: "MG"
                count: 500
                Authorized: 1
              - modality: "DX"
                count: 120
                Authorized: 1
           text/plain:
             schema:
               type: string
           application/xml:
             schema:
               type: string
           text/csv:
             schema:
               type: string
       '500':
         description: Internal server error

  /getCollectionValuesAndCounts:
    get:
      summary: Retrieve collection names and patient counts.
      description: |
        Returns all collection names, patient counts, and authorization status.
        
        **Example curl command:**
        ```bash
        curl -X GET -H "Content-Type: application/json" -k "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getCollectionValuesAndCounts?format=json"
        ```
      tags:
        - Collection Metadata
      parameters:
        - name: format
          in: query
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
          description: Desired response format (json, xml, csv).
      responses:
        '200':
          description: Successful response with collection counts and authorization
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    collection:
                      type: string
                      description: Collection name
                    count:
                      type: integer
                      description: Number of patients in the collection
                    Authorized:
                      type: integer
                      description: User has access to the specified collection. 1 means yes and 0 means no.
              example:
                - collection: "TCGA-GBM"
                  count: 500
                  Authorized: 1
                - collection: "LIDC-IDRI"
                  count: 1018
                  Authorized: 1
            text/plain:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
        '500':
          description: Internal server error

  /getBodyPartValuesAndCounts:
    get:
      summary: Retrieve body part values and their occurrence counts.
      description: |
        Returns a list of body part names along with the number of times each appears in the database.
        Optionally filter by Collection or Modality.  

        **Example curl:**
        ```bash
        curl -X GET -H "Accept: application/json" \
          "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getBodyPartValuesAndCounts?Modality=PT&format=json"
        ```  
      tags:
        - Patient Metadata
      parameters:
        - name: Collection
          in: query
          required: false
          schema:
            type: string
          example: "TCGA-HNSC"
        - name: Modality
          in: query
          required: false
          schema:
            type: string
            enum: [CR, CT, DX, FUSION, KO, MG, MR, OT, NM, PR, PT, REG, RF, RTDOSE, RTPLAN, RTSTRUCT, RWV, SEG, SC, SR, US, XA]
          example: "PT"
      responses:
        '200':
          description: Successful response with body part counts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    bodyPart:
                      type: string
                      description: Body part name
                    count:
                      type: integer
                      description: Number of studies/series with this body part
                    Authorized:
                      type: integer
                      description: 1 if user has access, 0 otherwise
              example:
                - bodyPart: "WHOLE BODY"
                  count: 298
                  Authorized: 1
                - bodyPart: "HEADNECK"
                  count: 150
                  Authorized: 1
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: An unexpected error occurred.

  /getPatient:
    get:
      summary: Retrieve patients in a collection.
      description: |
        Returns a list of de-identified patients associated with the specified collection.

        **Example call:**
        ```bash
        curl -X GET "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getPatient?Collection=CBIS-DDSM&format=json"
        ```
      tags:
        - Patient Metadata
      parameters:
        - name: format
          in: query
          description: Desired response format (json, xml, csv)
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
        - name: PatientId
          in: query
          description: De‑identified PatientID (optional – restricts results to a single patient)
          required: false
          schema:
            type: string
          example: "Mass-Training_P_00001"
        - name: Collection
          in: query
          description: Name of the collection to retrieve patients from
          required: true
          schema:
            type: string
          example: "CBIS-DDSM"
      responses:
        '200':
          description: Successful response with patient metadata
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    PatientId:
                      type: string
                      description: DICOM Tag (0010,0020) – De-identified patient ID
                    PatientName:
                      type: string
                      description: DICOM Tag (0010,0010) – De-identified patient name
                    PatientSex:
                      type: string
                      description: DICOM Tag (0010,0040) – Patient’s sex
                    PatientBirthDate:
                      type: string
                      format: date
                      description: DICOM Tag (0010,0030) – De-identified birth date
                    EthnicGroup:
                      type: string
                      description: DICOM Tag (0010,2160) – Ethnic group of the patient
                    Authorized:
                      type: integer
                      description: User has access to the specified collection. 1 means yes and 0 means no.
              example:
                - PatientId: "Calc-Test_P_00038_LEFT_CC"
                  PatientName: "P_00038^P_00038"
                  PatientSex: "F"
                  PatientBirthDate: ""
                  EthnicGroup: ""
                  Authorized: 1
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
            text/plain:
              schema:
                type: string
        '400':
          description: Bad request – Missing or invalid parameters
        '500':
          description: Internal server error

  /getPatientStudy:
    get:
      summary: Retrieve studies for patients in a collection
      description: |
        Returns metadata for studies associated with patients in the specified collection.
        You can optionally filter by PatientID.

        **Example call:**
        ```bash
        curl -X GET "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getPatientStudy?Collection=VICTRE&PatientID=1.3.6.1.4.1.30072.1.1.282583578114131492523999238318859942663&format=json"
        ```
      tags:
        - Patient Metadata
      parameters:
        - name: format
          in: query
          description: Desired response format (json, xml, csv)
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
        - name: Collection
          in: query
          description: Name of the image collection
          required: true
          schema:
            type: string
          example: "VICTRE"
        - name: PatientID
          in: query
          description: De‑identified PatientID (optional – restricts results to a single patient)
          required: false
          schema:
            type: string
          example: "1.3.6.1.4.1.30072.1.1.282583578114131492523999238318859942663"
        - name: StudyInstanceUID
          in: query
          description: DICOM Tag (0020,000D) – Unique identifier for the study
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    StudyDate:
                      type: string
                      format: date
                      description: DICOM Tag (0008,0020) – Date the study was performed
                    StudyDescription:
                      type: string
                      description: DICOM Tag (0008,1030) – Description of the study
                    PatientID:
                      type: string
                      description: DICOM Tag (0010,0020) – De‑identified Patient ID
                    PatientName:
                      type: string
                      description: DICOM Tag (0010,0010) – De‑identified Patient Name
                    PatientSex:
                      type: string
                      description: DICOM Tag (0010,0040) – Sex of the patient
                    Collection:
                      type: string
                      description: Name of the collection
                    SeriesCount:
                      type: integer
                      description: Number of series in this study
                    Authorized:
                      type: integer
                      description: User has access to the specified collection. 1 means yes and 0 means no.
              example:
                - StudyDate: "20171120"
                  StudyDescription: "DBT"
                  PatientID: "1.3.6.1.4.1.30072.1.1.282583578114131492523999238318859942663"
                  PatientName: ""
                  PatientSex: "F"
                  Collection: "VICTRE"
                  SeriesCount: 4
                  Authorized: 1
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
        '400':
          description: Bad request – Missing or invalid parameters
        '500':
          description: Internal server error
          
  /getUpdatedSeries:
    get:
      summary: Retrieve updated series in a collection since a specified date.
      description: |
        Returns a list of SeriesInstanceUIDs for imaging series in a given collection that have been updated on or after the specified date.
        
        **Example call:**
        ```bash
        curl -X GET "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getUpdatedSeries?fromDate=03-28-2023&format=json"
        ```        
      tags:
        - Series Metadata
      parameters:
        - name: fromDate
          in: query
          required: true
          schema:
            type: string
          description: Date in MM-DD-YYYY format. Returns series updated on or after this date.
          example: "03-28-2023"
        - name: format
          in: query
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
          description: Desired response format (json, xml, or csv)
      responses:
        '200':
          description: Successful response with updated SeriesInstanceUIDs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: DICOM Tag (0020,000E) – Unique identifier for a DICOM series
              example:
                - "1.3.6.1.4.1.14519.5.2.1.7695.1700.121164861481441093151316977794"
                - "1.3.6.1.4.1.14519.5.2.1.7695.1700.520396403274327587353342330294"
            text/plain:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
        '400':
          description: Bad request – Missing or invalid parameters
        '404':
          description: No updated series found
        '500':
          description: Internal server error

  /getSeriesSize:
    get:
      summary: Retrieve size and image count for a DICOM series.
      description: |
        Returns the number of images and total file size (in bytes) for the specified SeriesInstanceUID.
        Useful for estimating storage requirements before downloading.
      
        **Example call:**
        ```bash
        curl -X GET "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getSeriesSize?SeriesInstanceUID=1.3.6.1.4.1.14519.5.2.1.6834.5010.322628904903035357840500590726&format=json"
        ```     
      tags:
        - Series Metadata
      parameters:
        - name: SeriesInstanceUID
          in: query
          required: true
          schema:
            type: string
          description: DICOM Tag (0020,000E) – Unique identifier for the image series
          example: "1.3.6.1.4.1.14519.5.2.1.6834.5010.322628904903035357840500590726"
        - name: format
          in: query
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
          description: Desired output format
      responses:
        '200':
          description: Successful response with image count and total size
          content:
            application/json:
              schema:
                type: object
                properties:
                  imageCount:
                    type: integer
                    description: Number of images in the series
                  seriesSize:
                    type: integer
                    description: Total size in bytes of the series
              example:
                imageCount: 136
                seriesSize: 71599388
            text/plain:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
        '400':
          description: Bad request – Missing or invalid SeriesInstanceUID
        '404':
          description: Series not found
        '500':
          description: Internal server error
     
  /getSeriesMetadata:
    post:
      summary: Retrieve detailed metadata for a DICOM series.
      description: |
        Returns a list of metadata fields and values for the specified SeriesInstanceUID.
        This includes DICOM tags and related technical attributes.
        
        **Example call:**
        ```bash
        curl -X POST -H "Content-Type: application/x-www-form-urlencoded" \
          -d "list=1.3.6.1.4.1.14519.5.2.1.6834.5010.322628904903035357840500590726" \
          "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getSeriesMetaData"
        ```   
      tags:
        - Series Metadata
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                list:
                  type: string
                  description: Comma-separated list of SeriesInstanceUIDs (DICOM Tag 0020,000E)
                format:
                  type: string
                  default: csv
                  description: Desired response format (csv)
              example:
                list: "1.3.6.1.4.1.14519.5.2.1.6834.5010.322628904903035357840500590726"
                format: "csv"
      responses:
        '200':
          description: Successful response with series metadata key-value pairs
          content:      
            text/csv:
              schema:
                type: string
              example:
                '[{"patientId":"LIDC-IDRI-1000","seriesInstanceUid":"1.3.6.1.4.1.14519.5.2.1.6279.6001.202166363820228347198889476725","seriesDescription":"case_1000_1_01","modality":"CT"}]'
        '400':
          description: Bad request – Missing or invalid SeriesInstanceUID
        '404':
          description: SeriesInstanceUID not found
        '500':
          description: Internal server error

  /getSeries:
    get:
      summary: Retrieve DICOM series metadata.
      description: |
        Returns metadata for imaging series based on optional filters like Collection, PatientID, StudyInstanceUID,
        Modality, BodyPartExamined, Manufacturer, ManufacturerModelName, and SeriesInstanceUID.
        
        **Example call:**
        ```bash
        curl -X GET "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getSeries?Collection=VICTRE&Modality=MG&format=json"
        ```       
      tags:
        - Series Metadata
      parameters:
        - name: SeriesInstanceUID
          in: query
          required: false
          schema:
            type: string
          description: Filter results by SeriesInstanceUID.
        - name: StudyInstanceUID
          in: query
          required: false
          schema:
            type: string
          description: Filter results by StudyInstanceUID.
        - name: format
          in: query
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
          description: Desired output format.
        - name: Collection
          in: query
          required: false
          schema:
            type: string
          description: Filter results by collection name.
          example: "VICTRE"
        - name: ManufacturerModelName
          in: query
          required: false
          schema:
            type: string
          description: Filter results by ManufacturerModelName.
        - name: PatientID
          in: query
          required: false
          schema:
            type: string
          description: Filter results by patient ID.
        - name: Manufacturer
          in: query
          required: false
          schema:
            type: string
          description: Filter results by manufacturer.
        - name: BodyPartExamined
          in: query
          required: false
          schema:
            type: string
          description: Filter results by body part examined.
        - name: Modality
          in: query
          required: false
          schema:
            type: string
            enum: [CR, CT, DX, FUSION, KO, MG, MR, OT, NM, PR, PT, REG, RF, RTDOSE, RTPLAN, RTSTRUCT, RWV, SEG, SC, SR, US, XA]
          description: Filter results by imaging modality (e.g., CT, MR).
          example: "MG"
      responses:
        '200':
          description: Successful response with series metadata
          content:
           application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    SeriesInstanceUID:
                      type: string
                      description: DICOM Tag (0020,000E) – Unique identifier for the imaging series
                    StudyInstanceUID:
                      type: string
                      description: DICOM Tag (0020,000D) – Unique identifier for the study
                    SeriesDate:
                      type: string
                      format: date
                      description: DICOM Tag (0008,0021) – Date the series was performed
                    Modality:
                      type: string
                      description: DICOM Tag (0008,0060) – Modality of the imaging series (e.g., CT, MR)
                    SeriesDescription:
                      type: string
                      description: DICOM Tag (0008,103E) – Description of the series
                    BodyPartExamined:
                      type: string
                      description: DICOM Tag (0018,0015) – Anatomical region examined
                    SeriesNumber:
                      type: integer
                      description: DICOM Tag (0020,0011) – Number identifying the series within the study
                    Manufacturer:
                      type: string
                      description: DICOM Tag (0008,0070) – Name of the manufacturer of the equipment
                    ImageCount:
                      type: integer
                      description: Number of images in the series
                    PatientID:
                      type: string
                      description: DICOM Tag (0010,0020) – De-identified patient ID
                    Collection:
                      type: string
                      description: Collection name that the series belongs to
              example:
                - SeriesInstanceUID: "1.3.6.1.4.1.30072.1.1.282583578114131492523999238318859942663.1"
                  StudyInstanceUID: "1.3.6.1.4.1.30072.1.1.282583578114131492523999238318859942663"
                  SeriesDate: "20171120"
                  Modality: "MG"
                  SeriesDescription: "L-CC"
                  BodyPartExamined: "BREAST"
                  SeriesNumber: 1
                  Manufacturer: "Hologic, Inc."
                  ImageCount: 55
                  PatientID: "1.3.6.1.4.1.30072.1.1.282583578114131492523999238318859942663"
                  Collection: "VICTRE"
           text/plain:
              schema:
                type: string
           application/xml:
              schema:
                type: string
           text/csv:
              schema:
                type: string
        '400':
          description: Bad request – Missing or invalid parameters
        '500':
          description: Internal server error

  /getPatientByCollectionAndModality:
    get:
      summary: Retrieve patients in a collection filtered by modality.
      description: |
        Returns a list of de-identified patients associated with a specific collection and imaging modality.

        **Example call:**
        ```bash
        curl -X GET "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getPatientByCollectionAndModality?Collection=VICTRE&Modality=MG&format=json"
        ```
      tags:
        - Patient Metadata
      parameters:
        - name: format
          in: query
          description: Desired response format (json, xml, csv)
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
        - name: Collection
          in: query
          description: Name of the image collection
          required: true
          schema:
            type: string
          example: "VICTRE"
        - name: Modality
          in: query
          description: Filter results by imaging modality (e.g., CT, MR)
          required: true
          schema:
            type: string
            enum: [CR, CT, DX, FUSION, KO, MG, MR, OT, NM, PR, PT, REG, RF, RTDOSE, RTPLAN, RTSTRUCT, RWV, SEG, SC, SR, US, XA]
          example: "MG"
      responses:
        '200':
          description: Successful response with patient metadata
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    PatientID:
                      type: string
                      description: DICOM Tag (0010,0020) – De-identified patient ID
                    PatientName:
                      type: string
                      description: DICOM Tag (0010,0010) – De-identified patient name
                    PatientSex:
                      type: string
                      description: DICOM Tag (0010,0040) – Patient’s sex
                    PatientBirthDate:
                      type: string
                      format: date
                      description: DICOM Tag (0010,0030) – De-identified birth date
                    EthnicGroup:
                      type: string
                      description: DICOM Tag (0010,2160) – Ethnic group of the patient
                    Authorized:
                      type: integer
                      description: User has access to the specified collection. 1 means yes and 0 means no.
              example:
                - PatientID: "1.3.6.1.4.1.30072.1.1.282583578114131492523999238318859942663"
                  PatientName: ""
                  PatientSex: "F"
                  PatientBirthDate: ""
                  EthnicGroup: ""
                  Authorized: 1
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
            text/plain:
              schema:
                type: string
        '400':
          description: Bad request – Missing or invalid parameters
        '500':
          description: Internal server error

  /NewStudiesInPatientCollection:
    get:
      summary: Retrieve new studies in a patient collection since a specified date.
      description: |
        Returns a list of studies for patients that were added to the specified collection on or after the given date.

        **Example call:**
        ```bash
        curl -X GET "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/NewStudiesInPatientCollection?Collection=CBIS-DDSM&Date=08-16-2010&format=json"
        ```
      tags:
        - Study Metadata
      parameters:
        - name: PatientID
          in: query
          description: De‑identified PatientID (optional – restricts results to a single patient)
          required: false
          schema:
            type: string
        - name: format
          in: query
          description: Desired response format (json, xml, csv)
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
        - name: Collection
          in: query
          description: Name of the image collection
          required: true
          schema:
            type: string
          example: "CBIS-DDSM"
        - name: Date
          in: query
          description: Date in MM-DD-YYYY format to filter new studies
          required: true
          schema:
            type: string
            format: date
          example: "08-16-2010"
      responses:
        '200':
          description: Successful response with study metadata
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    PatientID:
                      type: string
                      description: DICOM Tag (0010,0020) – De-identified patient ID
                    StudyInstanceUID:
                      type: string
                      description: DICOM Tag (0020,000D) – Unique identifier for the study
                    StudyDate:
                      type: string
                      format: date
                      description: DICOM Tag (0008,0020) – Date the study was performed
                    StudyDescription:
                      type: string
                      description: DICOM Tag (0008,1030) – Description of the study
                    AccessionNumber:
                      type: string
                      description: DICOM Tag (0008,0050) – Identifier for the study requested
                    StudyID:
                      type: string
                      description: DICOM Tag (0020,0010) – User or system-supplied ID for the study
                    Collection:
                      type: string
                      description: Name of the image collection
                    Authorized:
                      type: integer
                      description: User has access to the specified collection. 1 means yes and 0 means no.
              example:
                - PatientID: "Mass-Test_P_00040"
                  StudyInstanceUID: "1.3.6.1.4.1.9328.50.1.11024"
                  StudyDate: "20160427"
                  StudyDescription: "ffdm"
                  AccessionNumber: ""
                  StudyID: "22670"
                  Collection: "CBIS-DDSM"
                  Authorized: 1
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
        '400': 
          description: Bad request – Missing or invalid parameters
        '500':
          description: Internal server error

  /NewPatientsInCollection:
    get:
      summary: Retrieve new patients in a collection since a specified date.
      description: |
        Returns a list of patients added to a specified collection since a given date.

        **Example call:**
        ```bash
        curl -X GET "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/NewPatientsInCollection?Collection=CBIS-DDSM&Date=08-16-2010&format=json"
        ```
      tags:
        - Patient Metadata
      parameters:
        - name: format
          in: query
          description: Desired response format (json, xml, csv)
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
        - name: Collection
          in: query
          description: Name of the collection
          required: true
          schema:
            type: string
          example: "CBIS-DDSM"
        - name: Date
          in: query
          description: Date in MM-DD-YYYY format to filter new patients
          required: true
          schema:
            type: string
            format: date
          example: "08-16-2010"
      responses:
        '200':
          description: Successful response with patient data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    PatientID:
                      type: string
                      description: DICOM Tag (0010,0020) – De-identified patient identifier
                    PatientName:
                      type: string
                      description: DICOM Tag (0010,0010) – De-identified patient name
                    PatientBirthDate:
                      type: string
                      format: date
                      description: DICOM Tag (0010,0030) – De-identified birth date
                    PatientSex:
                      type: string
                      description: DICOM Tag (0010,0040) – Patient's sex
                    EthnicGroup:
                      type: string
                      description: DICOM Tag (0010,2160) – Ethnic group of the patient
                    Collection:
                      type: string
                      description: Label for the image collection
                    Phantom:
                      type: string
                      description: DICOM Tag (0010,0200) – Indicates if the subject is a quality control phantom
                    SpeciesCode:
                      type: string
                      description: DICOM Tag (0010,2202) – Taxonomic rank value of the patient
                    SpeciesDescription:
                      type: string
                      description: DICOM Tag (0010,2201) – Description of the species
                    Authorized:
                      type: integer
                      description: User has access to the specified collection. 1 means yes and 0 means no.
              example:
                - PatientID: "Mass-Test_P_00040"
                  PatientName: "Mass-Test_P_00040"
                  PatientBirthDate: ""
                  PatientSex: "F"
                  EthnicGroup: ""
                  Collection: "CBIS-DDSM"
                  Phantom: ""
                  SpeciesCode: ""
                  SpeciesDescription: ""
                  Authorized: 1
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
            text/plain:
              schema:
                type: string
        '400':
          description: Bad request – Missing or invalid parameters
        '500':
          description: Internal server error

  /getModalityValues:
    get:
      summary: Retrieve available modality values.
      description: |
        Returns a list of modality types (e.g., CT, MR, PET) available in the NBIA database.
        Optional query parameters allow filtering by collection name and body part examined.
        
        **Example call:**
        ```bash
        curl -X GET "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getModalityValues?format=json"
        ```  
      tags:
        - Utilities
      parameters:
        - name: Collection
          in: query
          description: Filter results by collection name
          required: false
          schema:
            type: string
          example: "TCGA-GBM"
        - name: BodyPartExamined
          in: query
          description: Filter results by body part examined
          required: false
          schema:
            type: string
          example: "BRAIN"
        - name: format
          in: query
          description: Desired response format (json, xml, csv)
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
      responses:
        '200':
          description: Successful response with modality values
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
                - "CR"
                - "CT"
                - "MR"
                - "PT"
            text/plain:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
        '400':
          description: Bad request – Missing or invalid parameters
        '500':
          description: Internal server error
     
  /getImage:
    get:
      summary: Download a ZIP of DICOM images for a given SeriesInstanceUID
      description: |
        Retrieves a ZIP archive containing all DICOM images associated with the specified SeriesInstanceUID.
        Optionally, you can specify whether to use new file naming conventions.

        **Query Parameters:**
        - `SeriesInstanceUID` (required): The unique identifier for the image series.
        - `NewFileNames` (optional): If set to `'Yes'`, filenames follow the format `acquisitionNumber-instanceNumber` instead of sequential numbering.

        **Example curl command:**
        ```bash
        curl -o images.zip -X GET \
          "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getImage?SeriesInstanceUID=1.3.6.1.4.1.14519.5.2.1.156004405617282635144529384437381232981&NewFileNames=Yes"
        ```
      tags:
        - Image Downloads
      parameters:
        - name: SeriesInstanceUID
          in: query
          required: true
          description: The unique identifier for the image series
          schema:
            type: string
          example: "1.3.6.1.4.1.14519.5.2.1.156004405617282635144529384437381232981"

        - name: NewFileNames
          in: query
          required: false
          description: |
            If set to `'Yes'`, filenames will follow the format `acquisitionNumber-instanceNumber`.
            If omitted or set to `'No'`, filenames will use sequential numbering.
          schema:
            type: string
            enum: [Yes, No]
          example: "Yes"
            
      responses:
        '200':
          description: ZIP archive containing binary DICOM files
          content:
            '*/*':
              schema:
                type: string
                format: binary
        '400':
          description: Bad request – Missing or invalid parameters
          content:
            text/plain:
              schema:
                type: string
              examples:
                default:
                  summary: Missing SeriesInstanceUID
                  value: "Error: SeriesInstanceUID is required."
        '404':
          description: SeriesInstanceUID not found
          content:
            text/plain:
              schema:
                type: string
              examples:
                default:
                  summary: UID not found
                  value: "Error: No series found for the given SeriesInstanceUID."
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
              examples:
                default:
                  summary: Unexpected failure
                  value: "Error: Unable to process the request due to a server error."

  /getImageWithMD5Hash:
    get:
      summary: Download a ZIP of DICOM images with MD5 hashes for a given SeriesInstanceUID
      description: |
        Retrieves a ZIP archive containing all DICOM images associated with the specified SeriesInstanceUID,
        along with their corresponding MD5 hash values for integrity verification.

        **Query Parameters:**
        - `SeriesInstanceUID` (required): The unique identifier for the image series.

        **Example curl command:**
        ```bash
        curl -o images_with_hash.zip -X GET \
          "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getImageWithMD5Hash?SeriesInstanceUID=1.3.6.1.4.1.14519.5.2.1.6919.4624.313514201353787659031503464798"
        ```
      tags:
        - Image Downloads
      parameters:
        - name: SeriesInstanceUID
          in: query
          required: true
          description: The unique identifier for the image series
          schema:
            type: string
          example: "1.3.6.1.4.1.14519.5.2.1.6919.4624.313514201353787659031503464798"

      responses:
        '200':
          description: A ZIP file containing the DICOM images and their MD5 hash values
          content:
            '*/*':
              schema:
                type: string
                format: binary

              examples:
                default:
                  summary: Plain text fallback response
                  value: |
                    Image download with MD5 hashes initiated for SeriesInstanceUID: 1.3.6.1.4.1.14519.5.2.1.6919.4624.313514201353787659031503464798
        '400':
          description: Bad request – Missing or invalid parameters
          content:
            text/plain:
              schema:
                type: string
              examples:
                default:
                  summary: Missing SeriesInstanceUID
                  value: "Error: SeriesInstanceUID is required."
        '404':
          description: SeriesInstanceUID not found
          content:
            text/plain:
              schema:
                type: string
              examples:
                default:
                  summary: UID not found
                  value: "Error: No series found for the given SeriesInstanceUID."
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
              examples:
                default:
                  summary: Unexpected failure
                  value: "Error: Unable to process the request due to a server error."

  /getCollectionValues:
    get:
      summary: Retrieve available collection values.
      description: |
        Returns a list of available collection names in NBIA.
      
        **Example call:**
        ```bash
        curl -X GET "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getCollectionValues?format=json"
        ```
      tags:
        - Collection Metadata
      parameters:
        - name: format
          in: query
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
          description: Desired response format (json, xml, csv)
      responses:
        '200':
          description: A list of collection names
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Collection'
              example:
                - collection: "4D-Lung"
                - collection: "ACRIN-Contralateral-Breast-MR"
                - collection: "ACRIN-FLT-Breast"
            text/plain:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                   type: string
                   example: An unexpected error occurred.
                   
  /getManufacturerValues:
    get:
      summary: Retrieve available manufacturer values.
      description: |
        Returns a list of manufacturer names filtered by optional query parameters.

        **Example call:**
        ```bash
        curl -X GET "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getManufacturerValues?Collection=TCGA-LUAD&Modality=CT&format=json"
        ```
      tags:
        - Utilities
      parameters:
        - name: Collection
          in: query
          description: Filter results by collection name
          required: false
          schema:
            type: string
          example: "TCGA-LUAD"
        - name: BodyPartExamined
          in: query
          description: Filter results by body part examined
          required: false
          schema:
            type: string
          example: "CHEST"
        - name: Modality
          in: query
          description: Filter results by imaging modality
          required: false
          schema:
            type: string
            enum: [CR, CT, DX, FUSION, KO, MG, MR, OT, NM, PR, PT, REG, RF, RTDOSE, RTPLAN, RTSTRUCT, RWV, SEG, SC, SR, US, XA]
          example: "CT"
        - name: format
          in: query
          description: Desired response format (json, xml, csv)
          required: false
          schema:
            type: string
            enum: [json, xml, csv, text/plain]
            default: json
      responses:
        '200':
          description: Successful response with manufacturer names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                default:
                  summary: Example JSON response
                  value:
                    - "GE MEDICAL SYSTEMS"
                    - "SIEMENS"
                    - "PHILIPS"
            application/xml:
              schema:
                type: string
              examples:
                default:
                  summary: Example XML response
                  value: |
                    <Manufacturers>
                      <Manufacturer>GE MEDICAL SYSTEMS</Manufacturer>
                      <Manufacturer>SIEMENS</Manufacturer>
                      <Manufacturer>PHILIPS</Manufacturer>
                    </Manufacturers>
            text/csv:
              schema:
                type: string
              examples:
                default:
                  summary: Example CSV response
                  value: |
                    Manufacturer
                    "GE MEDICAL SYSTEMS"
                    "SIEMENS"
                    "PHILIPS"
            text/plain:
              schema:
                type: string
              examples:
                default:
                  summary: Example plain text response
                  value: "GE MEDICAL SYSTEMS,SIEMENS,PHILIPS"
        '400':
          description: Bad request – Missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid modality value provided.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unexpected server error occurred.

  /getBodyPartValues:
    get:
      summary: Retrieve available body part values.
      description: |
        Returns a list of body part names filtered by optional query parameters.

        **Example call:**
        ```bash
        curl -X GET "https://nbia.cancerimagingarchive.net/nbia-api/services/v4/getBodyPartValues?Collection=TCGA-LUAD&Modality=CT&format=json"
        ```
      tags:
        - Utilities
      parameters:
        - name: Collection
          in: query
          description: Filter results by collection name
          required: false
          schema:
            type: string
          example: "TCGA-LUAD"
        - name: Modality
          in: query
          description: Filter results by imaging modality
          required: false
          schema:
            type: string
            enum: [CR, CT, DX, FUSION, KO, MG, MR, OT, NM, PR, PT, REG, RF, RTDOSE, RTPLAN, RTSTRUCT, RWV, SEG, SC, SR, US, XA]
          example: "CT"
        - name: format
          in: query
          description: Desired response format (json, xml, csv)
          required: false
          schema:
            type: string
            enum: [json, xml, csv]
            default: json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    BodyPartExamined:
                      type: string
                      description: Name of the body part
              examples:
                default:
                  summary: Example JSON response
                  value:
                    - BodyPartExamined: "CHEST"
                    - BodyPartExamined: "ABDOMEN"
                    - BodyPartExamined: "BRAIN"
            application/xml:
              schema:
                type: string
              examples:
                default:
                  summary: Example XML response
                  value: |
                    <BodyParts>
                      <BodyPartExamined>CHEST</BodyPartExamined>
                      <BodyPartExamined>ABDOMEN</BodyPartExamined>
                    </BodyParts>
            text/csv:
              schema:
                type: string
              examples:
                default:
                  summary: Example CSV response
                  value: |
                    BodyPartExamined
                    "CHEST"
                    "ABDOMEN"
                    "BRAIN"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unexpected server error occurred.
                    
  /getManifestForCollection:
    post:
      summary: Generate a manifest file for a given collection
      description: Returns a TCIA manifest file containing series IDs filtered by collection and visibility, optionally including annotations.
      tags:
        - Image Downloads
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                collection:
                  type: string
                  description: Name of the collection
                visibility:
                  type: string
                  description: Visibility level (use "13" to select all)
                includeAnnotation:
                  type: string
                  description: Whether to include annotations ("true" or "false")
              required:
                - collection
      responses:
        '200':
          description: Manifest file generated successfully
          content:
            application/x-nbia-manifest-file:
              schema:
                type: string
                format: binary
        '400':
          description: Invalid input parameters
        '500':
          description: Internal server error

  /getMinMaxTimepoints:
    get:
      summary: Retrieve minimum and maximum timepoints across authorized studies
      description: Returns the earliest and latest timepoints for studies accessible to the authenticated user, based on site-level authorization.
      tags:
        - Study Metadata
      responses:
        '200':
          description: Successfully retrieved timepoint range
          content:
            application/json:
              schema:
                type: object
                properties:
                  minTimepoint:
                    type: string
                    format: date
                    description: Earliest timepoint available
                  maxTimepoint:
                    type: string
                    format: date
                    description: Latest timepoint available
        '401':
          description: Unauthorized access
        '500':
          description: Internal server error


































