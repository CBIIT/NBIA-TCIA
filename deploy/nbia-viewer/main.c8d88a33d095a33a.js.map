{"version":3,"file":"main.c8d88a33d095a33a.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.module.ts","./src/app/footer/footer.component.ts","./src/app/images-per-page/images-per-page.component.ts","./src/app/nbia-thumbnail-viewer/nbia-thumbnail-viewer.component.ts","./src/app/pager/pager.component.ts","./src/app/services/common.service.ts","./src/app/services/configuration.service.ts","./src/app/services/server-access.service.ts","./src/app/services/util.service.ts","./src/assets/properties.ts","./src/environments/environment.ts","./src/main.ts","./src/app/app.component.scss","./src/app/footer/footer.component.scss","./src/app/images-per-page/images-per-page.component.scss","./src/app/nbia-thumbnail-viewer/nbia-thumbnail-viewer.component.scss","./src/app/pager/pager.component.scss"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'nbia-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'nbia';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CookieService } from 'ngx-cookie-service';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NbiaThumbnailViewerComponent } from './nbia-thumbnail-viewer/nbia-thumbnail-viewer.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UtilService } from './services/util.service';\nimport { ServerAccessService } from './services/server-access.service';\nimport { FormsModule } from '@angular/forms';\nimport { PagerComponent } from './pager/pager.component';\nimport { CommonService } from './services/common.service';\nimport { ImagesPerPageComponent } from './images-per-page/images-per-page.component';\nimport { FooterComponent } from './footer/footer.component';\n\n\nconst appRoutes: Routes = [\n    { path: '', component: NbiaThumbnailViewerComponent }\n];\n\n\n@NgModule( {\n    declarations: [\n        AppComponent,\n        NbiaThumbnailViewerComponent,\n        PagerComponent,\n        ImagesPerPageComponent,\n        FooterComponent\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        FormsModule,\n        RouterModule.forRoot( appRoutes ),\n    ],\n    providers: [\n        CookieService,\n        UtilService,\n        ServerAccessService,\n        CommonService\n    ],\n    bootstrap: [AppComponent]\n} )\nexport class AppModule{\n}\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component( {\n    selector: 'nbia-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.scss']\n} )\n\nexport class FooterComponent implements OnInit{\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from '../services/common.service';\nimport { Properties } from '../../assets/properties';\nimport { UtilService } from '../services/util.service';\n\n\n@Component( {\n    selector: 'nbia-images-per-page',\n    templateUrl: './images-per-page.component.html',\n    styleUrls: ['./images-per-page.component.scss', '../nbia-thumbnail-viewer/nbia-thumbnail-viewer.component.scss']\n} )\n\nexport class ImagesPerPageComponent implements OnInit{\n\n    imagesPerPage;\n    haveData = false;\n\n    constructor( private commonService: CommonService, private utilService: UtilService ) {\n    }\n\n    ngOnInit() {\n        this.commonService.haveAllDataEmitter.subscribe(\n            data => {\n                this.haveData = data;\n            }\n        );\n\n\n        this.initImagesPerPage();\n    }\n\n    onChangeMinimumMatchedStudies() {\n        this.commonService.setImagesPerPage( this.imagesPerPage );\n    }\n\n    initImagesPerPage() {\n        this.imagesPerPage = this.commonService.getPersistedValue( 'imagesPerPage' ); // FIXME this needs to be a const\n        if( this.utilService.isNullOrUndefined( this.imagesPerPage ) ){\n            this.imagesPerPage = Properties.IMAGES_PER_PAGE_CHOICE_DEFAULT;\n        }\n        this.commonService.setImagesPerPage( this.imagesPerPage );\n    }\n\n\n}\n","import { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Properties } from '../../assets/properties';\nimport { UtilService } from '../services/util.service';\nimport { ServerAccessService } from '../services/server-access.service';\nimport { Title } from '@angular/platform-browser';\nimport { Subject } from 'rxjs/internal/Subject';\nimport { CommonService } from '../services/common.service';\nimport { ConfigurationService } from '../services/configuration.service';\n\n\n@Component( {\n    selector: 'nbia-nbia-thumbnail-viewer',\n    templateUrl: './nbia-thumbnail-viewer.component.html',\n    styleUrls: ['./nbia-thumbnail-viewer.component.scss']\n} )\n\nexport class NbiaThumbnailViewerComponent implements OnInit, OnDestroy{\n\n    // The images for the top right -/+ buttons. These change in response to the mouse and being disabled.\n    zoomOutImgSrc: string = 'assets/images/zoom_out_dark.png';\n    zoomInImgSrc: string = 'assets/images/zoom_in_dark.png';\n\n    // The array of all the jpg images.\n    // This may change, to handle a large number of images, we may go back to the server for each page.\n    images = [];\n\n    imagesPerPage: number;\n    currentPage = 0;\n\n    // The first image of the current page.\n    firstImage = 0;\n\n    // The number of images displayed in each row.\n    columns = Properties.VIEWER_COLUMNS_DEFAULT;\n\n    // Minimum width of a column in pixels.\n    columnSize = 130;\n\n    // For the over all left and right margins\n    marginOffset = 14;\n\n    // Absolute maximum number of images per row.\n    // If this is greater than 12 things will break.  The container will need to be modified for greater than 12.\n    columnLimit = 12;\n\n    // The maximum number of columns based on the current window width.\n    currentMaxColumns;\n\n    // The most recent column count that the user requested.\n    userRequestedColumnCount;\n\n    haveError = false;\n    errorMessage0 = '';\n    errorMessage1 = '';\n    errorMessage2 = '';\n\n    haveData = false;\n\n    // For HTML access\n    properties = Properties;\n\n    // Used when retrieving the DICOM image\n    currentViewImageIndex = -1;\n\n    // Used to display the Series Description at the top of the display.\n    description = '';\n\n    mouseOver;\n\n    // Used when determining how many images can fit in one row\n    innerWidth;\n\n    // Used when determining the height of the image grid, so it fits correctly between the hearing and footer.\n    innerHeight;\n\n    // Just for testing\n    temp = 'Dog';\n\n    private ngUnsubscribe: Subject<boolean> = new Subject<boolean>();\n\n    constructor( private cookieService: CookieService, private utilService: UtilService,\n                 private route: ActivatedRoute, private serverAccessService: ServerAccessService,\n                 private titleService: Title, private commonService: CommonService,\n                 private configurationService: ConfigurationService) {\n\n        this.titleService.setTitle( Properties.TITLE );\n\n        // This will set: DEFAULT_USER, DEFAULT_PASSWORD and DEFAULT_SECRET.\n        // These will only be used if the we have been called from nbia-search, the user is the guest, and the access token has expired.\n        this.configurationService.initConfiguration();\n\n        // Get persisted user preference for viewer columns.\n        this.columns = this.commonService.getPersistedValue( 'viewerColumns' );\n\n        // If there is no persisted user preference for viewer columns, use the default\n        if( this.utilService.isNullOrUndefined( this.columns ) ){\n            this.columns = Properties.VIEWER_COLUMNS_DEFAULT;\n            this.commonService.setPersistedValue( 'viewerColumns', this.columns );\n        }\n        this.userRequestedColumnCount = this.columns;\n\n    }\n\n    ngOnInit() {\n        // Get description passed in the URL\n        this.description = this.route.snapshot.queryParams['thumbnailDescription'];\n\n        // To determining the maximum number of images that can fit in one row\n        this.innerWidth = window.innerWidth;\n\n        // For determining the height of the image grid, so it fits correctly between the heading and footer.\n        this.innerHeight = (window.innerHeight - (50 + 50)).toString() + 'px';  // FIXME - make these constants\n\n        if( this.columns > this.getMaxColumns( window.innerWidth ) ){\n            this.columns = this.getMaxColumns( window.innerWidth );\n        }\n        this.currentMaxColumns = this.getMaxColumns( this.innerWidth );\n\n        // If no description was provided in the url, make sure the description is empty.\n        if( this.utilService.isNullOrUndefinedOrEmpty( this.description ) || (this.description === 'null') ){\n            this.description = '';\n        }\n\n        // When the page changes.\n        this.commonService.currentPageEmitter.subscribe(\n            data => {\n                this.currentPage = data;\n                this.updatePage();\n            }\n        );\n\n        // When the number of images per page changes.\n        this.commonService.imagesPerPageEmitter.subscribe(\n            data => {\n                this.imagesPerPage = data;\n                this.updatePage();\n            },\n            err => {\n                console.error( 'imagesPerPageEmitter imagesPerPage ERROR: ', err );\n            }\n        );\n\n        // Receives the jpg image array.\n        this.serverAccessService.getImagesResultsEmitter.subscribe(\n            data => {\n                this.images = data;\n                this.mouseOver = new Array<number>( this.images.length );\n            },\n            err => {\n                this.reactToError( 'Failed to get Images', err['status'].toString(), err['statusText'] );\n            }\n        );\n\n\n        // //////////////////////////////////////////////////////////////\n        // Error emitter subscribes\n        //\n        // Will likely get one of two errors:\n        //   Authorization 401 - expired token\n        //   Internal Server error 500 - Could be missing jpg.\n        //       we may change return code for missing jpg from 500 on the server side.\n\n        // Calling serverAccessService.getImages can possibly trigger either of two error emitters.\n        //  getThumbnailsEmitter\n        //  getImageDrillDownDataErrorEmitter\n\n        // 401 - expired token\n        // 500 - Could be missing jpg, we may change return code from 500 to something else from the server side.\n\n\n        // This getThumbnails called after getImageDrillDownData, so we are not likely to get a 401,\n        // we would have got the 401 earlier in getImageDrillDownData.\n        // If we do get an error here, it is likely a 500 Server error because the thumbnail image was missing on the server,\n        // this will be handled by serverAccessService.getImages\n        this.serverAccessService.getThumbnailsEmitter.subscribe(\n            data => {\n                if( data.status !== 500 ){\n                    console.error( 'Error getThumbnails: ', data['statusText'] );\n                }\n            }\n        );\n\n\n        // This is our first server call, if there is going to be an Authorization error (401) it will happen here or in getDicomImageErrorEmitter.\n        this.serverAccessService.getImageDrillDownDataErrorEmitter.subscribe(\n            async data => {\n                let currentError = {};\n\n                // Authorization - bad access token error\n                if( data.status === 401 ){\nconsole.log('MHL Authorization - bad access token error');\n                    // User is guest try to get a new token\n                    if( this.isGuest() ){\nconsole.log('MHL Cookie says user is guest.  Try to get a new token.');\n                        let token;\n                        this.serverAccessService.getNewGuestServerAccessToken().subscribe(\n                            tokenData => {\n                                token = tokenData['access_token'];\n                                this.setNewToken( token );\n\n                                // We have a new token, try getImages again.\n                                // FIXME If there is a 401 error with a new token, we will loop endlessly!\n                                this.serverAccessService.getImages( );\n                            },\n                            err => {\n                                currentError = err;\n                                token = null;\n                            }\n                        );\n\n                        while( token === undefined ){\n                            await this.utilService.sleep( 50 );\n                        }\n                        if( token === null ){\n                            this.reactToError( 'Guest Authentication retry failed', currentError['status'].toString(), currentError['statusText'] );\n                        }\n                    }  // End isGuest\n                    else{\n                        this.reactToError( 'Expired login', data['status'].toString(), data['statusText'] );\n                    }\n                } // End of 401\n\n                // An error that is NOT 401\n                else{\n                    this.reactToError( 'Failed to get thumbnail images', data['status'].toString(), data['statusText'] );\n                }\n            }\n        );\n\n\n        // When this.onOpenImageClick calls serverAccessService.downLoadDicomImageFile,\n        this.serverAccessService.getDicomImageErrorEmitter.subscribe(\n            async data => {\n                let currentError = {};\n\n                // Authorization - bad access token error\n                if( data.status === 401 ){\n                    // User is guest try to get a new token\n                    if( this.isGuest() ){\n                        let token;\n                        this.serverAccessService.getNewGuestServerAccessToken().subscribe(\n                            tokenData => {\n                                token = tokenData['access_token'];\n                                this.setNewToken( token );\n\n                                // We have a new token, try getImages again.\n                                // FIXME If there is a 401 error with a new token, we will loop endlessly!\n                                this.onOpenImageClick( this.currentViewImageIndex );\n                            },\n                            err => {\n                                currentError = err;\n                                token = null;\n                            }\n                        );\n                        while( token === undefined ){\n                            await this.utilService.sleep( 50 );\n                        }\n                        if( token === null ){\n                            this.reactToError( 'getDicomImage Guest Authentication retry failed', currentError['status'].toString(), currentError['statusText'] );\n                        }\n                    }  // End isGuest\n                    else{\n                        this.reactToError( 'getDicomImage Expired login', data['status'].toString(), data['statusText'] );\n                    }\n                } // End of 401\n                else{\n                    this.reactToError( 'Failed to get Dicom Images', data['status'].toString(), data['statusText'] );\n                }\n            }\n        );\n\n        this.commonService.haveAllDataEmitter.subscribe(\n            data => {\n                this.haveData = data;\n            }\n        );\n\n        if( Properties.IMAGE_LOAD_MODE === Properties.LOAD_ALL ){\n            this.serverAccessService.getImages();\n        }\n\n    } // End ngOnInit\n\n\n    @HostListener( 'window:resize', ['$event'] )\n    onResize( event ) {\n        this.innerWidth = window.innerWidth;\n        this.innerHeight = (window.innerHeight - (50 + 50)).toString() + 'px'; // FIXME\n        this.currentMaxColumns = this.getMaxColumns( this.innerWidth );\n\n        if( this.columns > this.currentMaxColumns ){\n            this.columns = this.currentMaxColumns;\n        }\n\n        if( (this.columns < this.currentMaxColumns) && (this.columns < this.userRequestedColumnCount) ){\n            this.columns++;\n        }\n    }\n\n\n    onRadioClick( i ){\n        Properties.IMAGE_LOAD_MODE = i;\n    }\n\n    getMaxColumns( winWidth ) {\n        let res = Math.ceil( ((winWidth - this.marginOffset) / this.columnSize) - 1 );\n        if( res > this.columnLimit ){\n            res = this.columnLimit;\n        }\n        return res;\n    }\n\n    onMinusClick() {\n        if( this.columns < this.getMaxColumns( this.innerWidth ) ){\n            this.columns++;\n            this.userRequestedColumnCount = this.columns;\n            this.commonService.setPersistedValue( 'viewerColumns', this.columns );\n\n        }\n        if( this.columns >= this.getMaxColumns( this.innerWidth ) ){\n            this.onZoomOutMouseOver();\n        }\n    }\n\n    onPlusClick() {\n        if( this.columns > 1 ){\n            this.columns--;\n            this.userRequestedColumnCount = this.columns;\n            this.commonService.setPersistedValue( 'viewerColumns', this.columns );\n        }\n        if( this.columns <= 1 ){\n            this.onZoomInMouseOver();\n        }\n    }\n\n\n    updatePage() {\n        if( Properties.IMAGE_LOAD_MODE ===  Properties.LOAD_ALL ){\n            this.firstImage = this.currentPage * this.imagesPerPage;\n        }else{\n            this.firstImage = 0;\n        }\n    }\n\n\n    reactToError( whatFailed, errorNum, errorText ) {\n        console.error( 'Error( ' + whatFailed + ', ' + errorNum + ', ' + errorText + ')' );\n        this.haveError = true;\n        this.errorMessage0 = whatFailed;\n        // this.errorMessage1 = errorNum;\n        this.errorMessage2 = errorText;\n    }\n\n    getToken() {\n        return this.commonService.getPersistedValue( 'at' );\n    }\n\n    setNewToken( token ) {\n        this.commonService.setPersistedValue( 'at', token );\n        this.serverAccessService.setToken( token);\n    }\n\n\n    isGuest() {\n        let g = this.commonService.getPersistedValue( 'guest' );\n        if( this.utilService.isNullOrUndefined( g ) ){\n            return true;\n        }\n\n        return this.utilService.isTrue( g );\n    }\n\n    onOpenImageClick( i ) {\n        // We keep this value in case the call to get the image fails due to error 401, and the user is guest,\n        // we can get a new token and try again.\n        this.currentViewImageIndex = i;\n        this.serverAccessService.downLoadDicomImageFile( this.images[i].seriesInstanceUid, this.images[i].sopInstanceUid, this.images[i].studyInstanceUid );\n    }\n\n    onMouseOver( i ) {\n        this.mouseOver[i] = true;\n    }\n\n    onMouseOut( i ) {\n        this.mouseOver[i] = false;\n    }\n\n    onZoomOutMouseOver(): void {\n        if( this.columns >= this.currentMaxColumns ){\n            this.zoomOutImgSrc = 'assets/images/zoom_out_dark.png';\n        }else{\n            this.zoomOutImgSrc = 'assets/images/zoom_out_white.png';\n        }\n    }\n\n    onZoomOutMouseOut(): void {\n        this.zoomOutImgSrc = 'assets/images/zoom_out_dark.png';\n    }\n\n    onZoomInMouseOver(): void {\n        if( this.columns > 1 ){\n            this.zoomInImgSrc = 'assets/images/zoom_in_white.png';\n        }\n        else{\n            this.zoomInImgSrc = 'assets/images/zoom_in_dark.png';\n        }\n    }\n\n    onZoomInMouseOut(): void {\n        this.zoomInImgSrc = 'assets/images/zoom_in_dark.png';\n    }\n\n\n    ngOnDestroy(): void {\n    }\n\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Properties } from '../../assets/properties';\nimport { Subject } from 'rxjs';\nimport { UtilService } from '../services/util.service';\nimport { CommonService } from '../services/common.service';\nimport { ServerAccessService } from '../services/server-access.service';\n\n@Component( {\n    selector: 'nbia-pager',\n    templateUrl: './pager.component.html',\n    styleUrls: ['./pager.component.scss', '../nbia-thumbnail-viewer/nbia-thumbnail-viewer.component.scss']\n} )\nexport class PagerComponent implements OnInit, OnDestroy{\n    /**\n     * Total number of results (not pages).\n     */\n    totalCount = 0;\n\n    /**\n     * Total number of pages, not just the visible pages.<br><br>\n     * totalCount / countPerPage rounded up.\n     */\n    pageCount;\n\n    /**\n     * Number of rows to display for each page.<br>\n     * This is initialized from a persisted value,<br>\n     * If there is no persisted value, then it is initialized from a default - Properties.IMAGES_PER_PAGE_CHOICE_DEFAULT.\n     */\n    countPerPage;\n\n    /**\n     * An array representing each button, this currently just holds the text for the button (which is just the index plus one).\n     * @type {Array}\n     */\n    buttons = [];\n\n    /**\n     * The currently visible page, when this value changes, it is emitted by a call to commonService.updateCurrentSearchResultsPage or<br>\n     * commonService.updateCurrentCartPage.\n     * @type {number}\n     */\n    currentPage = 0;\n\n    /**\n     * How many \"Number\" buttons to show if there are more than Properties.MAX_PAGER_BUTTONS pages.\n     * @type {number}\n     */\n    maxButtonsToShow = Properties.MAX_PAGER_BUTTONS;\n\n    /**\n     * If there are more than Properties.MAX_PAGER_BUTTONS pages, the visible number buttons will scroll.<br>\n     * This is the first (left most) visible button.  Zero is the first page.\n     * @type {number}\n     */\n    buttonShowOffset = 0;\n\n    /**\n     * @TODO explain\n     * @type {number}\n     */\n    direction = 0;\n\n    haveData = false;\n\n    /**\n     * Search results, or a Cart list.\n     */\n    @Input() displayDataType;\n\n    private ngUnsubscribe: Subject<boolean> = new Subject<boolean>();\n\n    constructor( private util: UtilService, private commonService: CommonService ,\n                 private serverAccessService: ServerAccessService) {\n    }\n\n    ngOnInit() {\n        this.commonService.haveAllDataEmitter.subscribe(\n            data => {\n                this.haveData = data;\n            }\n        );\n\n        this.commonService.imageCountEmitter.subscribe(\n            data => {\n                this.totalCount = data;\n                this.pageCount = Math.ceil( this.totalCount / this.countPerPage );\n                this.setButtons();\n            }\n        );\n\n\n        this.countPerPage = this.commonService.imagesPerPageEmitter.subscribe(\n            data => {\n                this.countPerPage = +data;\n                this.pageCount = Math.ceil( this.totalCount / this.countPerPage );\n                this.setButtons();\n\n                if(  Properties.IMAGE_LOAD_MODE === Properties.LOAD_ONE_PAGE){\n                    this.serverAccessService.getImages( this.currentPage );\n                }\n\n            }\n        );\n\n        if( this.util.isNullOrUndefined( this.countPerPage ) ){\n            this.countPerPage = Properties.IMAGES_PER_PAGE_CHOICE_DEFAULT;\n        }\n\n\n\n\n        /*\n\n                    // When the total number of rows changes.\n                    this.commonService.cartCountEmitter.takeUntil( this.ngUnsubscribe ).subscribe(\n                        data => {\n                            this.totalCount = data;\n                            this.pageCount = Math.ceil( this.totalCount / this.countPerPage );\n                            this.currentPage = 0;\n                            this.onClick( this.currentPage );\n                            this.setButtons();\n                        }\n                    );\n\n                    // When the number of rows per page changes.\n                    this.commonService.cartsPerPageEmitter.takeUntil( this.ngUnsubscribe ).subscribe(\n                        data => {\n                            this.countPerPage = data;\n                            this.pageCount = Math.ceil( this.totalCount / this.countPerPage );\n                            // Go back to first page\n                            this.currentPage = 0;\n                            this.onClick( this.currentPage );\n                            this.setButtons();\n                        }\n                    );\n\n        */\n\n\n        /////////////////\n    }\n\n    /**\n     * Initialize the buttons with their correct numbers - called when row count, or rows per page changes.\n     */\n    setButtons() {\n        this.buttons = [];\n        for( let f = 0; f < this.pageCount; f++ ){\n            this.buttons[f] = f;\n        }\n    }\n\n\n    /**\n     * Called when a number button is clicked, also called by:<br>\n     * <ul>\n     *     <li>onGoFirstClickClick()</li>\n     *     <li>onGoPreviousClick()</li>\n     *     <li>onGoNextClick()</li>\n     *     <li>onGoLastClick()</li>\n     * </ul>\n     *\n     * @param pageNum  The page to display.\n     */\n    onClick( pageNum ) {\n        this.currentPage = pageNum;\n        this.commonService.setCurrentPage( this.currentPage );\n        if( Properties.IMAGE_LOAD_MODE === Properties.LOAD_ONE_PAGE ){\n            this.serverAccessService.getImages( this.currentPage );\n        }\n    }\n\n    onGoFirstClickClick() {\n        this.buttonShowOffset = 0;\n        this.onClick( 0 );\n    }\n\n    onGoPreviousClick() {\n        if( this.currentPage > 0 ){\n            this.currentPage--;\n        }\n        if( this.currentPage < this.buttonShowOffset ){\n            this.buttonShowOffset--;\n        }\n        this.onClick( this.currentPage );\n    }\n\n    onGoNextClick() {\n        if( this.currentPage < (this.pageCount - 1) ){\n            this.currentPage++;\n        }\n        if( this.currentPage > (this.buttonShowOffset + this.maxButtonsToShow - 1) ){\n            this.buttonShowOffset++;\n        }\n        this.onClick( this.currentPage );\n    }\n\n    onGoLastClick() {\n        this.buttonShowOffset = this.pageCount - this.maxButtonsToShow;\n        this.onClick( this.pageCount - 1 );\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe.next(null);\n        this.ngUnsubscribe.complete();\n    }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Properties } from '../../assets/properties';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UtilService } from './util.service';\n\n@Injectable( {\n    providedIn: 'root'\n} )\nexport class CommonService{\n\n    // save and restore the column count & images per page.\n    cookieData;\n\n\n    imagesPerPageEmitter = new EventEmitter();\n    imagesPerPage = Properties.IMAGES_PER_PAGE_CHOICE_DEFAULT;\n    currentPageEmitter = new EventEmitter();\n    currentPage = 0;\n    imageCountEmitter = new EventEmitter();\n    imageCount = 0;\n\n    haveAllDataEmitter = new EventEmitter();\n    haveAllData = false;\n\n    constructor( private cookieService: CookieService, private utilService: UtilService ) {\n        if(this.cookieService.get( Properties.COOKIE_NAME ) == null || this.cookieService.get( Properties.COOKIE_NAME ) == \"\"){\n            this.cookieData = {};\n        } else {\n            this.cookieData = JSON.parse( this.cookieService.get( Properties.COOKIE_NAME ) );\n        }\n    }\n\n    setHaveAllData( haveIt ) {\n        this.haveAllData = haveIt;\n        this.haveAllDataEmitter.emit( haveIt );\n    }\n\n    getHaveAllData( haveIt ) {\n        return this.haveAllData;\n    }\n\n\n    setImagesPerPage( i ) {\n        this.imagesPerPageEmitter.emit( i );\n        this.setPersistedValue( 'imagesPerPage', i );\n        this.imagesPerPage = i;\n    }\n\n    getImagesPerPage() {\n        return this.imagesPerPage;\n    }\n\n    setCurrentPage( p ) {\n        this.currentPageEmitter.emit( p );\n        this.currentPage = p;\n    }\n\n    getCurrentPage() {\n        return this.currentPage;\n    }\n\n    setImageCount( c ) {\n        this.imageCountEmitter.emit( c );\n        this.imageCount = c;\n    }\n\n    getImageCount() {\n        return this.imageCount;\n    }\n\n    getPersistedValue( key ) {\n        // todo: clean this up\n        // temporary fix for retreiving access token from local storage rather than cookie\n        if(key == 'at'){\n            return localStorage.getItem('at');\n        }\n        if( !this.utilService.isNullOrUndefinedOrEmpty( this.cookieData ) ){\n            try{\n                return this.cookieData[key];\n            }\n            catch( e ){\n                console.error( 'Error parsing persisted data: ', e.message );\n                return '';\n            }\n        }\n    }\n\n    setPersistedValue( key, value ) {\n        this.cookieData[key] = value;\n        this.cookieService.set( Properties.COOKIE_NAME, JSON.stringify( this.cookieData ) );\n    }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Properties } from '../../assets/properties';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { UtilService } from './util.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigurationService {\n\n  constructor(  private httpClient: HttpClient, private utilService: UtilService ) { }\n\n    initConfiguration() {\n\n        this.readTextFile( 'assets/' + Properties.CONFIG_FILE ).subscribe(\n            data => {\n\n                this.parseConfig( data );\n                Properties.CONFIG_COMPLETE = true;\n            },\n            err => {\n                if( err.status === 404 ){\n                    console.error( 'Could not find CONFIG_FILE file \"' + 'assets/' + Properties.CONFIG_FILE );\n                }\n                console.error( 'Could not access CONFIG_FILE file! ', err.status );\n                Properties.CONFIG_COMPLETE = true;\n\n            }\n        );\n    }\n\n    readTextFile( file ): Observable<any> {\n        return this.httpClient.get( file,\n            {\n                responseType: 'text'\n            } );\n    }\n\n\n    parseConfig( data ) {\n        let config = data.replace( /\\r\\n/g, '\\r' ).replace( /\\n/g, '\\r' ).split( /\\r/ );\n\n        for( let line of config ){\n            if( line.match( '^\\s*#' ) ){\n            }else{\n                if( line.includes( '=' ) ){\n                    let value = line.replace( /.*?=\\s*/, '' );\n                    let key = line.replace( /\\s*?=.*$/, '' );\n                    key = key.replace(/^\\s*/, '');\n\n                    if( key === 'DEFAULT_USER' ){\n                        if( !this.utilService.isNullOrUndefinedOrEmpty( value ) ){\n                            Properties.DEFAULT_USER = value;\n                        }\n                    }\n\n                    if( key === 'DEFAULT_PASSWORD' ){\n                        if( !this.utilService.isNullOrUndefinedOrEmpty( value ) ){\n                            Properties.DEFAULT_PASSWORD = value;\n                        }\n                    }\n\n                    if( key === 'DEFAULT_SECRET' ){\n                        if( !this.utilService.isNullOrUndefinedOrEmpty( value ) ){\n                            Properties.DEFAULT_SECRET = value;\n                        }\n                    }\n\n                    if( key === 'DEFAULT_CLIENT_ID' ){\n                        if( !this.utilService.isNullOrUndefinedOrEmpty( value ) ){\n                            Properties.DEFAULT_CLIENT_ID = value;\n                        }\n                    }\n\n                }\n            }\n        }\n    }\n\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Observable } from 'rxjs';\nimport { Properties } from '../../assets/properties';\nimport { UtilService } from './util.service';\nimport { CommonService } from './common.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { timeout } from 'rxjs/operators';\n\n@Injectable( {\n    providedIn: 'root'\n} )\nexport class ServerAccessService{\n\n    getImagesResultsEmitter = new EventEmitter();\n    getThumbnailsEmitter = new EventEmitter();\n    getImageDrillDownDataErrorEmitter = new EventEmitter();\n    getDicomImageErrorEmitter = new EventEmitter();\n\n    API_SERVER_URL = '';\n    images = [];\n    getThumbnailErrorCount = 0;\n    seriesId;\n\n    first;\n    last;\n\n    token;\n    refreshToken;\n    expiresIn;\n    tokenRefreshCycleRunning = false;\n\n    loading = true;\n\n    constructor( private httpClient: HttpClient, private sanitizer: DomSanitizer,\n                 private utilService: UtilService, private commonService: CommonService,\n                 private route: ActivatedRoute, private router: Router\n    ) {\n        this.API_SERVER_URL = location.origin.toString();\n\n        this.seriesId = this.route.snapshot.queryParams['thumbnailSeries'];\n\n\n        this.token = this.commonService.getPersistedValue( 'at' );\n        this.initToken();\n    }\n\n\n    /**\n     * If page has a value, only that page of images is downloaded.\n     * We get the current number of images per page from commonService.getImagesPerPage().\n     *\n     * @param page\n     */\n\n    /**\n     * If page has a value, only that page of images is downloaded.\n     * If page & imageNumber have value, get just one image.\n     *\n     * We get the current number of images per page from commonService.getImagesPerPage().\n\n     * @param page\n     * @param imageNumber\n     */\n    async getImages( page?, imageNumber? ) {\n        this.loading = true;\n        this.images = [];\n        let len = 99999999;\n        this.getImageDrillDownData().subscribe(\n            data => {\n                len = data.length;\n                this.commonService.setImageCount( len );\n\n                this.first = 0;\n                this.last = len - 1;\n\n\n                if( Properties.IMAGE_LOAD_MODE === Properties.LOAD_ONE_PAGE ){\n                    if( !this.utilService.isNullOrUndefined( page ) ){\n                        this.commonService.setCurrentPage( page );\n                    }else{\n                        page = 0;\n                    }\n\n                    this.first = (+this.commonService.getCurrentPage() * +this.commonService.getImagesPerPage());\n                    this.last = this.first + (+this.commonService.getImagesPerPage()) - 1;\n                    if( this.last > len ){\n                        this.last = len - 1;\n                    }\n                }\n\n                for( let i = this.first; i <= this.last; i++ ){\n                    this.getThumbnails( data[i]['seriesInstanceUid'], data[i]['sopInstanceUid'] ).subscribe(\n                        thumbnailData => {\n                            this.images.push(\n                                {\n                                    'thumbnailImage': this.sanitizer.bypassSecurityTrustUrl( window.URL.createObjectURL( thumbnailData ) ),\n                                    'seriesInstanceUid': data[i]['seriesInstanceUid'],\n                                    'sopInstanceUid': data[i]['sopInstanceUid'],\n                                    'studyInstanceUid': data[i]['studyInstanceUid'],\n                                    'seq': i\n                                }\n                            );\n                        },\n\n                        // If we could not get the thumbnail from the server,\n                        // we still want to display the frame with the \"View Image\" button\n                        // because the DICOM image may still there.\n                        thumbnailError => {\n                            console.log( 'ThumbnailError: ', thumbnailError );\n                            // We need this count when we are waiting for all the images (by count) to arrive before moving on\n                            this.getThumbnailErrorCount++;\n\n                            // Add a \"we can't find it\" image.\n                            this.images.push(\n                                {\n                                    'thumbnailImage': 'assets/images/image_not_found.png',\n                                    'seriesInstanceUid': data[i]['seriesInstanceUid'],\n                                    'sopInstanceUid': data[i]['sopInstanceUid'],\n                                    'studyInstanceUid': data[i]['studyInstanceUid'],\n                                    'seq': i\n                                }\n                            );\n                            // this.getThumbnailsEmitter.emit( thumbnailError );\n                        }\n                    );\n                }\n                this.loading = false;\n            },\n            err => {\n                this.loading = false;\n                this.getImageDrillDownDataErrorEmitter.emit( err );\n\n            }\n        );\n\n        // Wait until we have all the images.\n        this.commonService.setHaveAllData( false );\n\n        if( Properties.IMAGE_LOAD_MODE === Properties.LOAD_ALL ){\n            while( (this.images.length + this.getThumbnailErrorCount) < len ){\n                await this.utilService.sleep( Properties.WAIT_TIME );\n            }\n        }else{\n            while( this.loading || ((this.images.length + this.getThumbnailErrorCount) < (this.last - this.first)) ){\n                await this.utilService.sleep( Properties.WAIT_TIME );\n            }\n        }\n        this.commonService.setHaveAllData( true );\n\n        // Sort by seq here - need to sort, they may not have arrived from the server in the order they where requested.\n        this.images.sort( ( row1, row2 ) => (row1.seq - row2.seq) );\n\n        this.getImagesResultsEmitter.emit( this.images );\n\n    }\n\n    getImageDrillDownData(): Observable<any> {\n        let query = 'list=' + this.seriesId;\n\n        if( Properties.DEBUG_CURL ){\n            let curl = ' curl -H \\'Authorization:Bearer  ' + this.getToken() + '\\' -k \\'' + this.API_SERVER_URL + '/nbia-api/services/getImageDrillDown\\' -d \\'' + query + '\\'';\n            console.log( 'doPost: ', curl );\n        }\n\n        let imageDrillDownUrl = this.API_SERVER_URL + '/nbia-api/services/getImageDrillDown';\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': 'Bearer ' + this.getToken()\n        } );\n\n        let options = {\n            headers: headers,\n        };\n        return this.httpClient.post( imageDrillDownUrl, query, options );\n    }\n\n\n    getThumbnails( seriesUid, objectId ): Observable<any> {\n        let post_url = this.API_SERVER_URL + '/nbia-api/services/getThumbnail';\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': 'Bearer  ' + this.getToken()\n        } );\n\n        let data = 'seriesUID=' + seriesUid + '&objectUID=' + objectId;\n        let dataTemp = 'seriesUID=' + this.seriesId + '&objectUID=' + objectId;\n\n\n        if( Properties.DEBUG_CURL ){\n            let curl = 'curl -H \\'Authorization:Bearer ' + this.getToken() + '\\' -d  \\'' + data + '\\' ' + ' -X POST -k \\'' + post_url + '\\'';\n            console.log( 'doGet: ' + curl );\n        }\n\n        let options =\n            {\n                headers: headers,\n                method: 'post',\n                responseType: 'blob' as 'blob'\n            };\n        return this.httpClient.post( post_url, data, options );\n    }\n\n\n    downLoadDicomImageFile( seriesUID, objectUID, studyUID ) {\n\n        this.getDicomImage( seriesUID, objectUID, studyUID ).subscribe(\n            data => {\n                let dicomFile = new Blob( [data], { type: 'application/dicom' } );\n\n                // TODO in the download popup, it says 'from: blob:'  see if we can change this.\n                let url = (<any>window).URL.createObjectURL( dicomFile );\n                (<any>window).open( url );\n            },\n            err => {\n                console.error( 'Error downloading DICOM: ', err );\n                this.getDicomImageErrorEmitter.emit( err );\n            }\n        );\n    }\n\n    getDicomImage( seriesUID, objectUID, studyUID ): Observable<any> {\n        let post_url = this.API_SERVER_URL + '/nbia-api/services/getWado';\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': 'Bearer  ' + this.getToken()\n        } );\n\n        let data = 'seriesUID=' + seriesUID + '&objectUID=' + objectUID + '&studyUID=' + studyUID + '&requestType=WADO';\n\n        if( Properties.DEBUG_CURL ){\n            let curl = 'curl  -v -d  \\'' + data + '\\' ' + ' -X POST -k \\'' + post_url + '\\'';\n            console.log( 'doGet: ' + curl );\n        }\n\n        let options =\n            {\n                headers: headers,\n                method: 'post',\n                responseType: 'blob' as 'blob'\n            };\n        return this.httpClient.post( post_url, data, options );\n    }\n\n\n    /**\n     * Requests an Access token from the API server, Using the guest settings (Viewer never has the users name & password).\n     *\n     * @returns {Observable<any>}\n     */\n    getNewGuestServerAccessToken(): Observable<any> {\n        console.log( 'MHL getNewGuestServerAccessToken' );\n        let post_url = this.API_SERVER_URL + '/nbia-api/oauth/token';\n        let headers = new HttpHeaders( { 'Content-Type': 'application/x-www-form-urlencoded' } );\n\n        let data = 'username=' + Properties.DEFAULT_USER +\n            '&password=' + Properties.DEFAULT_PASSWORD +\n            '&client_id=' + Properties.DEFAULT_CLIENT_ID + '=' + Properties.DEFAULT_SECRET +\n            '&grant_type=password';\n\n\n        if( Properties.DEBUG_CURL ){\n            let curl = 'curl -v -d  \\'' + data + '\\' ' + ' -X POST -k \\'' + post_url + '\\'';\n            console.log( 'getNewGuestServerAccessToken: ' + curl );\n        }\n\n        let options =\n            {\n                headers: headers,\n                method: 'post'\n            };\n        return this.httpClient.post( post_url, data, options );\n    }\n\n    /**\n     *\n     * @param t\n     */\n    initToken() {\n\n        // Get access token\n            let tokens = this.route.snapshot.queryParams['accessToken'];\n            if( tokens !== undefined){\n\n                tokens = tokens.split( ':' );\n                this.token = tokens[0];\n                this.refreshToken = tokens[1];\n                this.expiresIn = tokens[2];\n\n\n                this.startRefreshTokenCycle();\n\n              //  this.setToken( this.token );\n /*               this.accessTokenService.setRefreshToken( this.refreshToken );\n                this.accessTokenService.setExpiresIn( this.expiresIn );\n\n                this.accessTokenService.startRefreshTokenCycle();\n*/\n            }\n\n\n\n            /*\n                    if( this.route.snapshot.queryParams['token'] !== undefined ){\n                        this.setToken( this.route.snapshot.queryParams['token'] );\n                        console.log( 'MHL Using URL token: ', this.token );\n                    }else if( this.route.snapshot.queryParams['token'] !== undefined ){\n                        this.setToken( this.route.snapshot.queryParams['token'] );\n                        console.log( 'MHL Using Cookie token: ', this.token );\n                    }else{\n                        // Put login here\n                        console.log( 'MHL Using NO TOKEN' );\n                    }\n            */\n    }\n\n\n\n    startRefreshTokenCycle(){\n        let tempCounter = 0;\n        if( ! this.tokenRefreshCycleRunning ){\n         //   console.log('MHL startRefreshTokenCycle');\n            this.tokenRefreshCycleRunning = true;\n            let cycleTimeSeconds = this.expiresIn - Properties.TOKEN_REFRESH_TIME_MARGIN;\n            setInterval(() => {\n              //  console.log('MHL refresh[' + cycleTimeSeconds + ']: ' + new Date() + '  ' + tempCounter++);\n                this.getAccessTokenWithRefresh( this.getRefreshToken() );\n\n            }, this.getExpiresIn() * 1000);\n        }\n    }\n\n    /**\n     * Gets an Access token from the server using a refresh token\n     * @param user\n     * @param password\n     */\n    getAccessTokenWithRefresh( refreshToken ) {\n        let post_url = this.API_SERVER_URL + '/nbia-api/oauth/token';\n\n\n        let headers = new HttpHeaders( { 'Content-Type': 'application/x-www-form-urlencoded' } );\n        let data = 'client_id=' + Properties.DEFAULT_CLIENT_ID + '&client_secret=' + Properties.DEFAULT_SECRET + '&grant_type=refresh_token&refresh_token=' + refreshToken;\n\n        if( Properties.DEBUG_CURL ){\n            let curl = 'curl  -v -d  \\'' + data + '\\' ' + ' -X POST -k \\'' + post_url + '\\'';\n            console.log( 'getAccessToken: ' + curl );\n        }\n\n        let options =\n            {\n                headers: headers,\n                method: 'post'\n            };\n\n        this.httpClient.post( post_url, data, options ).pipe( timeout( Properties.HTTP_TIMEOUT ) ).subscribe(\n            accessTokenData => {\n                this.setToken( accessTokenData['access_token'] );\n                this.setRefreshToken( accessTokenData['refresh_token'] );\n                this.setExpiresIn( accessTokenData['expires_in'] );\n\n                // If the token was passed to us in the URL, we need to update that URL when the token changes (so refreshing the page won't keep prompting for login).\n                if( Properties.HAVE_URL_TOKEN ){\n                    this.appendAQueryParam( this.getToken() + ':' + this.getRefreshToken() + ':' + this.getExpiresIn() );\n                }\n\n            },\n            err => {\n                console.error( 'Get new token with refresh token error: ', err );\n                // @FIXME Inform user\n            }\n        )\n    }\n\n\n    /**\n     * Updates the URL at the top of the browser with a new token string.\n     *\n     * @param tokenString Access token: refresh token: token life span in seconds\n     */\n    appendAQueryParam( tokenString ) {\n        let urlTree = this.router.createUrlTree([], {\n            queryParams: { accessToken: tokenString },\n            queryParamsHandling: \"merge\",\n            preserveFragment: true });\n        this.router.navigateByUrl(urlTree);\n    }\n\n\n\n    setToken( t ) {\n        this.token = t;\n    }\n\n    getToken() {\n        return this.token;\n    }\n\n    setRefreshToken( token ) {\n        this.refreshToken = token;\n    }\n\n    getRefreshToken(  ) {\n        return this.refreshToken;\n    }\n\n    setExpiresIn( expIn ) {\n        this.expiresIn = expIn;\n    }\n\n    getExpiresIn(  ) {\n        return this.expiresIn;\n    }\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable( {\n    providedIn: 'root'\n} )\nexport class UtilService{\n\n    constructor() {\n    }\n\n\n    isNullOrUndefined( val ): boolean {\n        let res = false;\n        if( val == null ){\n            res = true;\n        }\n\n        if( val === null ){\n            res = true;\n        }\n\n        if( typeof val === 'undefined' ){\n            res = true;\n        }\n\n        return res;\n    }\n\n\n    /**\n     * A number or a boolean will return Empty (true)\n     * @param obj\n     * @returns {boolean}\n     */\n    isEmpty( obj ) {\n        for( let key in obj ){\n            if( obj.hasOwnProperty( key ) ){\n                return false;\n            }\n        }\n        return true;\n    }\n\n\n    isNullOrUndefinedOrEmpty( val ): boolean {\n        if( this.isNullOrUndefined( val ) ){\n            return true;\n        }\n\n        return( this.isEmpty(val));\n    }\n\n    isTrue( value ) {\n        if( this.isNullOrUndefined( value ) ){\n            return false;\n        }\n\n        if( typeof value === 'number' ){\n            return value !== 0;\n        }\n\n        if( typeof value === 'boolean' ){\n            return value;\n        }\n\n        let val = '' + value.toUpperCase();\n        return (val === 'TRUE') || (val === 'YES') || (val === 'ON') || (val === '1');\n\n\n    }\n\n\n    sleep( ms ) {\n        return new Promise( resolve => setTimeout( resolve, ms ) );\n    }\n\n}\n","export let Properties = {\n    // 06_NOV_2020\n    // VERSION: '1.0.67',\n    // 15_MAY_2021\n    VERSION: '1.0.67c',\n    TITLE: 'Image Viewer',\n\n    VIEWER_COLUMNS_DEFAULT: 5,\n\n    COOKIE_NAME: 'NBIA_data',\n    WAIT_TIME: 50,\n    DEBUG_CURL: true,\n    DEBUG: false,\n    LOAD_ALL: 0,\n    LOAD_ONE_PAGE: 1,\n    LOAD_ONE_IMAGE: 2,\n    IMAGE_LOAD_MODE: 1,\n\n    DEFAULT_USER: 'nbia_guest',\n    DEFAULT_PASSWORD: 'test',\n    DEFAULT_SECRET: '',\n    DEFAULT_CLIENT_ID: 'nbia-stage',\n\n    // This is a flag that is set to true by the ConfigurationService when all the configuration file settings have been set.\n    // It used to determine if it is okay to start using the configured settings yet.\n    CONFIG_COMPLETE: false,\n\n    // The \"CONFIG_FILE\" is within the /assets directory\n    CONFIG_FILE: 'configuration',\n\n    HTTP_TIMEOUT: 120000,\n    HAVE_URL_TOKEN: true,\n\n\n    /*  How many numbered page buttons between the arrow buttons  */\n    MAX_PAGER_BUTTONS: 6,\n    IMAGES_PER_PAGE_CHOICE_DEFAULT: 200 ,  // @TODO Get some feed back from users...\n\n    // How many seconds before token end of life to refresh the token\n    TOKEN_REFRESH_TIME_MARGIN: 60\n\n};\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.footer-div {\n  padding: 0;\n  margin-top: 3px;\n  height: 38px;\n}\n\n.per-page-span {\n  margin-top: 3px;\n}\n\n.pager-span {\n  float: right;\n}\n\n.footer-row {\n  padding: 0;\n  margin: 0;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/app/footer/footer.component.scss\"],\"names\":[],\"mappings\":\"AAEA;EACI,UAAA;EACA,eAAA;EACA,YAAA;AADJ;;AAKA;EACI,eAAA;AAFJ;;AAMA;EACI,YAAA;AAHJ;;AAOA;EACI,UAAA;EACA,SAAA;AAJJ\",\"sourcesContent\":[\"$footer_height: 38;\\n\\n.footer-div{\\n    padding: 0;\\n    margin-top: 3px;\\n    height: 0px + $footer_height;\\n}\\n\\n\\n.per-page-span{\\n    margin-top: 3px;\\n}\\n\\n\\n.pager-span{\\n    float:right;\\n\\n}\\n\\n.footer-row{\\n    padding: 0;\\n    margin: 0;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.number-spinner {\n  color: #6b6b6b;\n  background-color: #ffffff;\n  padding-left: 10px;\n  margin-top: 3px;\n  height: 24px;\n  width: 60px;\n}\n\n.images-per-page-span {\n  color: #6b6b6b;\n  background-color: #ffffff;\n  border: solid #8c8c8c 1px;\n  border-radius: 4px;\n  padding: 7px 7px 8px;\n  margin-top: 0;\n  height: 44px;\n  font-size: 12pt;\n  font-style: normal;\n  font-weight: normal;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/app/images-per-page/images-per-page.component.scss\",\"webpack://./src/app/app.component.scss\"],\"names\":[],\"mappings\":\"AAEA;EACI,cCWgB;EDVhB,yBCSgB;EDPhB,kBAAA;EACA,eAAA;EACA,YAAA;EACA,WAAA;AAFJ;;AAKA;EACI,cCCgB;EDAhB,yBCDgB;EDEhB,yBAAA;EACA,kBAAA;EAEA,oBAAA;EACA,aAAA;EACA,YAAA;EAEA,eAAA;EACA,kBAAA;EACA,mBAAA;AAJJ\",\"sourcesContent\":[\"@import '../app.component.scss';\\n\\n.number-spinner{\\n    color: $button_foreground;\\n    background-color: $button_background;\\n\\n    padding-left: 10px;\\n    margin-top: 3px;\\n    height: 24px;\\n    width: 60px;\\n}\\n\\n.images-per-page-span{\\n    color: $button_foreground;\\n    background-color: $button_background;\\n    border: solid #8c8c8c 1px;\\n    border-radius: 4px;\\n\\n    padding: 7px 7px 8px;\\n    margin-top: 0;\\n    height: 44px;\\n\\n    font-size: 12pt;\\n    font-style: normal;\\n    font-weight: normal;\\n}\\n\",\"\\n$image_frame_margin: 4;\\n$outer_margin: 7;\\n$border_thickness: 2;\\n\\n$image_number_left: 2;\\n$image_number_top: 2;\\n$image_number_font_size: 18;\\n\\n$disabled_button_background: #aaaaaa;\\n$hover_button_background: #286090;\\n\\n$page_number_background: #ddd;\\n$button_background: #ffffff;\\n$button_foreground: #6b6b6b;\\n$button_background_hover: #e6e6e6;\\n\\n$image_border: #286090;\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.heading-cell {\n  height: 48px;\n}\n\n/* Series Description, Image count, and Zoom buttons. */\n.heading-label {\n  color: #6b6b6b;\n  background-color: #ffffff;\n  border: solid #6b6b6b 1px;\n  border-radius: 5px;\n  padding: 4px 8px 4px 8px;\n  margin-top: 10px;\n  font-size: 16pt;\n}\n\n.loading-label {\n  color: #fff;\n  background-color: #337ab7;\n  border: solid #337ab7 1px;\n  border-radius: 5px;\n  padding: 4px 8px 4px 8px;\n  margin-top: 10px;\n  font-size: 16pt;\n}\n\n.busy {\n  cursor: progress;\n}\n\n.image-grid-row {\n  margin-left: 1px;\n  width: 100%;\n}\n\n.image-grid {\n  padding-top: 2px;\n  overflow-y: scroll;\n}\n\n.grid-button-icon {\n  height: 24px;\n}\n\n.zoom-button {\n  color: #6b6b6b;\n  background-color: #ffffff;\n  border: solid #6b6b6b 1px;\n  border-radius: 5px;\n  margin-top: -7px;\n  margin-left: 2px;\n  margin-right: 2px;\n  height: 37px;\n}\n\n.zoom-button:disabled {\n  background-color: #aaaaaa;\n}\n\n.zoom-button[disabled]:hover {\n  background-color: #aaaaaa;\n}\n\n.zoom-button:hover {\n  background-color: #6b6b6b;\n}\n\n.plus-minus {\n  float: right;\n}\n\n.clicker {\n  cursor: pointer;\n}\n\n.parent-image-div {\n  border: #286090 solid 2px;\n  border-radius: 4px;\n  box-shadow: 0 0 2px 2px rgba(40, 96, 144, 0.3);\n  padding: 4px;\n}\n\n.topImage {\n  padding: 0;\n  margin-bottom: 14px;\n}\n\n.parentImageMouseOver {\n  cursor: pointer;\n}\n\n.image {\n  max-height: 100%;\n  max-width: 100%;\n  top: 4px;\n  left: 4px;\n}\n\n.image-mouseover {\n  z-index: 0;\n  margin-left: 9px;\n  margin-top: 6px;\n  height: calc(100% - 12px);\n  position: absolute;\n  top: 0;\n}\n\n.open-image-img {\n  z-index: 2;\n  opacity: 0.75;\n}\n\n.image-number-span {\n  z-index: 0;\n  margin-left: 14px;\n  width: 100%;\n  position: absolute;\n  top: 2px;\n  left: 0px;\n}\n\n.image-numberMouseOver {\n  z-index: 3;\n  opacity: 1;\n  font-weight: 900;\n}\n\n.image-number {\n  -webkit-text-fill-color: white;\n  -webkit-text-stroke-width: 1px;\n  -webkit-text-stroke-color: black;\n  margin-left: 2px;\n  cursor: default;\n  font-size: 18pt;\n  font-weight: 900;\n}\n\n.hide-element {\n  display: none;\n}\n\n.col-nbia-1 {\n  padding-right: 7px;\n  padding-left: 7px;\n  min-height: 1px;\n  position: relative;\n  width: 100%;\n  float: left;\n}\n\n.col-nbia-2 {\n  padding-right: 7px;\n  padding-left: 7px;\n  min-height: 1px;\n  position: relative;\n  width: 50%;\n  float: left;\n}\n\n.col-nbia-3 {\n  padding-right: 7px;\n  padding-left: 7px;\n  min-height: 1px;\n  position: relative;\n  width: 33.3333333333%;\n  float: left;\n}\n\n.col-nbia-4 {\n  padding-right: 7px;\n  padding-left: 7px;\n  min-height: 1px;\n  position: relative;\n  width: 25%;\n  float: left;\n}\n\n.col-nbia-5 {\n  padding-right: 7px;\n  padding-left: 7px;\n  min-height: 1px;\n  position: relative;\n  width: 20%;\n  float: left;\n}\n\n.col-nbia-6 {\n  padding-right: 7px;\n  padding-left: 7px;\n  min-height: 1px;\n  position: relative;\n  width: 16.6666666667%;\n  float: left;\n}\n\n.col-nbia-7 {\n  padding-right: 7px;\n  padding-left: 7px;\n  min-height: 1px;\n  position: relative;\n  width: 14.2857142857%;\n  float: left;\n}\n\n.col-nbia-8 {\n  padding-right: 7px;\n  padding-left: 7px;\n  min-height: 1px;\n  position: relative;\n  width: 12.5%;\n  float: left;\n}\n\n.col-nbia-9 {\n  padding-right: 7px;\n  padding-left: 7px;\n  min-height: 1px;\n  position: relative;\n  width: 11.1111111111%;\n  float: left;\n}\n\n.col-nbia-10 {\n  padding-right: 7px;\n  padding-left: 7px;\n  min-height: 1px;\n  position: relative;\n  width: 10%;\n  float: left;\n}\n\n.col-nbia-11 {\n  padding-right: 7px;\n  padding-left: 7px;\n  min-height: 1px;\n  position: relative;\n  width: 9.0909090909%;\n  float: left;\n}\n\n.col-nbia-12 {\n  padding-right: 7px;\n  padding-left: 7px;\n  min-height: 1px;\n  position: relative;\n  width: 8.3333333333%;\n  float: left;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/app/nbia-thumbnail-viewer/nbia-thumbnail-viewer.component.scss\",\"webpack://./src/app/app.component.scss\"],\"names\":[],\"mappings\":\"AAEA;EACI,YAAA;AADJ;;AAIA,uDAAA;AACA;EACI,cCMgB;EDLhB,yBCIgB;EDHhB,yBAAA;EACA,kBAAA;EACA,wBAAA;EACA,gBAAA;EACA,eAAA;AADJ;;AAGA;EACI,WAAA;EACA,yBAAA;EACA,yBAAA;EACA,kBAAA;EACA,wBAAA;EACA,gBAAA;EACA,eAAA;AAAJ;;AAEA;EACI,gBAAA;AACJ;;AAEA;EACI,gBAAA;EACA,WAAA;AACJ;;AAEA;EACI,gBAAA;EACA,kBAAA;AACJ;;AAEA;EACI,YAAA;AACJ;;AAEA;EACI,cC9BgB;ED+BhB,yBChCgB;EDiChB,yBAAA;EACA,kBAAA;EACA,gBAAA;EACA,gBAAA;EACA,iBAAA;EACA,YAAA;AACJ;;AAEA;EACI,yBC9CyB;AD+C7B;;AAEA;EACI,yBClDyB;ADmD7B;;AAEA;EACI,yBCjDgB;ADkDpB;;AAEA;EACI,YAAA;AACJ;;AAEA;EACI,eAAA;AACJ;;AAEA;EACI,yBAAA;EACA,kBAAA;EACA,8CAAA;EACA,YAAA;AACJ;;AAGA;EACI,UAAA;EACA,mBAAA;AAAJ;;AAGA;EACI,eAAA;AAAJ;;AAGA;EACI,gBAAA;EACA,eAAA;EACA,QAAA;EACA,SAAA;AAAJ;;AAGA;EACI,UAAA;EACA,gBAAA;EACA,eAAA;EACA,yBAAA;EACA,kBAAA;EACA,MAAA;AAAJ;;AAGA;EACI,UAAA;EACA,aAAA;AAAJ;;AAGA;EACI,UAAA;EACA,iBAAA;EACA,WAAA;EACA,kBAAA;EACA,QAAA;EACA,SAAA;AAAJ;;AAGA;EACI,UAAA;EACA,UAAA;EACA,gBAAA;AAAJ;;AAGA;EACI,8BAAA;EACA,8BAAA;EACA,gCAAA;EACA,gBAAA;EACA,eAAA;EACA,eAAA;EACA,gBAAA;AAAJ;;AAGA;EACI,aAAA;AAAJ;;AAcA;EARI,kBAAA;EACA,iBAAA;EACA,eAAA;EACA,kBAAA;EACA,WAAA;EACA,WAAA;AAFJ;;AASA;EAZI,kBAAA;EACA,iBAAA;EACA,eAAA;EACA,kBAAA;EACA,UAAA;EACA,WAAA;AAOJ;;AAIA;EAhBI,kBAAA;EACA,iBAAA;EACA,eAAA;EACA,kBAAA;EACA,qBAAA;EACA,WAAA;AAgBJ;;AADA;EApBI,kBAAA;EACA,iBAAA;EACA,eAAA;EACA,kBAAA;EACA,UAAA;EACA,WAAA;AAyBJ;;AANA;EAxBI,kBAAA;EACA,iBAAA;EACA,eAAA;EACA,kBAAA;EACA,UAAA;EACA,WAAA;AAkCJ;;AAXA;EA5BI,kBAAA;EACA,iBAAA;EACA,eAAA;EACA,kBAAA;EACA,qBAAA;EACA,WAAA;AA2CJ;;AAhBA;EAhCI,kBAAA;EACA,iBAAA;EACA,eAAA;EACA,kBAAA;EACA,qBAAA;EACA,WAAA;AAoDJ;;AArBA;EApCI,kBAAA;EACA,iBAAA;EACA,eAAA;EACA,kBAAA;EACA,YAAA;EACA,WAAA;AA6DJ;;AA1BA;EAxCI,kBAAA;EACA,iBAAA;EACA,eAAA;EACA,kBAAA;EACA,qBAAA;EACA,WAAA;AAsEJ;;AA/BA;EA5CI,kBAAA;EACA,iBAAA;EACA,eAAA;EACA,kBAAA;EACA,UAAA;EACA,WAAA;AA+EJ;;AApCA;EAhDI,kBAAA;EACA,iBAAA;EACA,eAAA;EACA,kBAAA;EACA,oBAAA;EACA,WAAA;AAwFJ;;AAzCA;EApDI,kBAAA;EACA,iBAAA;EACA,eAAA;EACA,kBAAA;EACA,oBAAA;EACA,WAAA;AAiGJ\",\"sourcesContent\":[\"@import '../app.component.scss';\\n\\n.heading-cell {\\n    height: 48px;\\n}\\n\\n/* Series Description, Image count, and Zoom buttons. */\\n.heading-label {\\n    color: $button_foreground;\\n    background-color: $button_background;\\n    border: solid  $button_foreground 1px;\\n    border-radius: 5px;\\n    padding: 4px 8px 4px 8px;\\n    margin-top: 10px;\\n    font-size: 16pt;\\n}\\n.loading-label {\\n    color: #fff;\\n    background-color: #337ab7;\\n    border: solid  #337ab7 1px;\\n    border-radius: 5px;\\n    padding: 4px 8px 4px 8px;\\n    margin-top: 10px;\\n    font-size: 16pt;\\n}\\n.busy{\\n    cursor: progress;\\n}\\n\\n.image-grid-row {\\n    margin-left: 1px;\\n    width: 100%;\\n}\\n\\n.image-grid {\\n    padding-top: 2px;\\n    overflow-y: scroll;\\n}\\n\\n.grid-button-icon {\\n    height: 24px;\\n}\\n\\n.zoom-button {\\n    color: $button_foreground;\\n    background-color: $button_background;\\n    border: solid  $button_foreground 1px;\\n    border-radius: 5px;\\n    margin-top: -7px;\\n    margin-left: 2px;\\n    margin-right: 2px;\\n    height: 37px;\\n}\\n\\n.zoom-button:disabled {\\n    background-color: $disabled_button_background;\\n}\\n\\n.zoom-button[disabled]:hover {\\n    background-color: $disabled_button_background;\\n}\\n\\n.zoom-button:hover {\\n    background-color: $button_foreground;\\n}\\n\\n.plus-minus {\\n    float: right;\\n}\\n\\n.clicker {\\n    cursor: pointer;\\n}\\n\\n.parent-image-div {\\n    border: $image_border solid (0px + $border_thickness);\\n    border-radius: 4px;\\n    box-shadow: 0 0 2px 2px rgba(40, 96, 144, 0.3);\\n    padding: 0px + $image_frame_margin;\\n}\\n\\n// So the horizontal margins match the vertical ( which is set in @mixin category )\\n.topImage {\\n    padding: 0;\\n    margin-bottom: 2px * $outer_margin;\\n}\\n\\n.parentImageMouseOver {\\n    cursor: pointer;\\n}\\n\\n.image {\\n    max-height: 100%;\\n    max-width: 100%;\\n    top: 0px + $image_frame_margin;\\n    left: 0px + $image_frame_margin;\\n}\\n\\n.image-mouseover {\\n    z-index: 0;\\n    margin-left: 0px + $outer_margin  +  $border_thickness;\\n    margin-top: 0px +  $image_frame_margin  + $border_thickness;\\n    height: calc(100% - #{ (0px + ( (2 * $border_thickness) + (2 * $image_frame_margin )) ) });\\n    position: absolute;\\n    top: 0;\\n}\\n\\n.open-image-img {\\n    z-index: 2;\\n    opacity: 0.75;\\n}\\n\\n.image-number-span {\\n    z-index: 0;\\n    margin-left: 10px + $image_frame_margin;\\n    width: 100%;\\n    position: absolute;\\n    top: 0px + $image_number_top;\\n    left: 0px;\\n}\\n\\n.image-numberMouseOver {\\n    z-index: 3;\\n    opacity: 1;\\n    font-weight: 900;\\n}\\n\\n.image-number {\\n    -webkit-text-fill-color: white;\\n    -webkit-text-stroke-width: 1px;\\n    -webkit-text-stroke-color: black;\\n    margin-left: 0px + $image_number_left;\\n    cursor: default;\\n    font-size: 0pt + $image_number_font_size;\\n    font-weight: 900;\\n}\\n\\n.hide-element {\\n    display: none;\\n}\\n\\n// =================================================================\\n\\n@mixin category( $numberOfColumns ) {\\n    padding-right: 0px + $outer_margin;\\n    padding-left: 0px + $outer_margin;\\n    min-height: 1px;\\n    position: relative;\\n    width: 100% / $numberOfColumns;\\n    float: left;\\n}\\n\\n.col-nbia-1 {\\n    @include category(1);\\n}\\n\\n.col-nbia-2 {\\n    @include category(2);\\n}\\n\\n.col-nbia-3 {\\n    @include category(3);\\n}\\n\\n.col-nbia-4 {\\n    @include category(4);\\n}\\n\\n.col-nbia-5 {\\n    @include category(5);\\n}\\n\\n.col-nbia-6 {\\n    @include category(6);\\n}\\n\\n.col-nbia-7 {\\n    @include category(7);\\n}\\n\\n.col-nbia-8 {\\n    @include category(8);\\n}\\n\\n.col-nbia-9 {\\n    @include category(9);\\n}\\n\\n.col-nbia-10 {\\n    @include category(10);\\n}\\n\\n.col-nbia-11 {\\n    @include category(11);\\n}\\n\\n.col-nbia-12 {\\n    @include category(12);\\n}\\n\",\"\\n$image_frame_margin: 4;\\n$outer_margin: 7;\\n$border_thickness: 2;\\n\\n$image_number_left: 2;\\n$image_number_top: 2;\\n$image_number_font_size: 18;\\n\\n$disabled_button_background: #aaaaaa;\\n$hover_button_background: #286090;\\n\\n$page_number_background: #ddd;\\n$button_background: #ffffff;\\n$button_foreground: #6b6b6b;\\n$button_background_hover: #e6e6e6;\\n\\n$image_border: #286090;\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.pager-font {\n  font-size: 12pt;\n}\n\n.pager-button {\n  color: #6b6b6b;\n  background-color: #ffffff;\n  border: solid #8c8c8c 1px;\n}\n\n.pager-number {\n  color: #6b6b6b;\n  background-color: #ddd;\n  cursor: default;\n  border: solid #8c8c8c 1px;\n}\n\n.pager-button:hover {\n  background-color: #e6e6e6;\n}\n\n.pager-parent-div {\n  padding: 2px;\n  margin: 0;\n  margin-top: -2px;\n  border-radius: 5px;\n}\n\n.selected:hover, .selected {\n  background-color: #6b6b6b;\n  color: #ffffff;\n}\n\n.hide-button {\n  display: none;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/app/pager/pager.component.scss\",\"webpack://./src/app/app.component.scss\"],\"names\":[],\"mappings\":\"AAEA;EACI,eAAA;AADJ;;AAIA;EACI,cCOgB;EDNhB,yBCKgB;EDJhB,yBAAA;AADJ;;AAKA;EACI,cAAA;EACA,sBCHqB;EDIrB,eAAA;EACA,yBAAA;AAFJ;;AAMA;EAEI,yBCRsB;ADI1B;;AAOA;EACI,YAAA;EACA,SAAA;EACA,gBAAA;EACA,kBAAA;AAJJ;;AAOA;EACI,yBCpBgB;EDqBhB,cCtBgB;ADkBpB;;AAQA;EACI,aAAA;AALJ\",\"sourcesContent\":[\"@import '../app.component.scss';\\n\\n.pager-font {\\n    font-size: 12pt;\\n}\\n\\n.pager-button {\\n    color: $button_foreground;\\n    background-color: $button_background;\\n    border: solid #8c8c8c 1px;\\n\\n}\\n\\n.pager-number {\\n    color: $button_foreground;\\n    background-color: $page_number_background;\\n    cursor: default;\\n    border: solid #8c8c8c 1px;\\n\\n}\\n\\n.pager-button:hover {\\n    //   color: $button_background;\\n    background-color: $button_background_hover;\\n}\\n\\n.pager-parent-div {\\n    padding: 2px;\\n    margin: 0;\\n    margin-top: -2px;\\n    border-radius: 5px;\\n}\\n\\n.selected:hover, .selected {\\n    background-color: $button_foreground;\\n    color: $button_background;\\n\\n}\\n\\n.hide-button {\\n    display: none;\\n}\\n\\n\",\"\\n$image_frame_margin: 4;\\n$outer_margin: 7;\\n$border_thickness: 2;\\n\\n$image_number_left: 2;\\n$image_number_top: 2;\\n$image_number_font_size: 18;\\n\\n$disabled_button_background: #aaaaaa;\\n$hover_button_background: #286090;\\n\\n$page_number_background: #ddd;\\n$button_background: #ffffff;\\n$button_foreground: #6b6b6b;\\n$button_background_hover: #e6e6e6;\\n\\n$image_border: #286090;\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n"],"names":["Component","AppComponent","constructor","title","__decorate","selector","template","__NG_CLI_RESOURCE__0","BrowserModule","NgModule","CookieService","RouterModule","NbiaThumbnailViewerComponent","HttpClientModule","UtilService","ServerAccessService","FormsModule","PagerComponent","CommonService","ImagesPerPageComponent","FooterComponent","appRoutes","path","component","AppModule","declarations","imports","forRoot","providers","bootstrap","ngOnInit","_","Properties","commonService","utilService","haveData","haveAllDataEmitter","subscribe","data","initImagesPerPage","onChangeMinimumMatchedStudies","setImagesPerPage","imagesPerPage","getPersistedValue","isNullOrUndefined","IMAGES_PER_PAGE_CHOICE_DEFAULT","HostListener","ActivatedRoute","Title","Subject","ConfigurationService","cookieService","route","serverAccessService","titleService","configurationService","zoomOutImgSrc","zoomInImgSrc","images","currentPage","firstImage","columns","VIEWER_COLUMNS_DEFAULT","columnSize","marginOffset","columnLimit","haveError","errorMessage0","errorMessage1","errorMessage2","properties","currentViewImageIndex","description","temp","ngUnsubscribe","setTitle","TITLE","initConfiguration","setPersistedValue","userRequestedColumnCount","_this","snapshot","queryParams","innerWidth","window","innerHeight","toString","getMaxColumns","currentMaxColumns","isNullOrUndefinedOrEmpty","currentPageEmitter","updatePage","imagesPerPageEmitter","err","console","error","getImagesResultsEmitter","mouseOver","Array","length","reactToError","getThumbnailsEmitter","status","getImageDrillDownDataErrorEmitter","_ref","_asyncToGenerator","currentError","log","isGuest","token","getNewGuestServerAccessToken","tokenData","setNewToken","getImages","undefined","sleep","_x","apply","arguments","getDicomImageErrorEmitter","_ref2","onOpenImageClick","_x2","IMAGE_LOAD_MODE","LOAD_ALL","onResize","event","onRadioClick","i","winWidth","res","Math","ceil","onMinusClick","onZoomOutMouseOver","onPlusClick","onZoomInMouseOver","whatFailed","errorNum","errorText","getToken","setToken","g","isTrue","downLoadDicomImageFile","seriesInstanceUid","sopInstanceUid","studyInstanceUid","onMouseOver","onMouseOut","onZoomOutMouseOut","onZoomInMouseOut","ngOnDestroy","args","Input","util","totalCount","buttons","maxButtonsToShow","MAX_PAGER_BUTTONS","buttonShowOffset","direction","imageCountEmitter","pageCount","countPerPage","setButtons","LOAD_ONE_PAGE","f","onClick","pageNum","setCurrentPage","onGoFirstClickClick","onGoPreviousClick","onGoNextClick","onGoLastClick","next","complete","EventEmitter","Injectable","imageCount","haveAllData","get","COOKIE_NAME","cookieData","JSON","parse","setHaveAllData","haveIt","emit","getHaveAllData","getImagesPerPage","p","getCurrentPage","setImageCount","c","getImageCount","key","localStorage","getItem","e","message","value","set","stringify","providedIn","HttpClient","httpClient","readTextFile","CONFIG_FILE","parseConfig","CONFIG_COMPLETE","file","responseType","config","replace","split","line","match","includes","DEFAULT_USER","DEFAULT_PASSWORD","DEFAULT_SECRET","DEFAULT_CLIENT_ID","HttpHeaders","DomSanitizer","Router","timeout","sanitizer","router","API_SERVER_URL","getThumbnailErrorCount","tokenRefreshCycleRunning","loading","location","origin","seriesId","initToken","page","imageNumber","len","getImageDrillDownData","first","last","getThumbnails","thumbnailData","push","bypassSecurityTrustUrl","URL","createObjectURL","thumbnailError","WAIT_TIME","sort","row1","row2","seq","query","DEBUG_CURL","curl","imageDrillDownUrl","headers","options","post","seriesUid","objectId","post_url","dataTemp","method","seriesUID","objectUID","studyUID","getDicomImage","dicomFile","Blob","type","url","open","tokens","refreshToken","expiresIn","startRefreshTokenCycle","tempCounter","cycleTimeSeconds","TOKEN_REFRESH_TIME_MARGIN","setInterval","getAccessTokenWithRefresh","getRefreshToken","getExpiresIn","pipe","HTTP_TIMEOUT","accessTokenData","setRefreshToken","setExpiresIn","HAVE_URL_TOKEN","appendAQueryParam","tokenString","urlTree","createUrlTree","accessToken","queryParamsHandling","preserveFragment","navigateByUrl","t","expIn","val","isEmpty","obj","hasOwnProperty","toUpperCase","ms","Promise","resolve","setTimeout","VERSION","DEBUG","LOAD_ONE_IMAGE","environment","production","enableProdMode","platformBrowserDynamic","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}