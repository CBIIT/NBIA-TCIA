<properties>
	<property  name="ant.minimum.version" description="" skip-property="">
		<rules>
			<rule>
				<name>ant.minimum.version-syntax</name>
				<description>Checks ant.minimum.version is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>ant.minimum.version ==~ /.*\S+.*/</condition>
							<condition negate="true">ant.minimum.version ==~ /.*\s.*/</condition>
							<condition negate="true">ant.minimum.version ==~ /.*\x5c.*/</condition>
							<condition negate="true">ant.minimum.version ==~ /.*\/.*/</condition>
						</and>
						<condition>ant.minimum.version == null </condition>
						<condition>ant.minimum.version == "" </condition>
					</or>
				</conditions>
				<fail-message>ant.minimum.version did not pass validation. ant.minimum.version must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "1.7.0".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="application.base.path.linux" description="" skip-property="">
		<rules>
			<rule>
				<name>application.base.path.linux-syntax</name>
				<description>Checks application.base.path.linux is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>application.base.path.linux ==~ /.*\S+.*/</condition>
							<condition negate="true">application.base.path.linux ==~ /.*\s.*/</condition>
							<condition negate="true">application.base.path.linux ==~ /.*\x5c.*/</condition>
						</and>
						<condition>application.base.path.linux == null </condition>
						<condition>application.base.path.linux == "" </condition>
					</or>
				</conditions>
				<fail-message>application.base.path.linux did not pass validation. application.base.path.linux must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "/home/user/apps/appname".</fail-message>
			</rule>
			<rule>
				<name>application.base.path.value</name>
				<description></description>
				<conditions>
					<and>
						<condition>application.base.path.linux != "/"</condition>
						<condition>application.base.path.linux != "/usr"</condition>
						<condition>application.base.path.linux != "/opt"</condition>
					</and>
				</conditions>
				<fail-message>
					application.base.path.linux failed value check.
					* /
					* /usr
					* /opt
					* no spaces
					* no \
				</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="application.base.path.windows" description="" skip-property="">
		<rules>
			<rule>
				<name>application.base.path.windows-syntax</name>
				<description>Checks application.base.path.windows is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>application.base.path.windows ==~ /.*\S+.*/</condition>
							<condition negate="true">application.base.path.windows ==~ /.*\s.*/</condition>
							<condition negate="true">application.base.path.windows ==~ /.*\x5c.*/</condition>
						</and>
						<condition>application.base.path.windows == null </condition>
						<condition>application.base.path.windows == "" </condition>
					</or>
				</conditions>
				<fail-message>application.base.path.windows did not pass validation. application.base.path.windows must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "c:/apps/appname".</fail-message>
			</rule>
			<rule>
				<name>application.base.path.windows-value</name>
				<description></description>
				<conditions>
					<and>
						<condition negate="true">application.base.path.windows ==~ /^(?i)\w:\/$/ </condition>
						<condition negate="true">application.base.path.windows ==~ /^(?i)\w:\/win\w*$/ </condition>
					</and>
				</conditions>
				<fail-message>
					application.base.path.windows failed value check.
					Windows
					* x:/ (x is any char)
					* x:/win.* (case insensitive)
				</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.application.url" description="" skip-property="">
		<rules>
			<rule>
				<name>jboss.application.url-syntax</name>
				<description>Checks jboss.application.url is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.application.url ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.application.url ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.application.url ==~ /.*\x5c.*/</condition>
						</and>
						<condition>jboss.application.url == null </condition>
						<condition>jboss.application.url == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.application.url did not pass validation. jboss.application.url must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "http://localhost.nci.nih.gov:port".</fail-message>
			</rule>
			<rule>
				<name>jboss.application.url-url</name>
				<description>Checks jboss.application.url has proper value.</description>
				<conditions>
					<condition>jboss.application.url ==~ /^http.*:\/\/.*/</condition>
				</conditions>
				<fail-message>jboss.application.url did not pass validation. jboss.application.url must be http(s)://* Sample valid value - "http://gforge.nci.nih.gov/svnroot/automation/trunk/software/bda-download/bda-ivy-build.xml".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.application.url" description="" skip-property="">
		<rules>
			<rule>
				<name>tomcat.application.url-syntax</name>
				<description>Checks tomcat.application.url is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.application.url ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.application.url ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.application.url ==~ /.*\x5c.*/</condition>
						</and>
						<condition>tomcat.application.url == null </condition>
						<condition>tomcat.application.url == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.application.url did not pass validation. tomcat.application.url must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "http://localhost.nci.nih.gov:port".</fail-message>
			</rule>
			<rule>
				<name>tomcat.application.url-url</name>
				<description>Checks tomcat.application.url has proper value.</description>
				<conditions>
					<condition>tomcat.application.url ==~ /^http.*:\/\/.*/</condition>
				</conditions>
				<fail-message>tomcat.application.url did not pass validation. tomcat.application.url must be http(s)://* Sample valid value - "http://gforge.nci.nih.gov/svnroot/automation/trunk/software/bda-download/bda-ivy-build.xml".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="application.context.name" description="" skip-property="">
		<rules>
			<rule>
				<name>application.context.name-syntax</name>
				<description>Checks application.context.name is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>application.context.name ==~ /.*\S+.*/</condition>
							<condition negate="true">application.context.name ==~ /.*\s.*/</condition>
							<condition negate="true">application.context.name ==~ /.*\x5c.*/</condition>
							<condition negate="true">application.context.name ==~ /.*\/.*/</condition>
						</and>
						<condition>application.context.name == null </condition>
						<condition>application.context.name == "" </condition>
					</or>
				</conditions>
				<fail-message>application.context.name did not pass validation. application.context.name must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "bda".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="authentication.type" description="" skip-property="">
		<rules>
			<rule>
				<name>authentication.type-syntax</name>
				<description>Checks authentication.type is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>authentication.type ==~ /.*\S+.*/</condition>
							<condition negate="true">authentication.type ==~ /.*\s.*/</condition>
							<condition negate="true">authentication.type ==~ /.*\x5c.*/</condition>
							<condition negate="true">authentication.type ==~ /.*\/.*/</condition>
						</and>
						<condition>authentication.type == null </condition>
						<condition>authentication.type == "" </condition>
					</or>
				</conditions>
				<fail-message>authentication.type did not pass validation. authentication.type must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "db".</fail-message>
			</rule>
			<rule>
				<name>authentication.type-value</name>
				<description>Checks authentication.type has proper value.</description>
				<conditions>
					<or>
						<condition>authentication.type == "db"</condition>
						<condition>authentication.type == "ldap"</condition>
						<condition>authentication.type == ""</condition>
						<condition>authentication.type == null</condition>
					</or>
				</conditions>
				<fail-message>authentication.type did not pass validation. authentication.type must be empty, db or ldap. Sample valid value "db".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="bda-blueprints-webapp.install.name" description="" skip-property="">
		<rules>
			<rule>
				<name>bda-blueprints-webapp.install.name-syntax</name>
				<description>Checks bda-blueprints-webapp.install.name is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>bda-blueprints-webapp.install.name ==~ /.*\S+.*/</condition>
							<condition negate="true">bda-blueprints-webapp.install.name ==~ /.*\s.*/</condition>
							<condition negate="true">bda-blueprints-webapp.install.name ==~ /.*\x5c.*/</condition>
							<condition negate="true">bda-blueprints-webapp.install.name ==~ /.*\/.*/</condition>
						</and>
						<condition>bda-blueprints-webapp.install.name == null </condition>
						<condition>bda-blueprints-webapp.install.name == "" </condition>
					</or>
				</conditions>
				<fail-message>bda-blueprints-webapp.install.name did not pass validation. bda-blueprints-webapp.install.name must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "bda-blueprints_install".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="bda-blueprints-webapp.install.zip.file" description="" skip-property="">
		<rules>
			<rule>
				<name>bda-blueprints-webapp.install.zip.file-syntax</name>
				<description>Checks bda-blueprints-webapp.install.zip.file is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>bda-blueprints-webapp.install.zip.file ==~ /.*\S+.*/</condition>
							<condition negate="true">bda-blueprints-webapp.install.zip.file ==~ /.*\s.*/</condition>
							<condition negate="true">bda-blueprints-webapp.install.zip.file ==~ /.*\x5c.*/</condition>
						</and>
						<condition>bda-blueprints-webapp.install.zip.file == null </condition>
						<condition>bda-blueprints-webapp.install.zip.file == "" </condition>
					</or>
				</conditions>
				<fail-message>bda-blueprints-webapp.install.zip.file did not pass validation. bda-blueprints-webapp.install.zip.file must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "bda-blueprints_install-1.7.0.zip".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="bda-blueprints-webapp.upgrade.name" description="" skip-property="">
		<rules>
			<rule>
				<name>bda-blueprints-webapp.upgrade.name-syntax</name>
				<description>Checks bda-blueprints-webapp.upgrade.name is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>bda-blueprints-webapp.upgrade.name ==~ /.*\S+.*/</condition>
							<condition negate="true">bda-blueprints-webapp.upgrade.name ==~ /.*\s.*/</condition>
							<condition negate="true">bda-blueprints-webapp.upgrade.name ==~ /.*\x5c.*/</condition>
							<condition negate="true">bda-blueprints-webapp.upgrade.name ==~ /.*\/.*/</condition>
						</and>
						<condition>bda-blueprints-webapp.upgrade.name == null </condition>
						<condition>bda-blueprints-webapp.upgrade.name == "" </condition>
					</or>
				</conditions>
				<fail-message>bda-blueprints-webapp.upgrade.name did not pass validation. bda-blueprints-webapp.upgrade.name must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "bda-blueprints_upgrade".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="bda-blueprints-webapp.upgrade.zip.file" description="" skip-property="">
		<rules>
			<rule>
				<name>bda-blueprints-webapp.upgrade.zip.file-syntax</name>
				<description>Checks bda-blueprints-webapp.upgrade.zip.file is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>bda-blueprints-webapp.upgrade.zip.file ==~ /.*\S+.*/</condition>
							<condition negate="true">bda-blueprints-webapp.upgrade.zip.file ==~ /.*\s.*/</condition>
							<condition negate="true">bda-blueprints-webapp.upgrade.zip.file ==~ /.*\x5c.*/</condition>
						</and>
						<condition>bda-blueprints-webapp.upgrade.zip.file == null </condition>
						<condition>bda-blueprints-webapp.upgrade.zip.file == "" </condition>
					</or>
				</conditions>
				<fail-message>bda-blueprints-webapp.upgrade.zip.file did not pass validation. bda-blueprints-webapp.upgrade.zip.file must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "bda-blueprints_upgrade-1.7.0.zip".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="bda-blueprints-webapp.version" description="" skip-property="">
		<rules>
			<rule>
				<name>bda-blueprints-webapp.version-syntax</name>
				<description>Checks bda-blueprints-webapp.version is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>bda-blueprints-webapp.version ==~ /.*\S+.*/</condition>
							<condition negate="true">bda-blueprints-webapp.version ==~ /.*\s.*/</condition>
							<condition negate="true">bda-blueprints-webapp.version ==~ /.*\x5c.*/</condition>
							<condition negate="true">bda-blueprints-webapp.version ==~ /.*\/.*/</condition>
						</and>
						<condition>bda-blueprints-webapp.version == null </condition>
						<condition>bda-blueprints-webapp.version == "" </condition>
					</or>
				</conditions>
				<fail-message>bda-blueprints-webapp.version did not pass validation. bda-blueprints-webapp.version must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "1.7.0".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="bda.version" description="" skip-property="">
		<rules>
			<rule>
				<name>bda.version-syntax</name>
				<description>Checks bda.version is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>bda.version ==~ /.*\S+.*/</condition>
							<condition negate="true">bda.version ==~ /.*\s.*/</condition>
							<condition negate="true">bda.version ==~ /.*\x5c.*/</condition>
							<condition negate="true">bda.version ==~ /.*\/.*/</condition>
						</and>
						<condition>bda.version == null </condition>
						<condition>bda.version == "" </condition>
					</or>
				</conditions>
				<fail-message>bda.version did not pass validation. bda.version must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "1.7.0".</fail-message>
			</rule>
			<!-- commented out for now
			<rule>
				<name>bda.version-value</name>
				<description>Checks bda.version is the valid syntax.</description>
				<conditions>
					<or>
						<condition>bda.version ==~ /\d\.\d\.\d/ </condition>
					</or>
				</conditions>
				<fail-message>bda.version did not pass validation. bda.version must be three digits long separated by dots (&lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;). cannot be a beta version. Sample valid value - "1.7.0".</fail-message>
			</rule>
			-->
		</rules>
	</property>
	<property  name="build.bda.src.url" description="" skip-property="">
		<rules>
			<rule>
				<name>build.bda.src.url-syntax</name>
				<description>Checks build.bda.src.url is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>build.bda.src.url ==~ /.*\S+.*/</condition>
							<condition negate="true">build.bda.src.url ==~ /.*\s.*/</condition>
							<condition negate="true">build.bda.src.url ==~ /.*\x5c.*/</condition>
						</and>
						<condition>build.bda.src.url == null </condition>
						<condition>build.bda.src.url == "" </condition>
					</or>
				</conditions>
				<fail-message>build.bda.src.url did not pass validation. build.bda.src.url must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "http://gforge.nci.nih.gov/svnroot/automation/trunk/software/bda-download/bda-ivy-build.xml".</fail-message>
			</rule>
			<rule>
				<name>build.bda.src.url-url</name>
				<description>Checks build.bda.src.url has proper value.</description>
				<conditions>
					<condition>build.bda.src.url ==~ /^http.*:\/\/.*.nci.nih.gov.*/</condition>
				</conditions>
				<fail-message>build.bda.src.url did not pass validation. build.bda.src.url must be http(s)://*.nci.nih.gov/*. Sample valid value - "http://gforge.nci.nih.gov/svnroot/automation/trunk/software/bda-download/bda-ivy-build.xml".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="cacore-sdk.binaries.file" description="" skip-property="">
		<rules>
			<rule>
				<name>cacore-sdk.binaries.file-syntax</name>
				<description>Checks cacore-sdk.binaries.file is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>cacore-sdk.binaries.file ==~ /.*\S+.*/</condition>
							<condition negate="true">cacore-sdk.binaries.file ==~ /.*\s.*/</condition>
							<condition negate="true">cacore-sdk.binaries.file ==~ /.*\x5c.*/</condition>
						</and>
						<condition>cacore-sdk.binaries.file == null </condition>
						<condition>cacore-sdk.binaries.file == "" </condition>
					</or>
				</conditions>
				<fail-message>cacore-sdk.binaries.file did not pass validation. cacore-sdk.binaries.file must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "caCORE_SDK_411-src.zip".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="cacore-sdk.binaries.relative.dir" description="" skip-property="">
		<rules>
			<rule>
				<name>cacore-sdk.binaries.relative.dir-syntax</name>
				<description>Checks cacore-sdk.binaries.relative.dir is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>cacore-sdk.binaries.relative.dir ==~ /.*\S+.*/</condition>
							<condition negate="true">cacore-sdk.binaries.relative.dir ==~ /.*\s.*/</condition>
							<condition negate="true">cacore-sdk.binaries.relative.dir ==~ /.*\x5c.*/</condition>
						</and>
						<condition>cacore-sdk.binaries.relative.dir == null </condition>
						<condition>cacore-sdk.binaries.relative.dir == "" </condition>
					</or>
				</conditions>
				<fail-message>cacore-sdk.binaries.relative.dir did not pass validation. cacore-sdk.binaries.relative.dir must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "codegen".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="cacore-sdk.required" description="" skip-property="">
		<rules>
			<rule>
				<name>cacore-sdk.required-syntax</name>
				<description>Checks cacore-sdk.required is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>cacore-sdk.required ==~ /.*\S+.*/</condition>
							<condition negate="true">cacore-sdk.required ==~ /.*\s.*/</condition>
							<condition negate="true">cacore-sdk.required ==~ /.*\x5c.*/</condition>
							<condition negate="true">cacore-sdk.required ==~ /.*\/.*/</condition>
						</and>
						<condition>cacore-sdk.required == null </condition>
						<condition>cacore-sdk.required == "" </condition>
					</or>
				</conditions>
				<fail-message>cacore-sdk.required did not pass validation. cacore-sdk.required must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>cacore-sdk.required-tf</name>
				<description>Checks cacore-sdk.required has proper value.</description>
				<conditions>
					<or>
						<condition>cacore-sdk.required == "true"</condition>
						<condition>cacore-sdk.required == "false"</condition>
						<condition>cacore-sdk.required == ""</condition>
						<condition>cacore-sdk.required == null</condition>
					</or>
				</conditions>
				<fail-message>cacore-sdk.required did not pass validation. cacore-sdk.required must be empty, true or false. Sample valid value "true".</fail-message>
			</rule>

			<rule>
				<name>cacore-sdk.required-relationship</name>
				<description>Checks cacore-sdk.required has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>cacore-sdk.required == "true" </condition>
							<condition>cacore-sdk.binaries.file ==~ /.*\S+.*/</condition>
							<condition>cacore-sdk.binaries.relative.dir ==~ /.*\S+.*/</condition>
							<condition>cacore-sdk.src.url ==~ /.*\S+.*/</condition>
						</and>
						<condition>cacore-sdk.required != "true" </condition>
					</or>
				</conditions>
				<fail-message>cacore-sdk.required did not pass validation. If cacore-sdk.required is true then (cacore-sdk.binaries.file, cacore-sdk.binaries.relative.dir, cacore-sdk.src.url) must have values. </fail-message>
			</rule>

		</rules>
	</property>
	<property  name="cacore-sdk.src.url" description="" skip-property="">
		<rules>
			<rule>
				<name>cacore-sdk.src.url-syntax</name>
				<description>Checks cacore-sdk.src.url is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>cacore-sdk.src.url ==~ /.*\S+.*/</condition>
							<condition negate="true">cacore-sdk.src.url ==~ /.*\s.*/</condition>
							<condition negate="true">cacore-sdk.src.url ==~ /.*\x5c.*/</condition>
						</and>
						<condition>cacore-sdk.src.url == null </condition>
						<condition>cacore-sdk.src.url == "" </condition>
					</or>
				</conditions>
				<fail-message>cacore-sdk.src.url did not pass validation. cacore-sdk.src.url must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "http://gforge.nci.nih.gov/svnroot/commonlibrary/trunk/cacore-sdk/4.1.1/${cacore-sdk.binaries.file}".</fail-message>
			</rule>
			<rule>
				<name>cacore-sdk.src.url-url</name>
				<description>Checks cacore-sdk.src.url has proper value.</description>
				<conditions>
					<condition>cacore-sdk.src.url ==~ /^http.*:\/\/.*.nci.nih.gov.*/</condition>
				</conditions>
				<fail-message>cacore-sdk.src.url did not pass validation. cacore-sdk.src.url must be http(s)://*.nci.nih.gov/*. Sample valid value - "http://gforge.nci.nih.gov/svnroot/commonlibrary/trunk/cacore-sdk/4.1.1/${cacore-sdk.binaries.file}".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="cagrid-base-war.binaries.file" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>cagrid-base-war.binaries.file-syntax</name>
				<description>Checks cagrid-base-war.binaries.file is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>cagrid-base-war.binaries.file ==~ /.*\S+.*/</condition>
							<condition negate="true">cagrid-base-war.binaries.file ==~ /.*\s.*/</condition>
							<condition negate="true">cagrid-base-war.binaries.file ==~ /.*\x5c.*/</condition>
						</and>
						<condition>cagrid-base-war.binaries.file == null </condition>
						<condition>cagrid-base-war.binaries.file == "" </condition>
					</or>
				</conditions>
				<fail-message>cagrid-base-war.binaries.file did not pass validation. cagrid-base-war.binaries.file must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "cagrid-wscore-4.0.3-appserver-base-war.zip".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="cagrid-base-war.binaries.relative.dir" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>cagrid-base-war.binaries.relative.dir-syntax</name>
				<description>Checks cagrid-base-war.binaries.relative.dir is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>cagrid-base-war.binaries.relative.dir ==~ /.*\S+.*/</condition>
							<condition negate="true">cagrid-base-war.binaries.relative.dir ==~ /.*\s.*/</condition>
							<condition negate="true">cagrid-base-war.binaries.relative.dir ==~ /.*\x5c.*/</condition>
						</and>
						<condition>cagrid-base-war.binaries.relative.dir == null </condition>
						<condition>cagrid-base-war.binaries.relative.dir == "" </condition>
					</or>
				</conditions>
				<fail-message>cagrid-base-war.binaries.relative.dir did not pass validation. cagrid-base-war.binaries.relative.dir must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - ".".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="cagrid-base-war.src.url" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>cagrid-base-war.src.url-syntax</name>
				<description>Checks cagrid-base-war.src.url is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>cagrid-base-war.src.url ==~ /.*\S+.*/</condition>
							<condition negate="true">cagrid-base-war.src.url ==~ /.*\s.*/</condition>
							<condition negate="true">cagrid-base-war.src.url ==~ /.*\x5c.*/</condition>
						</and>
						<condition>cagrid-base-war.src.url == null </condition>
						<condition>cagrid-base-war.src.url == "" </condition>
					</or>
				</conditions>
				<fail-message>cagrid-base-war.src.url did not pass validation. cagrid-base-war.src.url must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "http://gforge.nci.nih.gov/svnroot/commonlibrary/trunk/techstack-2007/os-independent/cagrid-wscore-4.0.3-appserver-base-war.zip".</fail-message>
			</rule>
			<rule>
				<name>cagrid-base-war.src.url-url</name>
				<description>Checks cagrid-base-war.src.url has proper value.</description>
				<conditions>
					<condition>cagrid-base-war.src.url ==~ /^http.*:\/\/.*.nci.nih.gov.*/</condition>
				</conditions>
				<fail-message>cagrid-base-war.src.url did not pass validation. cagrid-base-war.src.url must be http(s)://*.nci.nih.gov/*. Sample valid value - "http://gforge.nci.nih.gov/svnroot/commonlibrary/trunk/techstack-2007/os-independent/cagrid-wscore-4.0.3-appserver-base-war.zip".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="cagrid-console.binaries.file" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>cagrid-console.binaries.file-syntax</name>
				<description>Checks cagrid-console.binaries.file is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>cagrid-console.binaries.file ==~ /.*\S+.*/</condition>
							<condition negate="true">cagrid-console.binaries.file ==~ /.*\s.*/</condition>
							<condition negate="true">cagrid-console.binaries.file ==~ /.*\x5c.*/</condition>
						</and>
						<condition>cagrid-console.binaries.file == null </condition>
						<condition>cagrid-console.binaries.file == "" </condition>
					</or>
				</conditions>
				<fail-message>cagrid-console.binaries.file did not pass validation. cagrid-console.binaries.file must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "caGrid-console_sources.zip".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="cagrid-console.binaries.relative.dir" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>cagrid-console.binaries.relative.dir-syntax</name>
				<description>Checks cagrid-console.binaries.relative.dir is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>cagrid-console.binaries.relative.dir ==~ /.*\S+.*/</condition>
							<condition negate="true">cagrid-console.binaries.relative.dir ==~ /.*\s.*/</condition>
							<condition negate="true">cagrid-console.binaries.relative.dir ==~ /.*\x5c.*/</condition>
						</and>
						<condition>cagrid-console.binaries.relative.dir == null </condition>
						<condition>cagrid-console.binaries.relative.dir == "" </condition>
					</or>
				</conditions>
				<fail-message>cagrid-console.binaries.relative.dir did not pass validation. cagrid-console.binaries.relative.dir must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "caGrid-console".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="cagrid-console.src.url" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>cagrid-console.src.url-syntax</name>
				<description>Checks cagrid-console.src.url is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>cagrid-console.src.url ==~ /.*\S+.*/</condition>
							<condition negate="true">cagrid-console.src.url ==~ /.*\s.*/</condition>
							<condition negate="true">cagrid-console.src.url ==~ /.*\x5c.*/</condition>
						</and>
						<condition>cagrid-console.src.url == null </condition>
						<condition>cagrid-console.src.url == "" </condition>
					</or>
				</conditions>
				<fail-message>cagrid-console.src.url did not pass validation. cagrid-console.src.url must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "http://gforge.nci.nih.gov/svnroot/commonlibrary/trunk/techstack-2009/os-independent/caGrid-console_sources.zip".</fail-message>
			</rule>
			<rule>
				<name>cagrid-console.src.url-url</name>
				<description>Checks cagrid-console.src.url has proper value.</description>
				<conditions>
					<condition>cagrid-console.src.url ==~ /^http.*:\/\/.*.nci.nih.gov.*/</condition>
				</conditions>
				<fail-message>cagrid-console.src.url did not pass validation. cagrid-console.src.url must be http(s)://*.nci.nih.gov/*. Sample valid value - "http://gforge.nci.nih.gov/svnroot/commonlibrary/trunk/techstack-2009/os-independent/caGrid-console_sources.zip".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="cagrid-libs.binaries.file" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>cagrid-libs.binaries.file-syntax</name>
				<description>Checks cagrid-libs.binaries.file is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>cagrid-libs.binaries.file ==~ /.*\S+.*/</condition>
							<condition negate="true">cagrid-libs.binaries.file ==~ /.*\s.*/</condition>
							<condition negate="true">cagrid-libs.binaries.file ==~ /.*\x5c.*/</condition>
						</and>
						<condition>cagrid-libs.binaries.file == null </condition>
						<condition>cagrid-libs.binaries.file == "" </condition>
					</or>
				</conditions>
				<fail-message>cagrid-libs.binaries.file did not pass validation. cagrid-libs.binaries.file must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "cagrid-wscore-4.0.3-appserver-libs.zip".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="cagrid-libs.binaries.relative.dir" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>cagrid-libs.binaries.relative.dir-syntax</name>
				<description>Checks cagrid-libs.binaries.relative.dir is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>cagrid-libs.binaries.relative.dir ==~ /.*\S+.*/</condition>
							<condition negate="true">cagrid-libs.binaries.relative.dir ==~ /.*\s.*/</condition>
							<condition negate="true">cagrid-libs.binaries.relative.dir ==~ /.*\x5c.*/</condition>
						</and>
						<condition>cagrid-libs.binaries.relative.dir == null </condition>
						<condition>cagrid-libs.binaries.relative.dir == "" </condition>
					</or>
				</conditions>
				<fail-message>cagrid-libs.binaries.relative.dir did not pass validation. cagrid-libs.binaries.relative.dir must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - ".".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="cagrid-libs.src.url" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>cagrid-libs.src.url-syntax</name>
				<description>Checks cagrid-libs.src.url is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>cagrid-libs.src.url ==~ /.*\S+.*/</condition>
							<condition negate="true">cagrid-libs.src.url ==~ /.*\s.*/</condition>
							<condition negate="true">cagrid-libs.src.url ==~ /.*\x5c.*/</condition>
						</and>
						<condition>cagrid-libs.src.url == null </condition>
						<condition>cagrid-libs.src.url == "" </condition>
					</or>
				</conditions>
				<fail-message>cagrid-libs.src.url did not pass validation. cagrid-libs.src.url must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "http://gforge.nci.nih.gov/svnroot/commonlibrary/trunk/techstack-2007/os-independent/cagrid-wscore-4.0.3-appserver-libs.zip".</fail-message>
			</rule>
			<rule>
				<name>cagrid-libs.src.url-url</name>
				<description>Checks cagrid-libs.src.url has proper value.</description>
				<conditions>
					<condition>cagrid-libs.src.url ==~ /^http.*:\/\/.*.nci.nih.gov.*/</condition>
				</conditions>
				<fail-message>cagrid-libs.src.url did not pass validation. cagrid-libs.src.url must be http(s)://*.nci.nih.gov/*. Sample valid value - "http://gforge.nci.nih.gov/svnroot/commonlibrary/trunk/techstack-2007/os-independent/cagrid-wscore-4.0.3-appserver-libs.zip".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="cagrid-target.src.url" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>cagrid-target.src.url-syntax</name>
				<description>Checks cagrid-target.src.url is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>cagrid-target.src.url ==~ /.*\S+.*/</condition>
							<condition negate="true">cagrid-target.src.url ==~ /.*\s.*/</condition>
							<condition negate="true">cagrid-target.src.url ==~ /.*\x5c.*/</condition>
						</and>
						<condition>cagrid-target.src.url == null </condition>
						<condition>cagrid-target.src.url == "" </condition>
					</or>
				</conditions>
				<fail-message>cagrid-target.src.url did not pass validation. cagrid-target.src.url must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "https://ncisvn.nci.nih.gov/svn/cagrid/branches/caGrid-1_3_release/cagrid-1-0/caGrid/repository/caGrid/target_grid".</fail-message>
			</rule>
			<rule>
				<name>cagrid-target.src.url-url</name>
				<description>Checks cagrid-target.src.url has proper value.</description>
				<conditions>
					<condition>cagrid-target.src.url ==~ /^http.*:\/\/.*.nci.nih.gov.*/</condition>
				</conditions>
				<fail-message>cagrid-target.src.url did not pass validation. cagrid-target.src.url must be http(s)://*.nci.nih.gov/*. Sample valid value - "https://ncisvn.nci.nih.gov/svn/cagrid/branches/caGrid-1_3_release/cagrid-1-0/caGrid/repository/caGrid/target_grid".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="cgmm.application.context" description="" skip-property="">
		<rules>
			<rule>
				<name>cgmm.application.context-syntax</name>
				<description>Checks cgmm.application.context is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>cgmm.application.context ==~ /.*\S+.*/</condition>
							<condition negate="true">cgmm.application.context ==~ /.*\s.*/</condition>
							<condition negate="true">cgmm.application.context ==~ /.*\x5c.*/</condition>
							<condition negate="true">cgmm.application.context ==~ /.*\/.*/</condition>
						</and>
						<condition>cgmm.application.context == null </condition>
						<condition>cgmm.application.context == "" </condition>
					</or>
				</conditions>
				<fail-message>cgmm.application.context did not pass validation. cgmm.application.context must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "bda".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="cgmm.application.name" description="" skip-property="">
		<rules>
			<rule>
				<name>cgmm.application.name-syntax</name>
				<description>Checks cgmm.application.name is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>cgmm.application.name ==~ /.*\S+.*/</condition>
							<condition negate="true">cgmm.application.name ==~ /.*\s.*/</condition>
							<condition negate="true">cgmm.application.name ==~ /.*\x5c.*/</condition>
							<condition negate="true">cgmm.application.name ==~ /.*\/.*/</condition>
						</and>
						<condition>cgmm.application.name == null </condition>
						<condition>cgmm.application.name == "" </condition>
					</or>
				</conditions>
				<fail-message>cgmm.application.name did not pass validation. cgmm.application.name must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "bda".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="database.context.path" description="" skip-property="exclude.validate.database">
		<rules>
			<rule>
				<name>database.context.path-syntax</name>
				<description>Checks database.context.path is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>database.context.path ==~ /.*\S+.*/</condition>
							<condition negate="true">database.context.path ==~ /.*\s.*/</condition>
							<condition negate="true">database.context.path ==~ /.*\x5c.*/</condition>
						</and>
						<condition>database.context.path == null </condition>
						<condition>database.context.path == "" </condition>
					</or>
				</conditions>
				<fail-message>database.context.path did not pass validation. database.context.path must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "bda-blueprints-webapp".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="database.driver" description="" skip-property="exclude.validate.database">
		<rules>
			<rule>
				<name>database.driver-syntax</name>
				<description>Checks database.driver is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>database.driver ==~ /.*\S+.*/</condition>
							<condition negate="true">database.driver ==~ /.*\s.*/</condition>
							<condition negate="true">database.driver ==~ /.*\x5c.*/</condition>
							<condition negate="true">database.driver ==~ /.*\/.*/</condition>
						</and>
						<condition>database.driver == null </condition>
						<condition>database.driver == "" </condition>
					</or>
				</conditions>
				<fail-message>database.driver did not pass validation. database.driver must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "com.mysql.jdbc.Driver".</fail-message>
			</rule>
			<rule>
				<name>database.driver-value-mysql</name>
				<description>Checks database.driver has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.type == "mysql" </condition>
							<condition>database.driver ==~ /.*(?i)mysql.*/ </condition>
						</and>
						<condition>database.type != "mysql" </condition>
					</or>
				</conditions>
				<fail-message>database.driver did not pass validation. With database type of mysql this variable must include "mysql".</fail-message>
			</rule>
			<rule>
				<name>database.driver-value-oracle</name>
				<description>Checks database.driver has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.type == "oracle" </condition>
							<condition>database.driver ==~ /.*(?i)oracle.*/ </condition>
						</and>
						<condition>database.type != "oracle" </condition>
					</or>
				</conditions>
				<fail-message>database.driver did not pass validation. With database type of oracle this variable must include "oracle".</fail-message>
			</rule>
			<rule>
				<name>database.driver-value-postgres</name>
				<description>Checks database.driver has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.type == "postgresql" </condition>
							<condition>database.driver ==~ /.*(?i)postgres.*/ </condition>
						</and>
						<condition>database.type != "postgresql" </condition>
					</or>
				</conditions>
				<fail-message>database.driver did not pass validation. With database type of postgres this variable must include "postgres".</fail-message>
			</rule>



		</rules>
	</property>
	<property  name="database.driver.file" description="" skip-property="exclude.validate.database">
		<rules>
			<rule>
				<name>database.driver.file-syntax</name>
				<description>Checks database.driver.file is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>database.driver.file ==~ /.*\S+.*/</condition>
							<condition negate="true">database.driver.file ==~ /.*\s.*/</condition>
							<condition negate="true">database.driver.file ==~ /.*\x5c.*/</condition>
						</and>
						<condition>database.driver.file == null </condition>
						<condition>database.driver.file == "" </condition>
					</or>
				</conditions>
				<fail-message>database.driver.file did not pass validation. database.driver.file must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "/path/mysql-connector-java-5.0.8.jar".</fail-message>
			</rule>
			<rule>
				<name>database.driver.file-value-mysql</name>
				<description>Checks database.driver.file has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.type == "mysql" </condition>
							<condition>database.driver.file ==~ /.*(?i)mysql.*/ </condition>
						</and>
						<condition>database.type != "mysql" </condition>
					</or>
				</conditions>
				<fail-message>database.driver.file did not pass validation. With database type of mysql this variable must include "mysql".</fail-message>
			</rule>
			<rule>
				<name>database.driver.file-value-oracle</name>
				<description>Checks database.driver.file has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.type == "oracle" </condition>
							<condition>database.driver.file ==~ /.*(?i)oracle.*/ </condition>
						</and>
						<condition>database.type != "oracle" </condition>
					</or>
				</conditions>
				<fail-message>database.driver.file did not pass validation. With database type of oracle this variable must include "oracle".</fail-message>
			</rule>
			<rule>
				<name>database.driver.file-value-postgres</name>
				<description>Checks database.driver.file has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.type == "postgresql" </condition>
							<condition>database.driver.file ==~ /.*(?i)postgres.*/ </condition>
						</and>
						<condition>database.type != "postgresql" </condition>
					</or>
				</conditions>
				<fail-message>database.driver.file did not pass validation. With database type of postgres this variable must include "postgres".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="database.drop-schema" description="" skip-property="exclude.validate.database">
		<rules>
			<rule>
				<name>database.drop-schema-syntax</name>
				<description>Checks database.drop-schema is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>database.drop-schema ==~ /.*\S+.*/</condition>
							<condition negate="true">database.drop-schema ==~ /.*\s.*/</condition>
							<condition negate="true">database.drop-schema ==~ /.*\x5c.*/</condition>
							<condition negate="true">database.drop-schema ==~ /.*\/.*/</condition>
						</and>
						<condition>database.drop-schema == null </condition>
						<condition>database.drop-schema == "" </condition>
					</or>
				</conditions>
				<fail-message>database.drop-schema did not pass validation. database.drop-schema must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>database.drop-schema-tf</name>
				<description>Checks database.drop-schema has proper value.</description>
				<conditions>
					<or>
						<condition>database.drop-schema == "true"</condition>
						<condition>database.drop-schema == "false"</condition>
						<condition>database.drop-schema == ""</condition>
						<condition>database.drop-schema == null</condition>
					</or>
				</conditions>
				<fail-message>database.drop-schema did not pass validation. database.drop-schema must be empty, true or false. Sample valid value "true".</fail-message>
			</rule>
			<rule>
				<name>database.drop-schema-relationship</name>
				<description>Checks database.drop-schema has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.drop-schema == "true" </condition>
							<condition>database.re-create != "true"</condition>
						</and>
						<condition>database.drop-schema != "true" </condition>
					</or>
				</conditions>
				<fail-message>database.drop-schema did not pass validation. If database.drop-schema then database.re-create cannot be true. </fail-message>
			</rule>
		</rules>
	</property>
	<property  name="database.re-create" description="" skip-property="exclude.validate.database">
		<rules>
			<rule>
				<name>database.re-create-syntax</name>
				<description>Checks database.re-create is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>database.re-create ==~ /.*\S+.*/</condition>
							<condition negate="true">database.re-create ==~ /.*\s.*/</condition>
							<condition negate="true">database.re-create ==~ /.*\x5c.*/</condition>
							<condition negate="true">database.re-create ==~ /.*\/.*/</condition>
						</and>
						<condition>database.re-create == null </condition>
						<condition>database.re-create == "" </condition>
					</or>
				</conditions>
				<fail-message>database.re-create did not pass validation. database.re-create must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>database.re-create-tf</name>
				<description>Checks database.re-create has proper value.</description>
				<conditions>
					<or>
						<condition>database.re-create == "true"</condition>
						<condition>database.re-create == "false"</condition>
						<condition>database.re-create == ""</condition>
						<condition>database.re-create == null</condition>
					</or>
				</conditions>
				<fail-message>database.re-create did not pass validation. database.re-create must be empty, true or false. Sample valid value "true".</fail-message>
			</rule>
			<rule>
				<name>database.re-create-relationship</name>
				<description>Checks database.re-create has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.re-create == "true" </condition>
							<condition negate="true">database.drop-schema == null</condition>
							<condition>database.drop-schema != "true"</condition>
						</and>
						<condition>database.re-create != "true" </condition>
					</or>
				</conditions>
				<fail-message>database.re-create did not pass validation. If database.re-create is true then database.drop-schema cannot be true. </fail-message>
			</rule>
		</rules>
	</property>
	<property  name="database.jndi.datasource.name" description="" skip-property="exclude.validate.database">
		<rules>
			<rule>
				<name>database.jndi.datasource.name-syntax</name>
				<description>Checks database.jndi.datasource.name is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>database.jndi.datasource.name ==~ /.*\S+.*/</condition>
							<condition negate="true">database.jndi.datasource.name ==~ /.*\s.*/</condition>
							<condition negate="true">database.jndi.datasource.name ==~ /.*\x5c.*/</condition>
						</and>
						<condition>database.jndi.datasource.name == null </condition>
						<condition>database.jndi.datasource.name == "" </condition>
					</or>
				</conditions>
				<fail-message>database.jndi.datasource.name did not pass validation. database.jndi.datasource.name must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "jdbc/bdaDS".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="database.name" description="" skip-property="exclude.validate.database">
		<rules>
			<rule>
				<name>database.name-syntax</name>
				<description>Checks database.name is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>database.name ==~ /.*\S+.*/</condition>
							<condition negate="true">database.name ==~ /.*\s.*/</condition>
							<condition negate="true">database.name ==~ /.*\x5c.*/</condition>
							<condition negate="true">database.name ==~ /.*\/.*/</condition>
						</and>
						<condition>database.name == null </condition>
						<condition>database.name == "" </condition>
					</or>
				</conditions>
				<fail-message>database.name did not pass validation. database.name must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "bda".</fail-message>
			</rule>
			<rule>
				<name>database.name-value-mysql</name>
				<description>Checks database.name is has valid value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.type == "mysql"</condition>
							<condition negate="true">database.name == "mysql"</condition>
							<condition negate="true">database.name == "information_schema"</condition>
							<condition negate="true">database.name == "test"</condition>
						</and>
						<condition>database.type != "mysql"</condition>
					</or>
				</conditions>
				<fail-message>database.name did not pass validation. When database.type=mysql, database.name cannot be mysql, information_schema or test.</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="database.password" description="" skip-property="exclude.validate.database">
		<rules>
			<rule>
				<name>database.password-syntax</name>
				<description>Checks database.password is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>database.password ==~ /.*\S+.*/</condition>
							<condition negate="true">database.password ==~ /.*\s.*/</condition>
							<condition negate="true">database.password ==~ /.*\x5c.*/</condition>
							<condition negate="true">database.password ==~ /.*\/.*/</condition>
						</and>
						<condition>database.password == null </condition>
						<condition>database.password == "" </condition>
					</or>
				</conditions>
				<fail-message>database.password did not pass validation. database.password must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "bdauser".</fail-message>
			</rule>
			<rule>
				<name>database.password-value</name>
				<description>Checks database.password is the valid syntax. </description>
				<conditions>
					<and>
						<condition negate="true">database.password ==~ /.*\$.*/</condition>
						<condition negate="true">database.password ==~ /.*&amp;.*/</condition>
						<condition negate="true">database.password ==~ /.*&lt;.*/</condition>
						<condition negate="true">database.password ==~ /.*&gt;.*/</condition>
						<condition negate="true">database.password ==~ /.*&quot;.*/</condition>
						<condition negate="true">database.password ==~ /.*&apos;.*/</condition>
					</and>
				</conditions>
				<fail-message>database.password did not pass validation. It cannot contain xml special characters, check this list for link http://www.hdfgroup.org/HDF5/XML/xml_escape_chars.htm.</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="database.port" description="" skip-property="exclude.validate.database">
		<rules>
			<rule>
				<name>database.port-syntax</name>
				<description>Checks database.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>database.port ==~ /.*\S+.*/</condition>
							<condition negate="true">database.port ==~ /.*\s.*/</condition>
							<condition negate="true">database.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">database.port ==~ /.*\/.*/</condition>
						</and>
						<condition>database.port == null </condition>
						<condition>database.port == "" </condition>
					</or>
				</conditions>
				<fail-message>database.port did not pass validation. database.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "3306".</fail-message>
			</rule>
			<rule>
				<name>database.port-port</name>
				<description>Checks database.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.port ==~ /\d+/</condition>
							<condition>database.port &gt;= 0</condition>
							<condition>database.port &lt;= 65535</condition>
						</and>
						<condition>database.port == null </condition>
						<condition>database.port == "" </condition>
					</or>
				</conditions>
				<fail-message>database.port did not pass validation. database.port must be empty or between 0 and 65535. Sample valid value - "3306".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="database.schema" description="" skip-property="exclude.validate.database">
		<rules>
			<rule>
				<name>database.schema-syntax</name>
				<description>Checks database.schema is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>database.schema ==~ /.*\S+.*/</condition>
							<condition negate="true">database.schema ==~ /.*\s.*/</condition>
							<condition negate="true">database.schema ==~ /.*\x5c.*/</condition>
							<condition negate="true">database.schema ==~ /.*\/.*/</condition>
						</and>
						<condition>database.schema == null </condition>
						<condition>database.schema == "" </condition>
					</or>
				</conditions>
				<fail-message>database.schema did not pass validation. database.schema must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "schemaname".</fail-message>
			</rule>
			<rule>
				<name>database.schema-value-mysql</name>
				<description>Checks database.schema has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.type == "mysql" </condition>
							<condition>database.schema == database.name </condition>
						</and>
						<condition>database.type != "mysql" </condition>
					</or>
				</conditions>
				<fail-message>database.schema did not pass validation. With database.type of mysql database.schema must be same as database.name".</fail-message>
			</rule>
			<rule>
				<name>database.schema-value-oracle</name>
				<description>Checks database.schema has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.type == "oracle" </condition>
							<condition>database.schema == database.user </condition>
						</and>
						<condition>database.type != "oracle" </condition>
					</or>
				</conditions>
				<fail-message>database.schema did not pass validation. With database.type of oracle database.schema must be same as database.user".</fail-message>
			</rule>
			<rule>
				<name>database.schema-value-postgres</name>
				<description>Checks database.schema has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.type == "postgresql" </condition>
							<condition>database.schema == "public" </condition>
						</and>
						<condition>database.type != "postgresql" </condition>
					</or>
				</conditions>
				<fail-message>database.schema did not pass validation. With database.type of postgres database.schema must be same as database.name".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="database.server" description="" skip-property="exclude.validate.database">
		<rules>
			<rule>
				<name>database.server-syntax</name>
				<description>Checks database.server is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>database.server ==~ /.*\S+.*/</condition>
							<condition negate="true">database.server ==~ /.*\s.*/</condition>
							<condition negate="true">database.server ==~ /.*\x5c.*/</condition>
							<condition negate="true">database.server ==~ /.*\/.*/</condition>
						</and>
						<condition>database.server == null </condition>
						<condition>database.server == "" </condition>
					</or>
				</conditions>
				<fail-message>database.server did not pass validation. database.server must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "localhost".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="database.system.password" description="" skip-property="exclude.validate.database">
		<rules>
			<rule>
				<name>database.system.password-syntax</name>
				<description>Checks database.system.password is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>database.system.password ==~ /.*\S+.*/</condition>
							<condition negate="true">database.system.password ==~ /.*\s.*/</condition>
							<condition negate="true">database.system.password ==~ /.*\x5c.*/</condition>
							<condition negate="true">database.system.password ==~ /.*\/.*/</condition>
						</and>
						<condition>database.system.password == null </condition>
						<condition>database.system.password == "" </condition>
					</or>
				</conditions>
				<fail-message>database.system.password did not pass validation. database.system.password must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "mysql".</fail-message>
			</rule>
			<rule>
				<name>database.system.password-value</name>
				<description>Checks database.system.password is the valid syntax. </description>
				<conditions>
					<and>
						<condition negate="true">database.system.password ==~ /.*\$.*/</condition>
						<condition negate="true">database.system.password ==~ /.*&amp;.*/</condition>
						<condition negate="true">database.system.password ==~ /.*&lt;.*/</condition>
						<condition negate="true">database.system.password ==~ /.*&gt;.*/</condition>
						<condition negate="true">database.system.password ==~ /.*&quot;.*/</condition>
						<condition negate="true">database.system.password ==~ /.*&apos;.*/</condition>
					</and>
				</conditions>
				<fail-message>database.system.password did not pass validation. It cannot contain xml special characters, check this list for link http://www.hdfgroup.org/HDF5/XML/xml_escape_chars.htm.</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="database.system.url" description="" skip-property="exclude.validate.database">
		<rules>
			<rule>
				<name>database.system.url-syntax</name>
				<description>Checks database.system.url is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>database.system.url ==~ /.*\S+.*/</condition>
							<condition negate="true">database.system.url ==~ /.*\s.*/</condition>
							<condition negate="true">database.system.url ==~ /.*\x5c.*/</condition>
						</and>
						<condition>database.system.url == null </condition>
						<condition>database.system.url == "" </condition>
					</or>
				</conditions>
				<fail-message>database.system.url did not pass validation. database.system.url must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "jdbc:mysql://localhost:3306/".</fail-message>
			</rule>
			<rule>
				<name>database.system.url-value-mysql</name>
				<description>Checks database.system.url has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.type == "mysql" </condition>
							<condition>database.system.url ==~ /jdbc:mysql.*/ </condition>
						</and>
						<condition>database.type != "mysql" </condition>
					</or>
				</conditions>
				<fail-message>database.system.url did not pass validation. With database.type of mysql database.system.url must begin with "jdbc:mysql".</fail-message>
			</rule>
			<rule>
				<name>database.system.url-value-oracle</name>
				<description>Checks database.system.url has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.type == "oracle" </condition>
							<condition>database.system.url ==~ /jdbc:oracle.*/ </condition>
						</and>
						<condition>database.type != "oracle" </condition>
					</or>
				</conditions>
				<fail-message>database.system.url did not pass validation. With database.type of oracle database.system.url must begin with "jdbc:oracle".</fail-message>
			</rule>
			<rule>
				<name>database.system.url-value-postgres</name>
				<description>Checks database.system.url has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.type == "postgresql" </condition>
							<condition>database.system.url ==~ /jdbc:postgres.*/ </condition>
						</and>
						<condition>database.type != "postgresql" </condition>
					</or>
				</conditions>
				<fail-message>database.system.url did not pass validation. With database.type of postgres database.system.url must begin with "jdbc:postgres".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="database.system.user" description="" skip-property="exclude.validate.database">
		<rules>
			<rule>
				<name>database.system.user-syntax</name>
				<description>Checks database.system.user is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>database.system.user ==~ /.*\S+.*/</condition>
							<condition negate="true">database.system.user ==~ /.*\s.*/</condition>
							<condition negate="true">database.system.user ==~ /.*\x5c.*/</condition>
							<condition negate="true">database.system.user ==~ /.*\/.*/</condition>
						</and>
						<condition>database.system.user == null </condition>
						<condition>database.system.user == "" </condition>
					</or>
				</conditions>
				<fail-message>database.system.user did not pass validation. database.system.user must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "mysql".</fail-message>
			</rule>
			<rule>
				<name>database.system.user-relationship</name>
				<description>Checks database.system.user has proper value.</description>
				<conditions>
					<or>
						<condition>database.system.user != database.user</condition>
						<condition>database.system.user == "" </condition>
						<condition>database.system.user == null </condition>
					</or>
				</conditions>
				<fail-message>database.system.user did not pass validation. If database.system.user must not be the same as database.user. </fail-message>
			</rule>

		</rules>
	</property>
	<property  name="database.type" description="" skip-property="exclude.validate.database">
		<rules>
			<rule>
				<name>database.type-syntax</name>
				<description>Checks database.type is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>database.type ==~ /.*\S+.*/</condition>
							<condition negate="true">database.type ==~ /.*\s.*/</condition>
							<condition negate="true">database.type ==~ /.*\x5c.*/</condition>
							<condition negate="true">database.type ==~ /.*\/.*/</condition>
						</and>
						<condition>database.type == null </condition>
						<condition>database.type == "" </condition>
					</or>
				</conditions>
				<fail-message>database.type did not pass validation. database.type must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "mysql".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="database.url" description="" skip-property="exclude.validate.database">
		<rules>
			<rule>
				<name>database.url-syntax</name>
				<description>Checks database.url is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>database.url ==~ /.*\S+.*/</condition>
							<condition negate="true">database.url ==~ /.*\s.*/</condition>
							<condition negate="true">database.url ==~ /.*\x5c.*/</condition>
						</and>
						<condition>database.url == null </condition>
						<condition>database.url == "" </condition>
					</or>
				</conditions>
				<fail-message>database.url did not pass validation. database.url must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "jdbc:mysql://localhost:3306/bda".</fail-message>
			</rule>
			<rule>
				<name>database.url-value-mysql</name>
				<description>Checks database.url has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.type == "mysql" </condition>
							<condition>database.url ==~ /jdbc:mysql.*/ </condition>
						</and>
						<condition>database.type != "mysql" </condition>
					</or>
				</conditions>
				<fail-message>database.url did not pass validation. With database.type of mysql database.url must begin with "jdbc:mysql".</fail-message>
			</rule>
			<rule>
				<name>database.url-value-oracle</name>
				<description>Checks database.url has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.type == "oracle" </condition>
							<condition>database.url ==~ /jdbc:oracle.*/ </condition>
						</and>
						<condition>database.type != "oracle" </condition>
					</or>
				</conditions>
				<fail-message>database.url did not pass validation. With database.type of oracle database.url must begin with "jdbc:oracle".</fail-message>
			</rule>
			<rule>
				<name>database.url-value-postgres</name>
				<description>Checks database.url has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.type == "postgresql" </condition>
							<condition>database.url ==~ /jdbc:postgres.*/ </condition>
						</and>
						<condition>database.type != "postgresql" </condition>
					</or>
				</conditions>
				<fail-message>database.url did not pass validation. With database.type of postgres database.url must begin with "jdbc:postgres".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="database.user" description="" skip-property="exclude.validate.database">
		<rules>
			<rule>
				<name>database.user-syntax</name>
				<description>Checks database.user is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>database.user ==~ /.*\S+.*/</condition>
							<condition negate="true">database.user ==~ /.*\s.*/</condition>
							<condition negate="true">database.user ==~ /.*\x5c.*/</condition>
							<condition negate="true">database.user ==~ /.*\/.*/</condition>
						</and>
						<condition>database.user == null </condition>
						<condition>database.user == "" </condition>
					</or>
				</conditions>
				<fail-message>database.user did not pass validation. database.user must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "bdauser".</fail-message>
			</rule>
			<rule>
				<name>database.user-value-mysql</name>
				<description>Checks database.user has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.type == "mysql" </condition>
							<condition>database.user != "root" </condition>
						</and>
						<condition>database.type != "mysql" </condition>
					</or>
				</conditions>
				<fail-message>database.user did not pass validation. With database.type of mysql database.user can't be root.</fail-message>
			</rule>
			<rule>
				<name>database.user-value-oracle</name>
				<description>Checks database.user has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.type == "oracle" </condition>
							<condition>database.user != "system" </condition>
							<condition>database.user != "sys" </condition>
						</and>
						<condition>database.type != "oracle" </condition>
					</or>
				</conditions>
				<fail-message>database.user did not pass validation. With database.type of oracle database.user can't be sys or system.</fail-message>
			</rule>
			<rule>
				<name>database.user-value-postgres</name>
				<description>Checks database.user has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>database.type == "postgresql" </condition>
							<condition>database.user != "postgres" </condition>
						</and>
						<condition>database.type != "postgresql" </condition>
					</or>
				</conditions>
				<fail-message>database.user did not pass validation. With database.type of postgres database.user can't be postgres.</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="db.install.create.mysql.file.list" description="" skip-property="">
		<rules>
			<rule>
				<name>db.install.create.mysql.file.list-syntax</name>
				<description>Checks db.install.create.mysql.file.list is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>db.install.create.mysql.file.list ==~ /.*\S+.*/</condition>
							<condition negate="true">db.install.create.mysql.file.list ==~ /.*\s.*/</condition>
							<condition negate="true">db.install.create.mysql.file.list ==~ /.*\x5c.*/</condition>
						</and>
						<condition>db.install.create.mysql.file.list == null </condition>
						<condition>db.install.create.mysql.file.list == "" </condition>
					</or>
				</conditions>
				<fail-message>db.install.create.mysql.file.list did not pass validation. db.install.create.mysql.file.list must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "create-tables.sql,insert-data.sql".</fail-message>
			</rule>
			<rule>
				<name>db.install.create.mysql.file.list-list</name>
				<description>Checks db.install.create.mysql.file.list has proper value.</description>
				<conditions>
					<and>
						<condition negate="true">db.install.create.mysql.file.list ==~ /^,.*/</condition>
						<condition negate="true">db.install.create.mysql.file.list ==~ /.*,$/</condition>
					</and>
				</conditions>
				<fail-message>db.install.create.mysql.file.list did not pass validation. Lists cannot begin or end with a ",".</fail-message>
			</rule>

		</rules>
	</property>
	<property  name="db.install.create.oracle.file.list" description="" skip-property="">
		<rules>
			<rule>
				<name>db.install.create.oracle.file.list-syntax</name>
				<description>Checks db.install.create.oracle.file.list is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>db.install.create.oracle.file.list ==~ /.*\S+.*/</condition>
							<condition negate="true">db.install.create.oracle.file.list ==~ /.*\s.*/</condition>
							<condition negate="true">db.install.create.oracle.file.list ==~ /.*\x5c.*/</condition>
						</and>
						<condition>db.install.create.oracle.file.list == null </condition>
						<condition>db.install.create.oracle.file.list == "" </condition>
					</or>
				</conditions>
				<fail-message>db.install.create.oracle.file.list did not pass validation. db.install.create.oracle.file.list must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "".</fail-message>
			</rule>
			<rule>
				<name>db.install.create.oracle.file.list-list</name>
				<description>Checks db.install.create.oracle.file.list has proper value.</description>
				<conditions>
					<and>
						<condition negate="true">db.install.create.oracle.file.list ==~ /^,.*/</condition>
						<condition negate="true">db.install.create.oracle.file.list ==~ /.*,$/</condition>
					</and>
				</conditions>
				<fail-message>db.install.create.oracle.file.list did not pass validation. Lists cannot begin or end with a ",".</fail-message>
			</rule>

		</rules>
	</property>
	<property  name="db.install.create.postgresql.file.list" description="" skip-property="">
		<rules>
			<rule>
				<name>db.install.create.postgresql.file.list-syntax</name>
				<description>Checks db.install.create.postgresql.file.list is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>db.install.create.postgresql.file.list ==~ /.*\S+.*/</condition>
							<condition negate="true">db.install.create.postgresql.file.list ==~ /.*\s.*/</condition>
							<condition negate="true">db.install.create.postgresql.file.list ==~ /.*\x5c.*/</condition>
						</and>
						<condition>db.install.create.postgresql.file.list == null </condition>
						<condition>db.install.create.postgresql.file.list == "" </condition>
					</or>
				</conditions>
				<fail-message>db.install.create.postgresql.file.list did not pass validation. db.install.create.postgresql.file.list must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "create-tables.sql,insert-data.sql".</fail-message>
			</rule>
			<rule>
				<name>db.install.create.postgresql.file.list-list</name>
				<description>Checks db.install.create.postgresql.file.list has proper value.</description>
				<conditions>
					<and>
						<condition negate="true">db.install.create.postgresql.file.list ==~ /^,.*/</condition>
						<condition negate="true">db.install.create.postgresql.file.list ==~ /.*,$/</condition>
					</and>
				</conditions>
				<fail-message>db.install.create.postgresql.file.list did not pass validation. Lists cannot begin or end with a ",".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="env.name" description="" skip-property="">
		<rules>
			<rule>
				<name>env.name-syntax</name>
				<description>Checks env.name is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>env.name ==~ /.*\S+.*/</condition>
							<condition negate="true">env.name ==~ /.*\s.*/</condition>
							<condition negate="true">env.name ==~ /.*\x5c.*/</condition>
							<condition negate="true">env.name ==~ /.*\/.*/</condition>
						</and>
						<condition>env.name == null </condition>
						<condition>env.name == "" </condition>
					</or>
				</conditions>
				<fail-message>env.name did not pass validation. env.name must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "local".</fail-message>
			</rule>
			<rule>
				<name>env.name-value</name>
				<description>Checks env.name has proper value.</description>
				<conditions>
					<or>
						<condition> env.name == "local"</condition>
						<condition> env.name == "dev"</condition>
						<condition> env.name == "qa"</condition>
						<condition> env.name == "stage"</condition>
						<condition> env.name == "prod"</condition>
						<condition> env.name == "train"</condition>
						<condition> env.name == "data-refresh"</condition>
						<condition> env.name == "data-validation"</condition>
						<condition> env.name == "external"</condition>
						<condition> env.name == "infrastructure"</condition>
					</or>
				</conditions>
				<fail-message>env.name did not pass validation. Must be one of the following ("local", "dev", "qa", "stage", "prod", "train", "data-refresh", "data-validation", "external", "infrastructure").</fail-message>
			</rule>

		</rules>
	</property>
	<property  name="exclude.access-logs" description="" skip-property="">
		<rules>
			<rule>
				<name>exclude.access-logs-syntax</name>
				<description>Checks exclude.access-logs is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>exclude.access-logs ==~ /.*\S+.*/</condition>
							<condition negate="true">exclude.access-logs ==~ /.*\s.*/</condition>
							<condition negate="true">exclude.access-logs ==~ /.*\x5c.*/</condition>
							<condition negate="true">exclude.access-logs ==~ /.*\/.*/</condition>
						</and>
						<condition>exclude.access-logs == null </condition>
						<condition>exclude.access-logs == "" </condition>
					</or>
				</conditions>
				<fail-message>exclude.access-logs did not pass validation. exclude.access-logs must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>exclude.access-logs-tf</name>
				<description>Checks exclude.access-logs has proper value.</description>
				<conditions>
					<or>
						<condition>exclude.access-logs == "true"</condition>
						<condition>exclude.access-logs == "false"</condition>
						<condition>exclude.access-logs == ""</condition>
						<condition>exclude.access-logs == null</condition>
					</or>
				</conditions>
				<fail-message>exclude.access-logs did not pass validation. exclude.access-logs must be true, false or empty. Sample valid value - "true".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="exclude.check.database" description="" skip-property="exclude.validate.database">
		<rules>
			<rule>
				<name>exclude.check.database-syntax</name>
				<description>Checks exclude.check.database is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>exclude.check.database ==~ /.*\S+.*/</condition>
							<condition negate="true">exclude.check.database ==~ /.*\s.*/</condition>
							<condition negate="true">exclude.check.database ==~ /.*\x5c.*/</condition>
							<condition negate="true">exclude.check.database ==~ /.*\/.*/</condition>
						</and>
						<condition>exclude.check.database == null </condition>
						<condition>exclude.check.database == "" </condition>
					</or>
				</conditions>
				<fail-message>exclude.check.database did not pass validation. exclude.check.database must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>exclude.check.database-tf</name>
				<description>Checks exclude.check.database has proper value.</description>
				<conditions>
					<or>
						<condition>exclude.check.database == "true"</condition>
						<condition>exclude.check.database == "false"</condition>
						<condition>exclude.check.database == ""</condition>
						<condition>exclude.check.database == null</condition>
					</or>
				</conditions>
				<fail-message>exclude.check.database did not pass validation. exclude.check.database must be true, false or empty. Sample valid value - "true".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="exclude.database" description="" skip-property="exclude.validate.database">
		<rules>
			<rule>
				<name>exclude.database-syntax</name>
				<description>Checks exclude.database is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>exclude.database ==~ /.*\S+.*/</condition>
							<condition negate="true">exclude.database ==~ /.*\s.*/</condition>
							<condition negate="true">exclude.database ==~ /.*\x5c.*/</condition>
							<condition negate="true">exclude.database ==~ /.*\/.*/</condition>
						</and>
						<condition>exclude.database == null </condition>
						<condition>exclude.database == "" </condition>
					</or>
				</conditions>
				<fail-message>exclude.database did not pass validation. exclude.database must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>exclude.database-tf</name>
				<description>Checks exclude.database has proper value.</description>
				<conditions>
					<or>
						<condition>exclude.database == "true"</condition>
						<condition>exclude.database == "false"</condition>
						<condition>exclude.database == ""</condition>
						<condition>exclude.database == null</condition>
					</or>
				</conditions>
				<fail-message>exclude.database did not pass validation. exclude.database must be true, false or empty. Sample valid value - "true".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="exclude.jboss" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>exclude.jboss-syntax</name>
				<description>Checks exclude.jboss is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>exclude.jboss ==~ /.*\S+.*/</condition>
							<condition negate="true">exclude.jboss ==~ /.*\s.*/</condition>
							<condition negate="true">exclude.jboss ==~ /.*\x5c.*/</condition>
							<condition negate="true">exclude.jboss ==~ /.*\/.*/</condition>
						</and>
						<condition>exclude.jboss == null </condition>
						<condition>exclude.jboss == "" </condition>
					</or>
				</conditions>
				<fail-message>exclude.jboss did not pass validation. exclude.jboss must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>exclude.jboss-tf</name>
				<description>Checks exclude.jboss has proper value.</description>
				<conditions>
					<or>
						<condition>exclude.jboss == "true"</condition>
						<condition>exclude.jboss == "false"</condition>
						<condition>exclude.jboss == ""</condition>
						<condition>exclude.jboss == null</condition>
					</or>
				</conditions>
				<fail-message>exclude.jboss did not pass validation. exclude.jboss must be true, false or empty. Sample valid value - "true".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="exclude.jboss.backup" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>exclude.jboss.backup-syntax</name>
				<description>Checks exclude.jboss.backup is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>exclude.jboss.backup ==~ /.*\S+.*/</condition>
							<condition negate="true">exclude.jboss.backup ==~ /.*\s.*/</condition>
							<condition negate="true">exclude.jboss.backup ==~ /.*\x5c.*/</condition>
							<condition negate="true">exclude.jboss.backup ==~ /.*\/.*/</condition>
						</and>
						<condition>exclude.jboss.backup == null </condition>
						<condition>exclude.jboss.backup == "" </condition>
					</or>
				</conditions>
				<fail-message>exclude.jboss.backup did not pass validation. exclude.jboss.backup must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>exclude.jboss.backup-tf</name>
				<description>Checks exclude.jboss.backup has proper value.</description>
				<conditions>
					<or>
						<condition>exclude.jboss.backup == "true"</condition>
						<condition>exclude.jboss.backup == "false"</condition>
						<condition>exclude.jboss.backup == ""</condition>
						<condition>exclude.jboss.backup == null</condition>
					</or>
				</conditions>
				<fail-message>exclude.jboss.backup did not pass validation. exclude.jboss.backup must be true, false or empty. Sample valid value - "true".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="exclude.jboss-bindings" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>exclude.jboss-bindings-syntax</name>
				<description>Checks exclude.jboss-bindings is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>exclude.jboss-bindings ==~ /.*\S+.*/</condition>
							<condition negate="true">exclude.jboss-bindings ==~ /.*\s.*/</condition>
							<condition negate="true">exclude.jboss-bindings ==~ /.*\x5c.*/</condition>
							<condition negate="true">exclude.jboss-bindings ==~ /.*\/.*/</condition>
						</and>
						<condition>exclude.jboss-bindings == null </condition>
						<condition>exclude.jboss-bindings == "" </condition>
					</or>
				</conditions>
				<fail-message>exclude.jboss-bindings did not pass validation. exclude.jboss-bindings must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>exclude.jboss-bindings-tf</name>
				<description>Checks exclude.jboss-bindings has proper value.</description>
				<conditions>
					<or>
						<condition>exclude.jboss-bindings == "true"</condition>
						<condition>exclude.jboss-bindings == "false"</condition>
						<condition>exclude.jboss-bindings == ""</condition>
						<condition>exclude.jboss-bindings == null</condition>
					</or>
				</conditions>
				<fail-message>exclude.jboss-bindings did not pass validation. exclude.jboss-bindings must be true, false or empty. Sample valid value - "true".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="exclude.jboss-config" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>exclude.jboss-config-syntax</name>
				<description>Checks exclude.jboss-config is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>exclude.jboss-config ==~ /.*\S+.*/</condition>
							<condition negate="true">exclude.jboss-config ==~ /.*\s.*/</condition>
							<condition negate="true">exclude.jboss-config ==~ /.*\x5c.*/</condition>
							<condition negate="true">exclude.jboss-config ==~ /.*\/.*/</condition>
						</and>
						<condition>exclude.jboss-config == null </condition>
						<condition>exclude.jboss-config == "" </condition>
					</or>
				</conditions>
				<fail-message>exclude.jboss-config did not pass validation. exclude.jboss-config must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>exclude.jboss-config-tf</name>
				<description>Checks exclude.jboss-config has proper value.</description>
				<conditions>
					<or>
						<condition>exclude.jboss-config == "true"</condition>
						<condition>exclude.jboss-config == "false"</condition>
						<condition>exclude.jboss-config == ""</condition>
						<condition>exclude.jboss-config == null</condition>
					</or>
				</conditions>
				<fail-message>exclude.jboss-config did not pass validation. exclude.jboss-config must be true, false or empty. Sample valid value - "true".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="exclude.jboss.grid" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>exclude.jboss.grid-syntax</name>
				<description>Checks exclude.jboss.grid is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>exclude.jboss.grid ==~ /.*\S+.*/</condition>
							<condition negate="true">exclude.jboss.grid ==~ /.*\s.*/</condition>
							<condition negate="true">exclude.jboss.grid ==~ /.*\x5c.*/</condition>
							<condition negate="true">exclude.jboss.grid ==~ /.*\/.*/</condition>
						</and>
						<condition>exclude.jboss.grid == null </condition>
						<condition>exclude.jboss.grid == "" </condition>
					</or>
				</conditions>
				<fail-message>exclude.jboss.grid did not pass validation. exclude.jboss.grid must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>exclude.jboss.grid-tf</name>
				<description>Checks exclude.jboss.grid has proper value.</description>
				<conditions>
					<or>
						<condition>exclude.jboss.grid == "true"</condition>
						<condition>exclude.jboss.grid == "false"</condition>
						<condition>exclude.jboss.grid == ""</condition>
						<condition>exclude.jboss.grid == null</condition>
					</or>
				</conditions>
				<fail-message>exclude.jboss.grid did not pass validation. exclude.jboss.grid must be true, false or empty. Sample valid value - "true".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="exclude.jboss-login-config" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>exclude.jboss-login-config-syntax</name>
				<description>Checks exclude.jboss-login-config is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>exclude.jboss-login-config ==~ /.*\S+.*/</condition>
							<condition negate="true">exclude.jboss-login-config ==~ /.*\s.*/</condition>
							<condition negate="true">exclude.jboss-login-config ==~ /.*\x5c.*/</condition>
							<condition negate="true">exclude.jboss-login-config ==~ /.*\/.*/</condition>
						</and>
						<condition>exclude.jboss-login-config == null </condition>
						<condition>exclude.jboss-login-config == "" </condition>
					</or>
				</conditions>
				<fail-message>exclude.jboss-login-config did not pass validation. exclude.jboss-login-config must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>exclude.jboss-login-config-tf</name>
				<description>Checks exclude.jboss-login-config has proper value.</description>
				<conditions>
					<or>
						<condition>exclude.jboss-login-config == "true"</condition>
						<condition>exclude.jboss-login-config == "false"</condition>
						<condition>exclude.jboss-login-config == ""</condition>
						<condition>exclude.jboss-login-config == null</condition>
					</or>
				</conditions>
				<fail-message>exclude.jboss-login-config did not pass validation. exclude.jboss-login-config must be true, false or empty. Sample valid value - "true".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="exclude.start.servers" description="" skip-property="">
		<rules>
			<rule>
				<name>exclude.start.servers-syntax</name>
				<description>Checks exclude.start.servers is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>exclude.start.servers ==~ /.*\S+.*/</condition>
							<condition negate="true">exclude.start.servers ==~ /.*\s.*/</condition>
							<condition negate="true">exclude.start.servers ==~ /.*\x5c.*/</condition>
							<condition negate="true">exclude.start.servers ==~ /.*\/.*/</condition>
						</and>
						<condition>exclude.start.servers == null </condition>
						<condition>exclude.start.servers == "" </condition>
					</or>
				</conditions>
				<fail-message>exclude.start.servers did not pass validation. exclude.start.servers must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>exclude.start.servers-tf</name>
				<description>Checks exclude.start.servers has proper value.</description>
				<conditions>
					<or>
						<condition>exclude.start.servers == "true"</condition>
						<condition>exclude.start.servers == "false"</condition>
						<condition>exclude.start.servers == ""</condition>
						<condition>exclude.start.servers == null</condition>
					</or>
				</conditions>
				<fail-message>exclude.start.servers did not pass validation. exclude.start.servers must be true, false or empty. Sample valid value - "true".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="exclude.tomcat" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>exclude.tomcat-syntax</name>
				<description>Checks exclude.tomcat is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>exclude.tomcat ==~ /.*\S+.*/</condition>
							<condition negate="true">exclude.tomcat ==~ /.*\s.*/</condition>
							<condition negate="true">exclude.tomcat ==~ /.*\x5c.*/</condition>
							<condition negate="true">exclude.tomcat ==~ /.*\/.*/</condition>
						</and>
						<condition>exclude.tomcat == null </condition>
						<condition>exclude.tomcat == "" </condition>
					</or>
				</conditions>
				<fail-message>exclude.tomcat did not pass validation. exclude.tomcat must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>exclude.tomcat-tf</name>
				<description>Checks exclude.tomcat has proper value.</description>
				<conditions>
					<or>
						<condition>exclude.tomcat == "true"</condition>
						<condition>exclude.tomcat == "false"</condition>
						<condition>exclude.tomcat == ""</condition>
						<condition>exclude.tomcat == null</condition>
					</or>
				</conditions>
				<fail-message>exclude.tomcat did not pass validation. exclude.tomcat must be true, false or empty. Sample valid value - "true".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="exclude.tomcat.backup" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>exclude.tomcat.backup-syntax</name>
				<description>Checks exclude.tomcat.backup is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>exclude.tomcat.backup ==~ /.*\S+.*/</condition>
							<condition negate="true">exclude.tomcat.backup ==~ /.*\s.*/</condition>
							<condition negate="true">exclude.tomcat.backup ==~ /.*\x5c.*/</condition>
							<condition negate="true">exclude.tomcat.backup ==~ /.*\/.*/</condition>
						</and>
						<condition>exclude.tomcat.backup == null </condition>
						<condition>exclude.tomcat.backup == "" </condition>
					</or>
				</conditions>
				<fail-message>exclude.tomcat.backup did not pass validation. exclude.tomcat.backup must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>exclude.tomcat.backup-tf</name>
				<description>Checks exclude.tomcat.backup has proper value.</description>
				<conditions>
					<or>
						<condition>exclude.tomcat.backup == "true"</condition>
						<condition>exclude.tomcat.backup == "false"</condition>
						<condition>exclude.tomcat.backup == ""</condition>
						<condition>exclude.tomcat.backup == null</condition>
					</or>
				</conditions>
				<fail-message>exclude.tomcat.backup did not pass validation. exclude.tomcat.backup must be true, false or empty. Sample valid value - "true".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="exclude.tomcat-config" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>exclude.tomcat-config-syntax</name>
				<description>Checks exclude.tomcat-config is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>exclude.tomcat-config ==~ /.*\S+.*/</condition>
							<condition negate="true">exclude.tomcat-config ==~ /.*\s.*/</condition>
							<condition negate="true">exclude.tomcat-config ==~ /.*\x5c.*/</condition>
							<condition negate="true">exclude.tomcat-config ==~ /.*\/.*/</condition>
						</and>
						<condition>exclude.tomcat-config == null </condition>
						<condition>exclude.tomcat-config == "" </condition>
					</or>
				</conditions>
				<fail-message>exclude.tomcat-config did not pass validation. exclude.tomcat-config must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>exclude.tomcat-config-tf</name>
				<description>Checks exclude.tomcat-config has proper value.</description>
				<conditions>
					<or>
						<condition>exclude.tomcat-config == "true"</condition>
						<condition>exclude.tomcat-config == "false"</condition>
						<condition>exclude.tomcat-config == ""</condition>
						<condition>exclude.tomcat-config == null</condition>
					</or>
				</conditions>
				<fail-message>exclude.tomcat-config did not pass validation. exclude.tomcat-config must be true, false or empty. Sample valid value - "true".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="exclude.tomcat.grid" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>exclude.tomcat.grid-syntax</name>
				<description>Checks exclude.tomcat.grid is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>exclude.tomcat.grid ==~ /.*\S+.*/</condition>
							<condition negate="true">exclude.tomcat.grid ==~ /.*\s.*/</condition>
							<condition negate="true">exclude.tomcat.grid ==~ /.*\x5c.*/</condition>
							<condition negate="true">exclude.tomcat.grid ==~ /.*\/.*/</condition>
						</and>
						<condition>exclude.tomcat.grid == null </condition>
						<condition>exclude.tomcat.grid == "" </condition>
					</or>
				</conditions>
				<fail-message>exclude.tomcat.grid did not pass validation. exclude.tomcat.grid must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>exclude.tomcat.grid-tf</name>
				<description>Checks exclude.tomcat.grid has proper value.</description>
				<conditions>
					<or>
						<condition>exclude.tomcat.grid == "true"</condition>
						<condition>exclude.tomcat.grid == "false"</condition>
						<condition>exclude.tomcat.grid == ""</condition>
						<condition>exclude.tomcat.grid == null</condition>
					</or>
				</conditions>
				<fail-message>exclude.tomcat.grid did not pass validation. exclude.tomcat.grid must be true, false or empty. Sample valid value - "true".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="findbugs.binaries.file" description="" skip-property="">
		<rules>
			<rule>
				<name>findbugs.binaries.file-syntax</name>
				<description>Checks findbugs.binaries.file is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>findbugs.binaries.file ==~ /.*\S+.*/</condition>
							<condition negate="true">findbugs.binaries.file ==~ /.*\s.*/</condition>
							<condition negate="true">findbugs.binaries.file ==~ /.*\x5c.*/</condition>
						</and>
						<condition>findbugs.binaries.file == null </condition>
						<condition>findbugs.binaries.file == "" </condition>
					</or>
				</conditions>
				<fail-message>findbugs.binaries.file did not pass validation. findbugs.binaries.file must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "findbugs-1.3.4.zip".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="findbugs.binaries.relative.dir" description="" skip-property="">
		<rules>
			<rule>
				<name>findbugs.binaries.relative.dir-syntax</name>
				<description>Checks findbugs.binaries.relative.dir is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>findbugs.binaries.relative.dir ==~ /.*\S+.*/</condition>
							<condition negate="true">findbugs.binaries.relative.dir ==~ /.*\s.*/</condition>
							<condition negate="true">findbugs.binaries.relative.dir ==~ /.*\x5c.*/</condition>
						</and>
						<condition>findbugs.binaries.relative.dir == null </condition>
						<condition>findbugs.binaries.relative.dir == "" </condition>
					</or>
				</conditions>
				<fail-message>findbugs.binaries.relative.dir did not pass validation. findbugs.binaries.relative.dir must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "findbugs-1.3.4".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="findbugs.src.url" description="" skip-property="">
		<rules>
			<rule>
				<name>findbugs.src.url-syntax</name>
				<description>Checks findbugs.src.url is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>findbugs.src.url ==~ /.*\S+.*/</condition>
							<condition negate="true">findbugs.src.url ==~ /.*\s.*/</condition>
							<condition negate="true">findbugs.src.url ==~ /.*\x5c.*/</condition>
						</and>
						<condition>findbugs.src.url == null </condition>
						<condition>findbugs.src.url == "" </condition>
					</or>
				</conditions>
				<fail-message>findbugs.src.url did not pass validation. findbugs.src.url must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "http://gforge.nci.nih.gov/svnroot/commonlibrary/trunk/other/os-independent/findbugs-1.3.4.zip".</fail-message>
			</rule>
			<rule>
				<name>findbugs.src.url-url</name>
				<description>Checks findbugs.src.url has proper value.</description>
				<conditions>
					<condition>findbugs.src.url ==~ /^http.*:\/\/.*.nci.nih.gov.*/</condition>
				</conditions>
				<fail-message>findbugs.src.url did not pass validation. findbugs.src.url must be http(s)://*.nci.nih.gov/*. Sample valid value - "http://gforge.nci.nih.gov/svnroot/commonlibrary/trunk/other/os-independent/findbugs-1.3.4.zip".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="fs-data.base.dir" description="" skip-property="">
		<rules>
			<rule>
				<name>fs-data.base.dir-syntax</name>
				<description>Checks fs-data.base.dir is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>fs-data.base.dir ==~ /.*\S+.*/</condition>
							<condition negate="true">fs-data.base.dir ==~ /.*\s.*/</condition>
							<condition negate="true">fs-data.base.dir ==~ /.*\x5c.*/</condition>
						</and>
						<condition>fs-data.base.dir == null </condition>
						<condition>fs-data.base.dir == "" </condition>
					</or>
				</conditions>
				<fail-message>fs-data.base.dir did not pass validation. fs-data.base.dir must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "/local/content/files".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.poc.science.affiliation" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.poc.science.affiliation-syntax</name>
				<description>Checks grid.poc.science.affiliation is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.poc.science.affiliation ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.poc.science.affiliation ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.poc.science.affiliation ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.poc.science.affiliation == null </condition>
						<condition>grid.poc.science.affiliation == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.poc.science.affiliation did not pass validation. grid.poc.science.affiliation must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "Test".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.poc.science.email" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.poc.science.email-syntax</name>
				<description>Checks grid.poc.science.email is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.poc.science.email ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.poc.science.email ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.poc.science.email ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.poc.science.email == null </condition>
						<condition>grid.poc.science.email == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.poc.science.email did not pass validation. grid.poc.science.email must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "john.smith@mail.com".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.poc.science.name.first" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.poc.science.name.first-syntax</name>
				<description>Checks grid.poc.science.name.first is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.poc.science.name.first ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.poc.science.name.first ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.poc.science.name.first ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.poc.science.name.first == null </condition>
						<condition>grid.poc.science.name.first == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.poc.science.name.first did not pass validation. grid.poc.science.name.first must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "John".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.poc.science.name.last" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.poc.science.name.last-syntax</name>
				<description>Checks grid.poc.science.name.last is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.poc.science.name.last ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.poc.science.name.last ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.poc.science.name.last ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.poc.science.name.last == null </condition>
						<condition>grid.poc.science.name.last == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.poc.science.name.last did not pass validation. grid.poc.science.name.last must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "Smith".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.poc.science.phone" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.poc.science.phone-syntax</name>
				<description>Checks grid.poc.science.phone is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.poc.science.phone ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.poc.science.phone ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.poc.science.phone ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.poc.science.phone == null </condition>
						<condition>grid.poc.science.phone == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.poc.science.phone did not pass validation. grid.poc.science.phone must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "0124567890".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.poc.science.role" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.poc.science.role-syntax</name>
				<description>Checks grid.poc.science.role is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.poc.science.role ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.poc.science.role ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.poc.science.role ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.poc.science.role == null </condition>
						<condition>grid.poc.science.role == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.poc.science.role did not pass validation. grid.poc.science.role must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "sysadmin".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.poc.tech.addr.country" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.poc.tech.addr.country-syntax</name>
				<description>Checks grid.poc.tech.addr.country is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.poc.tech.addr.country ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.poc.tech.addr.country ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.poc.tech.addr.country ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.poc.tech.addr.country == null </condition>
						<condition>grid.poc.tech.addr.country == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.poc.tech.addr.country did not pass validation. grid.poc.tech.addr.country must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "USA".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.poc.tech.addr.locality" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.poc.tech.addr.locality-syntax</name>
				<description>Checks grid.poc.tech.addr.locality is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.poc.tech.addr.locality ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.poc.tech.addr.locality ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.poc.tech.addr.locality ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.poc.tech.addr.locality == null </condition>
						<condition>grid.poc.tech.addr.locality == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.poc.tech.addr.locality did not pass validation. grid.poc.tech.addr.locality must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "Vienna".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.poc.tech.addr.postalCode" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.poc.tech.addr.postalCode-syntax</name>
				<description>Checks grid.poc.tech.addr.postalCode is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.poc.tech.addr.postalCode ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.poc.tech.addr.postalCode ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.poc.tech.addr.postalCode ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.poc.tech.addr.postalCode == null </condition>
						<condition>grid.poc.tech.addr.postalCode == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.poc.tech.addr.postalCode did not pass validation. grid.poc.tech.addr.postalCode must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "22180".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.poc.tech.addr.stateProvince" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.poc.tech.addr.stateProvince-syntax</name>
				<description>Checks grid.poc.tech.addr.stateProvince is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.poc.tech.addr.stateProvince ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.poc.tech.addr.stateProvince ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.poc.tech.addr.stateProvince ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.poc.tech.addr.stateProvince == null </condition>
						<condition>grid.poc.tech.addr.stateProvince == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.poc.tech.addr.stateProvince did not pass validation. grid.poc.tech.addr.stateProvince must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "VA".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.poc.tech.addr.street1" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.poc.tech.addr.street1-syntax</name>
				<description>Checks grid.poc.tech.addr.street1 is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.poc.tech.addr.street1 ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.poc.tech.addr.street1 ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.poc.tech.addr.street1 ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.poc.tech.addr.street1 == null </condition>
						<condition>grid.poc.tech.addr.street1 == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.poc.tech.addr.street1 did not pass validation. grid.poc.tech.addr.street1 must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "1234 Somplace lane".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.poc.tech.addr.street2" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.poc.tech.addr.street2-syntax</name>
				<description>Checks grid.poc.tech.addr.street2 is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.poc.tech.addr.street2 ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.poc.tech.addr.street2 ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.poc.tech.addr.street2 ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.poc.tech.addr.street2 == null </condition>
						<condition>grid.poc.tech.addr.street2 == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.poc.tech.addr.street2 did not pass validation. grid.poc.tech.addr.street2 must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.poc.tech.affiliation" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.poc.tech.affiliation-syntax</name>
				<description>Checks grid.poc.tech.affiliation is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.poc.tech.affiliation ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.poc.tech.affiliation ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.poc.tech.affiliation ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.poc.tech.affiliation == null </condition>
						<condition>grid.poc.tech.affiliation == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.poc.tech.affiliation did not pass validation. grid.poc.tech.affiliation must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "BDA".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.poc.tech.email" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.poc.tech.email-syntax</name>
				<description>Checks grid.poc.tech.email is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.poc.tech.email ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.poc.tech.email ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.poc.tech.email ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.poc.tech.email == null </condition>
						<condition>grid.poc.tech.email == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.poc.tech.email did not pass validation. grid.poc.tech.email must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "buildanddeployment@mail.nih.gov".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.poc.tech.name.first" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.poc.tech.name.first-syntax</name>
				<description>Checks grid.poc.tech.name.first is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.poc.tech.name.first ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.poc.tech.name.first ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.poc.tech.name.first ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.poc.tech.name.first == null </condition>
						<condition>grid.poc.tech.name.first == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.poc.tech.name.first did not pass validation. grid.poc.tech.name.first must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "DeploymentAutomation".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.poc.tech.name.last" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.poc.tech.name.last-syntax</name>
				<description>Checks grid.poc.tech.name.last is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.poc.tech.name.last ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.poc.tech.name.last ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.poc.tech.name.last ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.poc.tech.name.last == null </condition>
						<condition>grid.poc.tech.name.last == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.poc.tech.name.last did not pass validation. grid.poc.tech.name.last must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "Buildand".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.poc.tech.phone" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.poc.tech.phone-syntax</name>
				<description>Checks grid.poc.tech.phone is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.poc.tech.phone ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.poc.tech.phone ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.poc.tech.phone ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.poc.tech.phone == null </condition>
						<condition>grid.poc.tech.phone == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.poc.tech.phone did not pass validation. grid.poc.tech.phone must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "0124567890".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.poc.tech.researchCenter.displayname" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.poc.tech.researchCenter.displayname-syntax</name>
				<description>Checks grid.poc.tech.researchCenter.displayname is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.poc.tech.researchCenter.displayname ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.poc.tech.researchCenter.displayname ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.poc.tech.researchCenter.displayname ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.poc.tech.researchCenter.displayname == null </condition>
						<condition>grid.poc.tech.researchCenter.displayname == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.poc.tech.researchCenter.displayname did not pass validation. grid.poc.tech.researchCenter.displayname must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "bdarc".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.poc.tech.researchCenter.shortname" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.poc.tech.researchCenter.shortname-syntax</name>
				<description>Checks grid.poc.tech.researchCenter.shortname is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.poc.tech.researchCenter.shortname ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.poc.tech.researchCenter.shortname ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.poc.tech.researchCenter.shortname ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.poc.tech.researchCenter.shortname == null </condition>
						<condition>grid.poc.tech.researchCenter.shortname == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.poc.tech.researchCenter.shortname did not pass validation. grid.poc.tech.researchCenter.shortname must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "bda".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.poc.tech.role" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.poc.tech.role-syntax</name>
				<description>Checks grid.poc.tech.role is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.poc.tech.role ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.poc.tech.role ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.poc.tech.role ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.poc.tech.role == null </condition>
						<condition>grid.poc.tech.role == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.poc.tech.role did not pass validation. grid.poc.tech.role must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "sysadmin".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="grid.target" description="" skip-property="exclude.validate.grid">
		<rules>
			<rule>
				<name>grid.target-syntax</name>
				<description>Checks grid.target is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>grid.target ==~ /.*\S+.*/</condition>
							<condition negate="true">grid.target ==~ /.*\s.*/</condition>
							<condition negate="true">grid.target ==~ /.*\x5c.*/</condition>
							<condition negate="true">grid.target ==~ /.*\/.*/</condition>
						</and>
						<condition>grid.target == null </condition>
						<condition>grid.target == "" </condition>
					</or>
				</conditions>
				<fail-message>grid.target did not pass validation. grid.target must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "nci_stage-1.3".</fail-message>
			</rule>
			<rule>
				<name>grid.target-value</name>
				<description>Checks grid.target has proper value.</description>
				<conditions>
					<or>
						<condition> grid.target == "nci_prod-1.3"</condition>
						<condition> grid.target == "nci_stage-1.3"</condition>
						<condition> grid.target == "nci_qa-1.3"</condition>
						<condition> grid.target == "training-1.3"</condition>
					</or>
				</conditions>
				<fail-message>grid.target did not pass validation. Must be one of the following (nci_prod-1.3, nci_stage-1.3, nci_qa-1.3, training-1.3).</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="ivy.bda.settings.src.url" description="" skip-property="">
		<rules>
			<rule>
				<name>ivy.bda.settings.src.url-syntax</name>
				<description>Checks ivy.bda.settings.src.url is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>ivy.bda.settings.src.url ==~ /.*\S+.*/</condition>
							<condition negate="true">ivy.bda.settings.src.url ==~ /.*\s.*/</condition>
							<condition negate="true">ivy.bda.settings.src.url ==~ /.*\x5c.*/</condition>
						</and>
						<condition>ivy.bda.settings.src.url == null </condition>
						<condition>ivy.bda.settings.src.url == "" </condition>
					</or>
				</conditions>
				<fail-message>ivy.bda.settings.src.url did not pass validation. ivy.bda.settings.src.url must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "http://gforge.nci.nih.gov/svnroot/automation/trunk/software/bda-download/ivy-bda-settings.xml".</fail-message>
			</rule>
			<rule>
				<name>ivy.bda.settings.src.url-url</name>
				<description>Checks ivy.bda.settings.src.url has proper value.</description>
				<conditions>
					<condition>ivy.bda.settings.src.url ==~ /^http.*:\/\/.*.nci.nih.gov.*/</condition>
				</conditions>
				<fail-message>ivy.bda.settings.src.url did not pass validation. ivy.bda.settings.src.url must be http(s)://*.nci.nih.gov/*. Sample valid value - "http://gforge.nci.nih.gov/svnroot/automation/trunk/software/bda-download/ivy-bda-settings.xml".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="ivy.bda.src.url" description="" skip-property="">
		<rules>
			<rule>
				<name>ivy.bda.src.url-syntax</name>
				<description>Checks ivy.bda.src.url is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>ivy.bda.src.url ==~ /.*\S+.*/</condition>
							<condition negate="true">ivy.bda.src.url ==~ /.*\s.*/</condition>
							<condition negate="true">ivy.bda.src.url ==~ /.*\x5c.*/</condition>
						</and>
						<condition>ivy.bda.src.url == null </condition>
						<condition>ivy.bda.src.url == "" </condition>
					</or>
				</conditions>
				<fail-message>ivy.bda.src.url did not pass validation. ivy.bda.src.url must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "http://gforge.nci.nih.gov/svnroot/automation/trunk/software/bda-download/ivy-bda.xml".</fail-message>
			</rule>
			<rule>
				<name>ivy.bda.src.url-url</name>
				<description>Checks ivy.bda.src.url has proper value.</description>
				<conditions>
					<condition>ivy.bda.src.url ==~ /^http.*:\/\/.*.nci.nih.gov.*/</condition>
				</conditions>
				<fail-message>ivy.bda.src.url did not pass validation. ivy.bda.src.url must be http(s)://*.nci.nih.gov/*. Sample valid value - "http://gforge.nci.nih.gov/svnroot/automation/trunk/software/bda-download/ivy-bda.xml".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jar-signing.execution.time" description="" skip-property="">
		<rules>
			<rule>
				<name>jar-signing.execution.time-syntax</name>
				<description>Checks jar-signing.execution.time is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jar-signing.execution.time ==~ /.*\S+.*/</condition>
							<condition negate="true">jar-signing.execution.time ==~ /.*\s.*/</condition>
							<condition negate="true">jar-signing.execution.time ==~ /.*\x5c.*/</condition>
							<condition negate="true">jar-signing.execution.time ==~ /.*\/.*/</condition>
						</and>
						<condition>jar-signing.execution.time == null </condition>
						<condition>jar-signing.execution.time == "" </condition>
					</or>
				</conditions>
				<fail-message>jar-signing.execution.time did not pass validation. jar-signing.execution.time must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "false".</fail-message>
			</rule>
			<rule>
				<name>jar-signing.execution.time-value</name>
				<description>Checks jar-signing.execution.time has proper value.</description>
				<conditions>
					<or>
						<condition> jar-signing.execution.time == "install"</condition>
						<condition> jar-signing.execution.time == "build"</condition>
						<condition> jar-signing.execution.time == "false"</condition>
						<condition> jar-signing.execution.time == ""</condition>
						<condition> jar-signing.execution.time == null</condition>
					</or>
				</conditions>
				<fail-message>jar-signing.execution.time did not pass validation. Must be empty or install or build.</fail-message>
			</rule>

		</rules>
	</property>
	<property  name="jar-signing.generate-selfsigned" description="" skip-property="">
		<rules>
			<rule>
				<name>jar-signing.generate-selfsigned-syntax</name>
				<description>Checks jar-signing.generate-selfsigned is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jar-signing.generate-selfsigned ==~ /.*\S+.*/</condition>
							<condition negate="true">jar-signing.generate-selfsigned ==~ /.*\s.*/</condition>
							<condition negate="true">jar-signing.generate-selfsigned ==~ /.*\x5c.*/</condition>
							<condition negate="true">jar-signing.generate-selfsigned ==~ /.*\/.*/</condition>
						</and>
						<condition>jar-signing.generate-selfsigned == null </condition>
						<condition>jar-signing.generate-selfsigned == "" </condition>
					</or>
				</conditions>
				<fail-message>jar-signing.generate-selfsigned did not pass validation. jar-signing.generate-selfsigned must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "false".</fail-message>
			</rule>
			<rule>
				<name>jar-signing.generate-selfsigned-value</name>
				<description>Checks jar-signing.generate-selfsigned has proper value.</description>
				<conditions>
					<or>
						<condition> jar-signing.generate-selfsigned == "true"</condition>
						<condition> jar-signing.generate-selfsigned == "false"</condition>
						<condition> jar-signing.generate-selfsigned == ""</condition>
						<condition> jar-signing.generate-selfsigned == null</condition>
					</or>
				</conditions>
				<fail-message>jar-signing.generate-selfsigned did not pass validation. Must be empty or install or build.</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jar-signing.jar.list" description="" skip-property="">
		<rules>
			<rule>
				<name>jar-signing.jar.list-syntax</name>
				<description>Checks jar-signing.jar.list is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jar-signing.jar.list ==~ /.*\S+.*/</condition>
							<condition negate="true">jar-signing.jar.list ==~ /.*\s.*/</condition>
							<condition negate="true">jar-signing.jar.list ==~ /.*\x5c.*/</condition>
							<condition negate="true">jar-signing.jar.list ==~ /.*\/.*/</condition>
						</and>
						<condition>jar-signing.jar.list == null </condition>
						<condition>jar-signing.jar.list == "" </condition>
					</or>
				</conditions>
				<fail-message>jar-signing.jar.list did not pass validation. jar-signing.jar.list must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "test-signing.jar".</fail-message>
			</rule>
			<rule>
				<name>jar-signing.jar.list-list</name>
				<description>Checks jar-signing.jar.list has proper value.</description>
				<conditions>
					<and>
						<condition negate="true">jar-signing.jar.list ==~ /^,.*/</condition>
						<condition negate="true">jar-signing.jar.list ==~ /.*,$/</condition>
					</and>
				</conditions>
				<fail-message>jar-signing.jar.list did not pass validation. Lists cannot begin or end with a ",".</fail-message>
			</rule>

		</rules>
	</property>
	<property  name="jar-signing.keystore.alias" description="" skip-property="">
		<rules>
			<rule>
				<name>jar-signing.keystore.alias-syntax</name>
				<description>Checks jar-signing.keystore.alias is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jar-signing.keystore.alias ==~ /.*\S+.*/</condition>
							<condition negate="true">jar-signing.keystore.alias ==~ /.*\s.*/</condition>
							<condition negate="true">jar-signing.keystore.alias ==~ /.*\x5c.*/</condition>
							<condition negate="true">jar-signing.keystore.alias ==~ /.*\/.*/</condition>
						</and>
						<condition>jar-signing.keystore.alias == null </condition>
						<condition>jar-signing.keystore.alias == "" </condition>
					</or>
				</conditions>
				<fail-message>jar-signing.keystore.alias did not pass validation. jar-signing.keystore.alias must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "nci-dev-signing".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jar-signing.keystore.cert.cn" description="" skip-property="">
		<rules>
			<rule>
				<name>jar-signing.keystore.cert.cn-syntax</name>
				<description>Checks jar-signing.keystore.cert.cn is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jar-signing.keystore.cert.cn ==~ /.*\S+.*/</condition>
							<condition negate="true">jar-signing.keystore.cert.cn ==~ /.*\x5c.*/</condition>
							<condition negate="true">jar-signing.keystore.cert.cn ==~ /.*\/.*/</condition>
						</and>
						<condition>jar-signing.keystore.cert.cn == null </condition>
						<condition>jar-signing.keystore.cert.cn == "" </condition>
					</or>
				</conditions>
				<fail-message>jar-signing.keystore.cert.cn did not pass validation. jar-signing.keystore.cert.cn must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "BDA".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jar-signing.keystore.cert.c" description="" skip-property="">
		<rules>
			<rule>
				<name>jar-signing.keystore.cert.c-syntax</name>
				<description>Checks jar-signing.keystore.cert.c is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jar-signing.keystore.cert.c ==~ /.*\S+.*/</condition>
							<condition negate="true">jar-signing.keystore.cert.c ==~ /.*\x5c.*/</condition>
							<condition negate="true">jar-signing.keystore.cert.c ==~ /.*\/.*/</condition>
						</and>
						<condition>jar-signing.keystore.cert.c == null </condition>
						<condition>jar-signing.keystore.cert.c == "" </condition>
					</or>
				</conditions>
				<fail-message>jar-signing.keystore.cert.c did not pass validation. jar-signing.keystore.cert.c must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "US".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jar-signing.keystore.cert.o" description="" skip-property="">
		<rules>
			<rule>
				<name>jar-signing.keystore.cert.o-syntax</name>
				<description>Checks jar-signing.keystore.cert.o is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jar-signing.keystore.cert.o ==~ /.*\S+.*/</condition>
							<condition negate="true">jar-signing.keystore.cert.o ==~ /.*\x5c.*/</condition>
							<condition negate="true">jar-signing.keystore.cert.o ==~ /.*\/.*/</condition>
						</and>
						<condition>jar-signing.keystore.cert.o == null </condition>
						<condition>jar-signing.keystore.cert.o == "" </condition>
					</or>
				</conditions>
				<fail-message>jar-signing.keystore.cert.o did not pass validation. jar-signing.keystore.cert.o must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "National Cancer Institute".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jar-signing.keystore.cert.ou" description="" skip-property="">
		<rules>
			<rule>
				<name>jar-signing.keystore.cert.ou-syntax</name>
				<description>Checks jar-signing.keystore.cert.ou is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jar-signing.keystore.cert.ou ==~ /.*\S+.*/</condition>
							<condition negate="true">jar-signing.keystore.cert.ou ==~ /.*\x5c.*/</condition>
							<condition negate="true">jar-signing.keystore.cert.ou ==~ /.*\/.*/</condition>
						</and>
						<condition>jar-signing.keystore.cert.ou == null </condition>
						<condition>jar-signing.keystore.cert.ou == "" </condition>
					</or>
				</conditions>
				<fail-message>jar-signing.keystore.cert.ou did not pass validation. jar-signing.keystore.cert.ou must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "NCICB".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jar-signing.keystore.location" description="" skip-property="">
		<rules>
			<rule>
				<name>jar-signing.keystore.location-syntax</name>
				<description>Checks jar-signing.keystore.location is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jar-signing.keystore.location ==~ /.*\S+.*/</condition>
							<condition negate="true">jar-signing.keystore.location ==~ /.*\s.*/</condition>
							<condition negate="true">jar-signing.keystore.location ==~ /.*\x5c.*/</condition>
						</and>
						<condition>jar-signing.keystore.location == null </condition>
						<condition>jar-signing.keystore.location == "" </condition>
					</or>
				</conditions>
				<fail-message>jar-signing.keystore.location did not pass validation. jar-signing.keystore.location must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "nci-dev-signing.keystore".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jar-signing.keystore.password" description="" skip-property="">
		<rules>
			<rule>
				<name>jar-signing.keystore.password-syntax</name>
				<description>Checks jar-signing.keystore.password is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jar-signing.keystore.password ==~ /.*\S+.*/</condition>
							<condition negate="true">jar-signing.keystore.password ==~ /.*\s.*/</condition>
							<condition negate="true">jar-signing.keystore.password ==~ /.*\x5c.*/</condition>
							<condition negate="true">jar-signing.keystore.password ==~ /.*\/.*/</condition>
						</and>
						<condition>jar-signing.keystore.password == null </condition>
						<condition>jar-signing.keystore.password == "" </condition>
					</or>
				</conditions>
				<fail-message>jar-signing.keystore.password did not pass validation. jar-signing.keystore.password must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "nci123!".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="java.major.version" description="" skip-property="">
		<rules>
			<rule>
				<name>java.major.version-syntax</name>
				<description>Checks java.major.version is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>java.major.version ==~ /.*\S+.*/</condition>
							<condition negate="true">java.major.version ==~ /.*\s.*/</condition>
							<condition negate="true">java.major.version ==~ /.*\x5c.*/</condition>
							<condition negate="true">java.major.version ==~ /.*\/.*/</condition>
						</and>
						<condition>java.major.version == null </condition>
						<condition>java.major.version == "" </condition>
					</or>
				</conditions>
				<fail-message>java.major.version did not pass validation. java.major.version must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "1.5".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="java.minor.version" description="" skip-property="">
		<rules>
			<rule>
				<name>java.minor.version-syntax</name>
				<description>Checks java.minor.version is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>java.minor.version ==~ /.*\S+.*/</condition>
							<condition negate="true">java.minor.version ==~ /.*\s.*/</condition>
							<condition negate="true">java.minor.version ==~ /.*\x5c.*/</condition>
							<condition negate="true">java.minor.version ==~ /.*\/.*/</condition>
						</and>
						<condition>java.minor.version == null </condition>
						<condition>java.minor.version == "" </condition>
					</or>
				</conditions>
				<fail-message>java.minor.version did not pass validation. java.minor.version must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "1.5.0_10".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.binaries.file" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.binaries.file-syntax</name>
				<description>Checks jboss.binaries.file is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.binaries.file ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.binaries.file ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.binaries.file ==~ /.*\x5c.*/</condition>
						</and>
						<condition>jboss.binaries.file == null </condition>
						<condition>jboss.binaries.file == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.binaries.file did not pass validation. jboss.binaries.file must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "jboss-4.0.5.GA.zip".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.binaries.relative.dir" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.binaries.relative.dir-syntax</name>
				<description>Checks jboss.binaries.relative.dir is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.binaries.relative.dir ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.binaries.relative.dir ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.binaries.relative.dir ==~ /.*\x5c.*/</condition>
						</and>
						<condition>jboss.binaries.relative.dir == null </condition>
						<condition>jboss.binaries.relative.dir == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.binaries.relative.dir did not pass validation. jboss.binaries.relative.dir must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "jboss-4.0.5.GA".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss-bindings.file" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss-bindings.file-syntax</name>
				<description>Checks jboss-bindings.file is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss-bindings.file ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss-bindings.file ==~ /.*\s.*/</condition>
							<condition negate="true">jboss-bindings.file ==~ /.*\x5c.*/</condition>
						</and>
						<condition>jboss-bindings.file == null </condition>
						<condition>jboss-bindings.file == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss-bindings.file did not pass validation. jboss-bindings.file must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "ncicb-bindings-dac-jboss-4.0.x.xml".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss-bindings.src.url" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss-bindings.src.url-syntax</name>
				<description>Checks jboss-bindings.src.url is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss-bindings.src.url ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss-bindings.src.url ==~ /.*\s.*/</condition>
							<condition negate="true">jboss-bindings.src.url ==~ /.*\x5c.*/</condition>
						</and>
						<condition>jboss-bindings.src.url == null </condition>
						<condition>jboss-bindings.src.url == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss-bindings.src.url did not pass validation. jboss-bindings.src.url must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "http://gforge.nci.nih.gov/svnroot/automation/trunk/resources/jboss-bindings/ncicb-bindings-dac-jboss-4.0.x.xml".</fail-message>
			</rule>
			<rule>
				<name>jboss-bindings.src.url-url</name>
				<description>Checks jboss-bindings.src.url has proper value.</description>
				<conditions>
					<condition>jboss-bindings.src.url ==~ /^http.*:\/\/.*.nci.nih.gov.*/</condition>
				</conditions>
				<fail-message>jboss-bindings.src.url did not pass validation. jboss-bindings.src.url must be http(s)://*.nci.nih.gov/*. Sample valid value - "http://gforge.nci.nih.gov/svnroot/automation/trunk/resources/jboss-bindings/ncicb-bindings-dac-jboss-4.0.x.xml".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.cgmm.enable" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.cgmm.enable-syntax</name>
				<description>Checks jboss.cgmm.enable is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.cgmm.enable ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.cgmm.enable ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.cgmm.enable ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.cgmm.enable ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.cgmm.enable == null </condition>
						<condition>jboss.cgmm.enable == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.cgmm.enable did not pass validation. jboss.cgmm.enable must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>jboss.cgmm.enable-tf</name>
				<description>Checks jboss.cgmm.enable has proper value.</description>
				<conditions>
					<or>
						<condition>jboss.cgmm.enable == "true"</condition>
						<condition>jboss.cgmm.enable == "false"</condition>
						<condition>jboss.cgmm.enable == ""</condition>
						<condition>jboss.cgmm.enable == null</condition>
					</or>
				</conditions>
				<fail-message>jboss.cgmm.enable did not pass validation. jboss.cgmm.enable must be true, false or empty. Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>jboss.cgmm.enable-relationship</name>
				<description>Checks jboss.cgmm.enable has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition> jboss.cgmm.enable == "true"</condition>
							<condition> jboss.major.version == 4</condition>
						</and>
						<condition> jboss.cgmm.enable != "true" </condition>
					</or>
				</conditions>
				<fail-message>jboss.cgmm.enable did not pass validation. Must be empty or true with jboss.major.version=4.</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.cobraorb.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.cobraorb.port-syntax</name>
				<description>Checks jboss.cobraorb.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.cobraorb.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.cobraorb.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.cobraorb.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.cobraorb.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.cobraorb.port == null </condition>
						<condition>jboss.cobraorb.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.cobraorb.port did not pass validation. jboss.cobraorb.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30350".</fail-message>
			</rule>
			<rule>
				<name>jboss.cobraorb.port-port</name>
				<description>Checks jboss.cobraorb.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.cobraorb.port ==~ /\d+/</condition>
							<condition>jboss.cobraorb.port &gt;= 0</condition>
							<condition>jboss.cobraorb.port &lt;= 65535</condition>
						</and>
						<condition>jboss.cobraorb.port == null </condition>
						<condition>jboss.cobraorb.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.cobraorb.port did not pass validation. jboss.cobraorb.port must be empty or between 0 and 65535. Sample valid value - "30350".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jbosscp.binaries.file" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jbosscp.binaries.file-syntax</name>
				<description>Checks jbosscp.binaries.file is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jbosscp.binaries.file ==~ /.*\S+.*/</condition>
							<condition negate="true">jbosscp.binaries.file ==~ /.*\s.*/</condition>
							<condition negate="true">jbosscp.binaries.file ==~ /.*\x5c.*/</condition>
						</and>
						<condition>jbosscp.binaries.file == null </condition>
						<condition>jbosscp.binaries.file == "" </condition>
					</or>
				</conditions>
				<fail-message>jbosscp.binaries.file did not pass validation. jbosscp.binaries.file must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "jboss-4.0.5.GA_CP15.zip".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jbosscp.src.url" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jbosscp.src.url-syntax</name>
				<description>Checks jbosscp.src.url is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jbosscp.src.url ==~ /.*\S+.*/</condition>
							<condition negate="true">jbosscp.src.url ==~ /.*\s.*/</condition>
							<condition negate="true">jbosscp.src.url ==~ /.*\x5c.*/</condition>
						</and>
						<condition>jbosscp.src.url == null </condition>
						<condition>jbosscp.src.url == "" </condition>
					</or>
				</conditions>
				<fail-message>jbosscp.src.url did not pass validation. jbosscp.src.url must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "http://gforge.nci.nih.gov/svnroot/commonlibrary/trunk/techstack-2007/os-independent/jboss-4.0.5.GA_CP15.zip".</fail-message>
			</rule>
			<rule>
				<name>jbosscp.src.url-url</name>
				<description>Checks jbosscp.src.url has proper value.</description>
				<conditions>
					<condition>jbosscp.src.url ==~ /^http.*:\/\/.*.nci.nih.gov.*/</condition>
				</conditions>
				<fail-message>jbosscp.src.url did not pass validation. jbosscp.src.url must be http(s)://*.nci.nih.gov/*. Sample valid value - "http://gforge.nci.nih.gov/svnroot/commonlibrary/trunk/techstack-2007/os-independent/jboss-4.0.5.GA_CP15.zip".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.ejbinvoker.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.ejbinvoker.port-syntax</name>
				<description>Checks jboss.ejbinvoker.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.ejbinvoker.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.ejbinvoker.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.ejbinvoker.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.ejbinvoker.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.ejbinvoker.port == null </condition>
						<condition>jboss.ejbinvoker.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.ejbinvoker.port did not pass validation. jboss.ejbinvoker.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30150".</fail-message>
			</rule>
			<rule>
				<name>jboss.ejbinvoker.port-port</name>
				<description>Checks jboss.ejbinvoker.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.ejbinvoker.port ==~ /\d+/</condition>
							<condition>jboss.ejbinvoker.port &gt;= 0</condition>
							<condition>jboss.ejbinvoker.port &lt;= 65535</condition>
						</and>
						<condition>jboss.ejbinvoker.port == null </condition>
						<condition>jboss.ejbinvoker.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.ejbinvoker.port did not pass validation. jboss.ejbinvoker.port must be empty or between 0 and 65535. Sample valid value - "30150".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.external.grid.secure.host" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.external.grid.secure.host-syntax</name>
				<description>Checks jboss.external.grid.secure.host is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.external.grid.secure.host ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.external.grid.secure.host ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.external.grid.secure.host ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.external.grid.secure.host ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.external.grid.secure.host == null </condition>
						<condition>jboss.external.grid.secure.host == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.external.grid.secure.host did not pass validation. jboss.external.grid.secure.host must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.external.grid.secure.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.external.grid.secure.port-syntax</name>
				<description>Checks jboss.external.grid.secure.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.external.grid.secure.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.external.grid.secure.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.external.grid.secure.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.external.grid.secure.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.external.grid.secure.port == null </condition>
						<condition>jboss.external.grid.secure.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.external.grid.secure.port did not pass validation. jboss.external.grid.secure.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "".</fail-message>
			</rule>
			<rule>
				<name>jboss.external.grid.secure.port-port</name>
				<description>Checks jboss.external.grid.secure.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.external.grid.secure.port ==~ /\d+/</condition>
							<condition>jboss.external.grid.secure.port &gt;= 0</condition>
							<condition>jboss.external.grid.secure.port &lt;= 65535</condition>
						</and>
						<condition>jboss.external.grid.secure.port == null </condition>
						<condition>jboss.external.grid.secure.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.external.grid.secure.port did not pass validation. jboss.external.grid.secure.port must be empty or between 0 and 65535. Sample valid value - "".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.external.http.host" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.external.http.host-syntax</name>
				<description>Checks jboss.external.http.host is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.external.http.host ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.external.http.host ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.external.http.host ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.external.http.host ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.external.http.host == null </condition>
						<condition>jboss.external.http.host == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.external.http.host did not pass validation. jboss.external.http.host must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.external.http.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.external.http.port-syntax</name>
				<description>Checks jboss.external.http.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.external.http.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.external.http.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.external.http.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.external.http.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.external.http.port == null </condition>
						<condition>jboss.external.http.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.external.http.port did not pass validation. jboss.external.http.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "".</fail-message>
			</rule>
			<rule>
				<name>jboss.external.http.port-port</name>
				<description>Checks jboss.external.http.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.external.http.port ==~ /\d+/</condition>
							<condition>jboss.external.http.port &gt;= 0</condition>
							<condition>jboss.external.http.port &lt;= 65535</condition>
						</and>
						<condition>jboss.external.http.port == null </condition>
						<condition>jboss.external.http.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.external.http.port did not pass validation. jboss.external.http.port must be empty or between 0 and 65535. Sample valid value - "".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.external.ssl.host" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.external.ssl.host-syntax</name>
				<description>Checks jboss.external.ssl.host is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.external.ssl.host ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.external.ssl.host ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.external.ssl.host ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.external.ssl.host ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.external.ssl.host == null </condition>
						<condition>jboss.external.ssl.host == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.external.ssl.host did not pass validation. jboss.external.ssl.host must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.external.ssl.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.external.ssl.port-syntax</name>
				<description>Checks jboss.external.ssl.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.external.ssl.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.external.ssl.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.external.ssl.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.external.ssl.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.external.ssl.port == null </condition>
						<condition>jboss.external.ssl.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.external.ssl.port did not pass validation. jboss.external.ssl.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "".</fail-message>
			</rule>
			<rule>
				<name>jboss.external.ssl.port-port</name>
				<description>Checks jboss.external.ssl.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.external.ssl.port ==~ /\d+/</condition>
							<condition>jboss.external.ssl.port &gt;= 0</condition>
							<condition>jboss.external.ssl.port &lt;= 65535</condition>
						</and>
						<condition>jboss.external.ssl.port == null </condition>
						<condition>jboss.external.ssl.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.external.ssl.port did not pass validation. jboss.external.ssl.port must be empty or between 0 and 65535. Sample valid value - "".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.grid.secure.cert.location" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.grid.secure.cert.location-syntax</name>
				<description>Checks jboss.grid.secure.cert.location is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.grid.secure.cert.location ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.grid.secure.cert.location ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.grid.secure.cert.location ==~ /.*\x5c.*/</condition>
						</and>
						<condition>jboss.grid.secure.cert.location == null </condition>
						<condition>jboss.grid.secure.cert.location == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.grid.secure.cert.location did not pass validation. jboss.grid.secure.cert.location must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "/path/165.112.132.171-cert.pem".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.grid.secure.enable" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.grid.secure.enable-syntax</name>
				<description>Checks jboss.grid.secure.enable is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.grid.secure.enable ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.grid.secure.enable ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.grid.secure.enable ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.grid.secure.enable ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.grid.secure.enable == null </condition>
						<condition>jboss.grid.secure.enable == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.grid.secure.enable did not pass validation. jboss.grid.secure.enable must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>jboss.grid.secure.enable-tf</name>
				<description>Checks jboss.grid.secure.enable has proper value.</description>
				<conditions>
					<or>
						<condition> jboss.grid.secure.enable == "true"</condition>
						<condition> jboss.grid.secure.enable == "false"</condition>
						<condition> jboss.grid.secure.enable == ""</condition>
						<condition> jboss.grid.secure.enable == null</condition>
					</or>
				</conditions>
				<fail-message>jboss.grid.secure.enable did not pass validation. Must be empty or true or false.</fail-message>
			</rule>
			<rule>
				<name>jboss.grid.secure.enable-relationship</name>
				<description>Checks jboss.grid.secure.enable has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition> jboss.grid.secure.enable == "true"</condition>
							<condition> jboss.grid.secure.cert.location ==~ /.*\S+.*/</condition>
							<condition> jboss.grid.secure.key.location ==~ /.*\S+.*/</condition>
							<condition> jboss.grid.secure.port ==~ /.*\S+.*/</condition>
						</and>
						<condition> jboss.grid.secure.enable != "true"</condition>
					</or>
				</conditions>
				<fail-message>jboss.grid.secure.enable did not pass validation. If true then jboss.grid.secure.cert.location, jboss.grid.secure.enable, jboss.grid.secure.key.location, jboss.grid.secure.port must have values.</fail-message>
			</rule>

		</rules>
	</property>
	<property  name="jboss.grid.secure.key.location" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.grid.secure.key.location-syntax</name>
				<description>Checks jboss.grid.secure.key.location is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.grid.secure.key.location ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.grid.secure.key.location ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.grid.secure.key.location ==~ /.*\x5c.*/</condition>
						</and>
						<condition>jboss.grid.secure.key.location == null </condition>
						<condition>jboss.grid.secure.key.location == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.grid.secure.key.location did not pass validation. jboss.grid.secure.key.location must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "/path/165.112.132.171-key.pem".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.grid.secure.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.grid.secure.port-syntax</name>
				<description>Checks jboss.grid.secure.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.grid.secure.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.grid.secure.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.grid.secure.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.grid.secure.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.grid.secure.port == null </condition>
						<condition>jboss.grid.secure.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.grid.secure.port did not pass validation. jboss.grid.secure.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30500".</fail-message>
			</rule>
			<rule>
				<name>jboss.grid.secure.port-port</name>
				<description>Checks jboss.grid.secure.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.grid.secure.port ==~ /\d+/</condition>
							<condition>jboss.grid.secure.port &gt;= 0</condition>
							<condition>jboss.grid.secure.port &lt;= 65535</condition>
						</and>
						<condition>jboss.grid.secure.port == null </condition>
						<condition>jboss.grid.secure.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.grid.secure.port did not pass validation. jboss.grid.secure.port must be empty or between 0 and 65535. Sample valid value - "30500".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.hajndi.auto.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.hajndi.auto.port-syntax</name>
				<description>Checks jboss.hajndi.auto.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.hajndi.auto.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.hajndi.auto.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.hajndi.auto.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.hajndi.auto.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.hajndi.auto.port == null </condition>
						<condition>jboss.hajndi.auto.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.hajndi.auto.port did not pass validation. jboss.hajndi.auto.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30370".</fail-message>
			</rule>
			<rule>
				<name>jboss.hajndi.auto.port-port</name>
				<description>Checks jboss.hajndi.auto.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.hajndi.auto.port ==~ /\d+/</condition>
							<condition>jboss.hajndi.auto.port &gt;= 0</condition>
							<condition>jboss.hajndi.auto.port &lt;= 65535</condition>
						</and>
						<condition>jboss.hajndi.auto.port == null </condition>
						<condition>jboss.hajndi.auto.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.hajndi.auto.port did not pass validation. jboss.hajndi.auto.port must be empty or between 0 and 65535. Sample valid value - "30370".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.hajndi.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.hajndi.port-syntax</name>
				<description>Checks jboss.hajndi.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.hajndi.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.hajndi.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.hajndi.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.hajndi.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.hajndi.port == null </condition>
						<condition>jboss.hajndi.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.hajndi.port did not pass validation. jboss.hajndi.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30160".</fail-message>
			</rule>
			<rule>
				<name>jboss.hajndi.port-port</name>
				<description>Checks jboss.hajndi.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.hajndi.port ==~ /\d+/</condition>
							<condition>jboss.hajndi.port &gt;= 0</condition>
							<condition>jboss.hajndi.port &lt;= 65535</condition>
						</and>
						<condition>jboss.hajndi.port == null </condition>
						<condition>jboss.hajndi.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.hajndi.port did not pass validation. jboss.hajndi.port must be empty or between 0 and 65535. Sample valid value - "30160".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.hajrmi.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.hajrmi.port-syntax</name>
				<description>Checks jboss.hajrmi.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.hajrmi.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.hajrmi.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.hajrmi.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.hajrmi.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.hajrmi.port == null </condition>
						<condition>jboss.hajrmi.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.hajrmi.port did not pass validation. jboss.hajrmi.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30260".</fail-message>
			</rule>
			<rule>
				<name>jboss.hajrmi.port-port</name>
				<description>Checks jboss.hajrmi.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.hajrmi.port ==~ /\d+/</condition>
							<condition>jboss.hajrmi.port &gt;= 0</condition>
							<condition>jboss.hajrmi.port &lt;= 65535</condition>
						</and>
						<condition>jboss.hajrmi.port == null </condition>
						<condition>jboss.hajrmi.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.hajrmi.port did not pass validation. jboss.hajrmi.port must be empty or between 0 and 65535. Sample valid value - "30260".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.relative.path" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.relative.path-syntax</name>
				<description>Checks jboss.relative.path is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.relative.path ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.relative.path ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.relative.path ==~ /.*\x5c.*/</condition>
						</and>
						<condition>jboss.relative.path == null </condition>
						<condition>jboss.relative.path == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.relative.path did not pass validation. jboss.relative.path must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "jboss-4.0.5.GA".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.http-connector.remove" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.http-connector.remove-syntax</name>
				<description>Checks jboss.http-connector.remove is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.http-connector.remove ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.http-connector.remove ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.http-connector.remove ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.http-connector.remove ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.http-connector.remove == null </condition>
						<condition>jboss.http-connector.remove == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.http-connector.remove did not pass validation. jboss.http-connector.remove must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>jboss.http-connector.remove-tf</name>
				<description>Checks jboss.http-connector.remove has proper value.</description>
				<conditions>
					<or>
						<condition> jboss.http-connector.remove == "true"</condition>
						<condition> jboss.http-connector.remove == "false"</condition>
						<condition> jboss.http-connector.remove == ""</condition>
						<condition> jboss.http-connector.remove == null</condition>
					</or>
				</conditions>
				<fail-message>jboss.http-connector.remove did not pass validation. Must be empty or true or false.</fail-message>
			</rule>
			<rule>
				<name>jboss.http-connector.remove-relationship</name>
				<description>Checks jboss.http-connector.remove has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition> jboss.http-connector.remove == "true"</condition>
							<condition> jboss.grid.secure.enable == "true"</condition>
						</and>
						<condition> jboss.http-connector.remove != "true"</condition>
					</or>
				</conditions>
				<fail-message>jboss.http-connector.remove did not pass validation. If true then jboss.grid.secure.enable must also be true.</fail-message>
			</rule>
		</rules>
	</property>
	<!-- java.opts is to complex for rules -->
	<property  name="jboss.jms2.netty.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.jms2.netty.port-syntax</name>
				<description>Checks jboss.jms2.netty.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.jms2.netty.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.jms2.netty.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.jms2.netty.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.jms2.netty.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.jms2.netty.port == null </condition>
						<condition>jboss.jms2.netty.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.jms2.netty.port did not pass validation. jboss.jms2.netty.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30390".</fail-message>
			</rule>
			<rule>
				<name>jboss.jms2.netty.port-port</name>
				<description>Checks jboss.jms2.netty.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.jms2.netty.port ==~ /\d+/</condition>
							<condition>jboss.jms2.netty.port &gt;= 0</condition>
							<condition>jboss.jms2.netty.port &lt;= 65535</condition>
						</and>
						<condition>jboss.jms2.netty.port == null </condition>
						<condition>jboss.jms2.netty.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.jms2.netty.port did not pass validation. jboss.jms2.netty.port must be empty or between 0 and 65535. Sample valid value - "30390".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.jms2.netty-ssl.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.jms2.netty-ssl.port-syntax</name>
				<description>Checks jboss.jms2.netty-ssl.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.jms2.netty-ssl.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.jms2.netty-ssl.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.jms2.netty-ssl.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.jms2.netty-ssl.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.jms2.netty-ssl.port == null </condition>
						<condition>jboss.jms2.netty-ssl.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.jms2.netty-ssl.port did not pass validation. jboss.jms2.netty-ssl.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30400".</fail-message>
			</rule>
			<rule>
				<name>jboss.jms2.netty-ssl.port-port</name>
				<description>Checks jboss.jms2.netty-ssl.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.jms2.netty-ssl.port ==~ /\d+/</condition>
							<condition>jboss.jms2.netty-ssl.port &gt;= 0</condition>
							<condition>jboss.jms2.netty-ssl.port &lt;= 65535</condition>
						</and>
						<condition>jboss.jms2.netty-ssl.port == null </condition>
						<condition>jboss.jms2.netty-ssl.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.jms2.netty-ssl.port did not pass validation. jboss.jms2.netty-ssl.port must be empty or between 0 and 65535. Sample valid value - "30400".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.jms.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.jms.port-syntax</name>
				<description>Checks jboss.jms.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.jms.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.jms.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.jms.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.jms.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.jms.port == null </condition>
						<condition>jboss.jms.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.jms.port did not pass validation. jboss.jms.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30170".</fail-message>
			</rule>
			<rule>
				<name>jboss.jms.port-port</name>
				<description>Checks jboss.jms.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.jms.port ==~ /\d+/</condition>
							<condition>jboss.jms.port &gt;= 0</condition>
							<condition>jboss.jms.port &lt;= 65535</condition>
						</and>
						<condition>jboss.jms.port == null </condition>
						<condition>jboss.jms.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.jms.port did not pass validation. jboss.jms.port must be empty or between 0 and 65535. Sample valid value - "30170".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.jmx-rmi.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.jmx-rmi.port-syntax</name>
				<description>Checks jboss.jmx-rmi.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.jmx-rmi.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.jmx-rmi.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.jmx-rmi.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.jmx-rmi.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.jmx-rmi.port == null </condition>
						<condition>jboss.jmx-rmi.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.jmx-rmi.port did not pass validation. jboss.jmx-rmi.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30290".</fail-message>
			</rule>
			<rule>
				<name>jboss.jmx-rmi.port-port</name>
				<description>Checks jboss.jmx-rmi.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.jmx-rmi.port ==~ /\d+/</condition>
							<condition>jboss.jmx-rmi.port &gt;= 0</condition>
							<condition>jboss.jmx-rmi.port &lt;= 65535</condition>
						</and>
						<condition>jboss.jmx-rmi.port == null </condition>
						<condition>jboss.jmx-rmi.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.jmx-rmi.port did not pass validation. jboss.jmx-rmi.port must be empty or between 0 and 65535. Sample valid value - "30290".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.messaging.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.messaging.port-syntax</name>
				<description>Checks jboss.messaging.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.messaging.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.messaging.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.messaging.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.messaging.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.messaging.port == null </condition>
						<condition>jboss.messaging.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.messaging.port did not pass validation. jboss.messaging.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30330".</fail-message>
			</rule>
			<rule>
				<name>jboss.messaging.port-port</name>
				<description>Checks jboss.messaging.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.messaging.port ==~ /\d+/</condition>
							<condition>jboss.messaging.port &gt;= 0</condition>
							<condition>jboss.messaging.port &lt;= 65535</condition>
						</and>
						<condition>jboss.messaging.port == null </condition>
						<condition>jboss.messaging.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.messaging.port did not pass validation. jboss.messaging.port must be empty or between 0 and 65535. Sample valid value - "30330".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.ncicb-standard.port-config" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.ncicb-standard.port-config-syntax</name>
				<description>Checks jboss.ncicb-standard.port-config is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.ncicb-standard.port-config ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.ncicb-standard.port-config ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.ncicb-standard.port-config ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.ncicb-standard.port-config ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.ncicb-standard.port-config == null </condition>
						<condition>jboss.ncicb-standard.port-config == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.ncicb-standard.port-config did not pass validation. jboss.ncicb-standard.port-config must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>jboss.ncicb-standard.port-config-tf</name>
				<description>Checks jboss.ncicb-standard.port-config has proper value.</description>
				<conditions>
					<or>
						<condition> jboss.ncicb-standard.port-config == "true"</condition>
						<condition> jboss.ncicb-standard.port-config == "false"</condition>
						<condition> jboss.ncicb-standard.port-config == ""</condition>
						<condition> jboss.ncicb-standard.port-config == null</condition>
					</or>
				</conditions>
				<fail-message>jboss.ncicb-standard.port-config did not pass validation. Must be empty or true or false.</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.pooledha.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.pooledha.port-syntax</name>
				<description>Checks jboss.pooledha.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.pooledha.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.pooledha.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.pooledha.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.pooledha.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.pooledha.port == null </condition>
						<condition>jboss.pooledha.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.pooledha.port did not pass validation. jboss.pooledha.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30270".</fail-message>
			</rule>
			<rule>
				<name>jboss.pooledha.port-port</name>
				<description>Checks jboss.pooledha.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.pooledha.port ==~ /\d+/</condition>
							<condition>jboss.pooledha.port &gt;= 0</condition>
							<condition>jboss.pooledha.port &lt;= 65535</condition>
						</and>
						<condition>jboss.pooledha.port == null </condition>
						<condition>jboss.pooledha.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.pooledha.port did not pass validation. jboss.pooledha.port must be empty or between 0 and 65535. Sample valid value - "30270".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.remoting.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.remoting.port-syntax</name>
				<description>Checks jboss.remoting.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.remoting.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.remoting.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.remoting.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.remoting.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.remoting.port == null </condition>
						<condition>jboss.remoting.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.remoting.port did not pass validation. jboss.remoting.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30320".</fail-message>
			</rule>
			<rule>
				<name>jboss.remoting.port-port</name>
				<description>Checks jboss.remoting.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.remoting.port ==~ /\d+/</condition>
							<condition>jboss.remoting.port &gt;= 0</condition>
							<condition>jboss.remoting.port &lt;= 65535</condition>
						</and>
						<condition>jboss.remoting.port == null </condition>
						<condition>jboss.remoting.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.remoting.port did not pass validation. jboss.remoting.port must be empty or between 0 and 65535. Sample valid value - "30320".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.server.bind.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.server.bind.port-syntax</name>
				<description>Checks jboss.server.bind.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.server.bind.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.server.bind.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.server.bind.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.server.bind.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.server.bind.port == null </condition>
						<condition>jboss.server.bind.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.server.bind.port did not pass validation. jboss.server.bind.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "0".</fail-message>
			</rule>
			<rule>
				<name>jboss.server.bind.port-port</name>
				<description>Checks jboss.server.bind.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.server.bind.port ==~ /\d+/</condition>
							<condition>jboss.server.bind.port &gt;= 0</condition>
							<condition>jboss.server.bind.port &lt;= 65535</condition>
						</and>
						<condition>jboss.server.bind.port == null </condition>
						<condition>jboss.server.bind.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.server.bind.port did not pass validation. jboss.server.bind.port must be empty or between 0 and 65535. Sample valid value - "0".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.server.hostname" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.server.hostname-syntax</name>
				<description>Checks jboss.server.hostname is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.server.hostname ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.server.hostname ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.server.hostname ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.server.hostname ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.server.hostname == null </condition>
						<condition>jboss.server.hostname == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.server.hostname did not pass validation. jboss.server.hostname must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "localhost".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.server.jndi.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.server.jndi.port-syntax</name>
				<description>Checks jboss.server.jndi.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.server.jndi.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.server.jndi.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.server.jndi.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.server.jndi.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.server.jndi.port == null </condition>
						<condition>jboss.server.jndi.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.server.jndi.port did not pass validation. jboss.server.jndi.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30200".</fail-message>
			</rule>
			<rule>
				<name>jboss.server.jndi.port-port</name>
				<description>Checks jboss.server.jndi.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.server.jndi.port ==~ /\d+/</condition>
							<condition>jboss.server.jndi.port &gt;= 0</condition>
							<condition>jboss.server.jndi.port &lt;= 65535</condition>
						</and>
						<condition>jboss.server.jndi.port == null </condition>
						<condition>jboss.server.jndi.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.server.jndi.port did not pass validation. jboss.server.jndi.port must be empty or between 0 and 65535. Sample valid value - "30200".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.server.name" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.server.name-syntax</name>
				<description>Checks jboss.server.name is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.server.name ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.server.name ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.server.name ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.server.name ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.server.name == null </condition>
						<condition>jboss.server.name == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.server.name did not pass validation. jboss.server.name must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "default".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.server.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.server.port-syntax</name>
				<description>Checks jboss.server.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.server.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.server.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.server.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.server.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.server.port == null </condition>
						<condition>jboss.server.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.server.port did not pass validation. jboss.server.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30210".</fail-message>
			</rule>
			<rule>
				<name>jboss.server.port-port</name>
				<description>Checks jboss.server.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.server.port ==~ /\d+/</condition>
							<condition>jboss.server.port &gt;= 0</condition>
							<condition>jboss.server.port &lt;= 65535</condition>
						</and>
						<condition>jboss.server.port == null </condition>
						<condition>jboss.server.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.server.port did not pass validation. jboss.server.port must be empty or between 0 and 65535. Sample valid value - "30210".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.server.ports.name" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.server.ports.name-syntax</name>
				<description>Checks jboss.server.ports.name is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.server.ports.name ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.server.ports.name ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.server.ports.name ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.server.ports.name ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.server.ports.name == null </condition>
						<condition>jboss.server.ports.name == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.server.ports.name did not pass validation. jboss.server.ports.name must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "config39080".</fail-message>
			</rule>
			<rule>
				<name>jboss.server.ports.name-value-jboss4</name>
				<description>Checks jboss.server.ports.name has proper value.</description>
				<conditions>
					<or>
						<condition> jboss.ncicb-standard.port-config != "true"</condition>
						<condition> jboss.major.version == "5"</condition>
						<and>
							<condition> jboss.ncicb-standard.port-config == "true"</condition>
							<condition> jboss.major.version == "4"</condition>
							<or>
								<condition>jboss.server.ports.name == "config19080"</condition>
								<condition>jboss.server.ports.name == "config19180"</condition>
								<condition>jboss.server.ports.name == "config19280"</condition>
								<condition>jboss.server.ports.name == "config19380"</condition>
								<condition>jboss.server.ports.name == "config19480"</condition>
								<condition>jboss.server.ports.name == "config19580"</condition>
								<condition>jboss.server.ports.name == "config19680"</condition>
								<condition>jboss.server.ports.name == "config29080"</condition>
								<condition>jboss.server.ports.name == "config29180"</condition>
								<condition>jboss.server.ports.name == "config39080"</condition>
								<condition>jboss.server.ports.name == "config39080"</condition>
								<condition>jboss.server.ports.name == "config39180"</condition>
								<condition>jboss.server.ports.name == "config39180"</condition>
								<condition>jboss.server.ports.name == "config39280"</condition>
								<condition>jboss.server.ports.name == "config39380"</condition>
								<condition>jboss.server.ports.name == "config39480"</condition>
								<condition>jboss.server.ports.name == "config39580"</condition>
								<condition>jboss.server.ports.name == "config39680"</condition>
								<condition>jboss.server.ports.name == "config39780"</condition>
								<condition>jboss.server.ports.name == "config39880"</condition>
								<condition>jboss.server.ports.name == "config39980"</condition>
								<condition>jboss.server.ports.name == "config49080"</condition>
								<condition>jboss.server.ports.name == "config49180"</condition>
								<condition>jboss.server.ports.name == "config59080"</condition>
								<condition>jboss.server.ports.name == "config59180"</condition>
								<condition>jboss.server.ports.name == "config59280"</condition>
								<condition>jboss.server.ports.name == "config59380"</condition>
								<condition>jboss.server.ports.name == "config59480"</condition>
								<condition>jboss.server.ports.name == "config59580"</condition>
							</or>
						</and>
					</or>
				</conditions>
				<fail-message>jboss.server.ports.name did not pass validation. If jboss.ncicb-standard.port-config is true and jboss.major.version is 4 then jboss.server.ports must be one of the following config19080, config19180, config19280, config19380, config19480, config19580, config19680, config29080, config29180, config39080, config39080, config39180, config39180, config39280, config39380, config39480, config39580, config39680, config39780, config39880, config39980, config49080, config49180, config59080, config59180, config59280, config59380, config59480, config59580.</fail-message>
				</rule>
			<rule>
				<name>jboss.server.ports.name-value-jboss5</name>
				<description>Checks jboss.server.ports.name has proper value.</description>
				<conditions>
					<or>
						<condition> jboss.ncicb-standard.port-config != "true"</condition>
						<condition> jboss.major.version == "4"</condition>
						<and>
							<condition> jboss.ncicb-standard.port-config == "true"</condition>
							<condition> jboss.major.version == "5"</condition>
							<or>
								<condition>jboss.server.ports.name == "ports-29080"</condition>
								<condition>jboss.server.ports.name == "ports-29180"</condition>
								<condition>jboss.server.ports.name == "ports-29280"</condition>
								<condition>jboss.server.ports.name == "ports-29380"</condition>
								<condition>jboss.server.ports.name == "ports-29480"</condition>
								<condition>jboss.server.ports.name == "ports-29580"</condition>
								<condition>jboss.server.ports.name == "ports-29680"</condition>
								<condition>jboss.server.ports.name == "ports-29780"</condition>
								<condition>jboss.server.ports.name == "ports-29880"</condition>
								<condition>jboss.server.ports.name == "ports-29980"</condition>
							</or>
						</and>
					</or>
				</conditions>
				<fail-message>If jboss.ncicb-standard.port-config is true and jboss.major.version is 5 then jboss.server.ports.name must be one of the following ports-29080, ports-29180, ports-29280, ports-29380, ports-29480, ports-29580, ports-29680, ports-29780, ports-29880, ports-29980.</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.server.rmi.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.server.rmi.port-syntax</name>
				<description>Checks jboss.server.rmi.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.server.rmi.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.server.rmi.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.server.rmi.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.server.rmi.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.server.rmi.port == null </condition>
						<condition>jboss.server.rmi.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.server.rmi.port did not pass validation. jboss.server.rmi.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30230".</fail-message>
			</rule>
			<rule>
				<name>jboss.server.rmi.port-port</name>
				<description>Checks jboss.server.rmi.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.server.rmi.port ==~ /\d+/</condition>
							<condition>jboss.server.rmi.port &gt;= 0</condition>
							<condition>jboss.server.rmi.port &lt;= 65535</condition>
						</and>
						<condition>jboss.server.rmi.port == null </condition>
						<condition>jboss.server.rmi.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.server.rmi.port did not pass validation. jboss.server.rmi.port must be empty or between 0 and 65535. Sample valid value - "30230".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.service.rmiobject.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.service.rmiobject.port-syntax</name>
				<description>Checks jboss.service.rmiobject.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.service.rmiobject.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.service.rmiobject.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.service.rmiobject.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.service.rmiobject.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.service.rmiobject.port == null </condition>
						<condition>jboss.service.rmiobject.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.service.rmiobject.port did not pass validation. jboss.service.rmiobject.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30240".</fail-message>
			</rule>
			<rule>
				<name>jboss.service.rmiobject.port-port</name>
				<description>Checks jboss.service.rmiobject.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.service.rmiobject.port ==~ /\d+/</condition>
							<condition>jboss.service.rmiobject.port &gt;= 0</condition>
							<condition>jboss.service.rmiobject.port &lt;= 65535</condition>
						</and>
						<condition>jboss.service.rmiobject.port == null </condition>
						<condition>jboss.service.rmiobject.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.service.rmiobject.port did not pass validation. jboss.service.rmiobject.port must be empty or between 0 and 65535. Sample valid value - "30240".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.snmp.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.snmp.port-syntax</name>
				<description>Checks jboss.snmp.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.snmp.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.snmp.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.snmp.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.snmp.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.snmp.port == null </condition>
						<condition>jboss.snmp.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.snmp.port did not pass validation. jboss.snmp.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30310".</fail-message>
			</rule>
			<rule>
				<name>jboss.snmp.port-port</name>
				<description>Checks jboss.snmp.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.snmp.port ==~ /\d+/</condition>
							<condition>jboss.snmp.port &gt;= 0</condition>
							<condition>jboss.snmp.port &lt;= 65535</condition>
						</and>
						<condition>jboss.snmp.port == null </condition>
						<condition>jboss.snmp.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.snmp.port did not pass validation. jboss.snmp.port must be empty or between 0 and 65535. Sample valid value - "30310".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.snmp-trapd.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.snmp-trapd.port-syntax</name>
				<description>Checks jboss.snmp-trapd.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.snmp-trapd.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.snmp-trapd.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.snmp-trapd.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.snmp-trapd.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.snmp-trapd.port == null </condition>
						<condition>jboss.snmp-trapd.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.snmp-trapd.port did not pass validation. jboss.snmp-trapd.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30300".</fail-message>
			</rule>
			<rule>
				<name>jboss.snmp-trapd.port-port</name>
				<description>Checks jboss.snmp-trapd.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.snmp-trapd.port ==~ /\d+/</condition>
							<condition>jboss.snmp-trapd.port &gt;= 0</condition>
							<condition>jboss.snmp-trapd.port &lt;= 65535</condition>
						</and>
						<condition>jboss.snmp-trapd.port == null </condition>
						<condition>jboss.snmp-trapd.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.snmp-trapd.port did not pass validation. jboss.snmp-trapd.port must be empty or between 0 and 65535. Sample valid value - "30300".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.src.url" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.src.url-syntax</name>
				<description>Checks jboss.src.url is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.src.url ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.src.url ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.src.url ==~ /.*\x5c.*/</condition>
						</and>
						<condition>jboss.src.url == null </condition>
						<condition>jboss.src.url == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.src.url did not pass validation. jboss.src.url must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "http://gforge.nci.nih.gov/svnroot/commonlibrary/trunk/techstack-2007/os-independent/jboss-4.0.5.GA.zip".</fail-message>
			</rule>
			<rule>
				<name>jboss.src.url-url</name>
				<description>Checks jboss.src.url has proper value.</description>
				<conditions>
					<condition>jboss.src.url ==~ /^http.*:\/\/.*.nci.nih.gov.*/</condition>
				</conditions>
				<fail-message>jboss.src.url did not pass validation. jboss.src.url must be http(s)://*.nci.nih.gov/*. Sample valid value - "http://gforge.nci.nih.gov/svnroot/commonlibrary/trunk/techstack-2007/os-independent/jboss-4.0.5.GA.zip".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.ssl.enable" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.ssl.enable-syntax</name>
				<description>Checks jboss.ssl.enable is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.ssl.enable ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.ssl.enable ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.ssl.enable ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.ssl.enable ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.ssl.enable == null </condition>
						<condition>jboss.ssl.enable == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.ssl.enable did not pass validation. jboss.ssl.enable must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>jboss.ssl.enable-tf</name>
				<description>Checks jboss.ssl.enable has proper value.</description>
				<conditions>
					<or>
						<condition> jboss.ssl.enable == "true"</condition>
						<condition> jboss.ssl.enable == "false"</condition>
						<condition> jboss.ssl.enable == ""</condition>
						<condition> jboss.ssl.enable == null</condition>
					</or>
				</conditions>
				<fail-message>jboss.ssl.enable did not pass validation. Must be empty or true or false.</fail-message>
			</rule>
			<rule>
				<name>jboss.ssl.enable-relationship</name>
				<description>Checks jboss.ssl.enable has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition> jboss.ssl.enable == "true"</condition>
							<condition> jboss.ssl.keystore.location ==~ /.*\S+.*/</condition>
							<condition> jboss.ssl.keystore.pass ==~ /.*\S+.*/</condition>
							<condition> jboss.ssl.keystore.alias ==~ /.*\S+.*/</condition>
							<condition> jboss.ssl.fullyqualified.hostname ==~ /.*\S+.*/</condition>
						</and>
						<condition> jboss.ssl.enable != "true"</condition>
					</or>
				</conditions>                                                                               <fail-message>jboss.ssl.enable did not pass validation. If true then jboss.ssl.keystore.location, jboss.ssl.keystore.pass, jboss.ssl.keystore.alias, jboss.ssl.fullyqualified.hostname.</fail-message>
			</rule>

		</rules>
	</property>
	<property  name="jboss.ssl.fullyqualified.hostname" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.ssl.fullyqualified.hostname-syntax</name>
				<description>Checks jboss.ssl.fullyqualified.hostname is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.ssl.fullyqualified.hostname ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.ssl.fullyqualified.hostname ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.ssl.fullyqualified.hostname ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.ssl.fullyqualified.hostname ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.ssl.fullyqualified.hostname == null </condition>
						<condition>jboss.ssl.fullyqualified.hostname == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.ssl.fullyqualified.hostname did not pass validation. jboss.ssl.fullyqualified.hostname must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "localhost.nci.nih.gov".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.ssl.keystore.alias" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.ssl.keystore.alias-syntax</name>
				<description>Checks jboss.ssl.keystore.alias is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.ssl.keystore.alias ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.ssl.keystore.alias ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.ssl.keystore.alias ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.ssl.keystore.alias ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.ssl.keystore.alias == null </condition>
						<condition>jboss.ssl.keystore.alias == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.ssl.keystore.alias did not pass validation. jboss.ssl.keystore.alias must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "ncicb-test-ssl-key".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.ssl.keystore.location" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.ssl.keystore.location-syntax</name>
				<description>Checks jboss.ssl.keystore.location is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.ssl.keystore.location ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.ssl.keystore.location ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.ssl.keystore.location ==~ /.*\x5c.*/</condition>
						</and>
						<condition>jboss.ssl.keystore.location == null </condition>
						<condition>jboss.ssl.keystore.location == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.ssl.keystore.location did not pass validation. jboss.ssl.keystore.location must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "/path/ncicb-test-ssl.keystore".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.ssl.keystore.pass" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.ssl.keystore.pass-syntax</name>
				<description>Checks jboss.ssl.keystore.pass is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.ssl.keystore.pass ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.ssl.keystore.pass ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.ssl.keystore.pass ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.ssl.keystore.pass ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.ssl.keystore.pass == null </condition>
						<condition>jboss.ssl.keystore.pass == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.ssl.keystore.pass did not pass validation. jboss.ssl.keystore.pass must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "ncicb1!".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.ssl.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.ssl.port-syntax</name>
				<description>Checks jboss.ssl.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.ssl.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.ssl.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.ssl.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.ssl.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.ssl.port == null </condition>
						<condition>jboss.ssl.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.ssl.port did not pass validation. jboss.ssl.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30380".</fail-message>
			</rule>
			<rule>
				<name>jboss.ssl.port-port</name>
				<description>Checks jboss.ssl.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.ssl.port ==~ /\d+/</condition>
							<condition>jboss.ssl.port &gt;= 0</condition>
							<condition>jboss.ssl.port &lt;= 65535</condition>
						</and>
						<condition>jboss.ssl.port == null </condition>
						<condition>jboss.ssl.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.ssl.port did not pass validation. jboss.ssl.port must be empty or between 0 and 65535. Sample valid value - "30380".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.transaction.processid.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.transaction.processid.port-syntax</name>
				<description>Checks jboss.transaction.processid.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.transaction.processid.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.transaction.processid.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.transaction.processid.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.transaction.processid.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.transaction.processid.port == null </condition>
						<condition>jboss.transaction.processid.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.transaction.processid.port did not pass validation. jboss.transaction.processid.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30430".</fail-message>
			</rule>
			<rule>
				<name>jboss.transaction.processid.port-port</name>
				<description>Checks jboss.transaction.processid.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.transaction.processid.port ==~ /\d+/</condition>
							<condition>jboss.transaction.processid.port &gt;= 0</condition>
							<condition>jboss.transaction.processid.port &lt;= 65535</condition>
						</and>
						<condition>jboss.transaction.processid.port == null </condition>
						<condition>jboss.transaction.processid.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.transaction.processid.port did not pass validation. jboss.transaction.processid.port must be empty or between 0 and 65535. Sample valid value - "30430".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.transaction.recovery.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.transaction.recovery.port-syntax</name>
				<description>Checks jboss.transaction.recovery.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.transaction.recovery.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.transaction.recovery.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.transaction.recovery.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.transaction.recovery.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.transaction.recovery.port == null </condition>
						<condition>jboss.transaction.recovery.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.transaction.recovery.port did not pass validation. jboss.transaction.recovery.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30410".</fail-message>
			</rule>
			<rule>
				<name>jboss.transaction.recovery.port-port</name>
				<description>Checks jboss.transaction.recovery.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.transaction.recovery.port ==~ /\d+/</condition>
							<condition>jboss.transaction.recovery.port &gt;= 0</condition>
							<condition>jboss.transaction.recovery.port &lt;= 65535</condition>
						</and>
						<condition>jboss.transaction.recovery.port == null </condition>
						<condition>jboss.transaction.recovery.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.transaction.recovery.port did not pass validation. jboss.transaction.recovery.port must be empty or between 0 and 65535. Sample valid value - "30410".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.transaction.status.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.transaction.status.port-syntax</name>
				<description>Checks jboss.transaction.status.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.transaction.status.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.transaction.status.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.transaction.status.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.transaction.status.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.transaction.status.port == null </condition>
						<condition>jboss.transaction.status.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.transaction.status.port did not pass validation. jboss.transaction.status.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30420".</fail-message>
			</rule>
			<rule>
				<name>jboss.transaction.status.port-port</name>
				<description>Checks jboss.transaction.status.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.transaction.status.port ==~ /\d+/</condition>
							<condition>jboss.transaction.status.port &gt;= 0</condition>
							<condition>jboss.transaction.status.port &lt;= 65535</condition>
						</and>
						<condition>jboss.transaction.status.port == null </condition>
						<condition>jboss.transaction.status.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.transaction.status.port did not pass validation. jboss.transaction.status.port must be empty or between 0 and 65535. Sample valid value - "30420".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.unifiedinvoker.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.unifiedinvoker.port-syntax</name>
				<description>Checks jboss.unifiedinvoker.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.unifiedinvoker.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.unifiedinvoker.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.unifiedinvoker.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.unifiedinvoker.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.unifiedinvoker.port == null </condition>
						<condition>jboss.unifiedinvoker.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.unifiedinvoker.port did not pass validation. jboss.unifiedinvoker.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30360".</fail-message>
			</rule>
			<rule>
				<name>jboss.unifiedinvoker.port-port</name>
				<description>Checks jboss.unifiedinvoker.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.unifiedinvoker.port ==~ /\d+/</condition>
							<condition>jboss.unifiedinvoker.port &gt;= 0</condition>
							<condition>jboss.unifiedinvoker.port &lt;= 65535</condition>
						</and>
						<condition>jboss.unifiedinvoker.port == null </condition>
						<condition>jboss.unifiedinvoker.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.unifiedinvoker.port did not pass validation. jboss.unifiedinvoker.port must be empty or between 0 and 65535. Sample valid value - "30360".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.web.password" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.web.password-syntax</name>
				<description>Checks jboss.web.password is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.web.password ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.web.password ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.web.password ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.web.password ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.web.password == null </condition>
						<condition>jboss.web.password == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.web.password did not pass validation. jboss.web.password must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "blueprint123!".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.web.service.port" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.web.service.port-syntax</name>
				<description>Checks jboss.web.service.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.web.service.port ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.web.service.port ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.web.service.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.web.service.port ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.web.service.port == null </condition>
						<condition>jboss.web.service.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.web.service.port did not pass validation. jboss.web.service.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "30250".</fail-message>
			</rule>
			<rule>
				<name>jboss.web.service.port-port</name>
				<description>Checks jboss.web.service.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.web.service.port ==~ /\d+/</condition>
							<condition>jboss.web.service.port &gt;= 0</condition>
							<condition>jboss.web.service.port &lt;= 65535</condition>
						</and>
						<condition>jboss.web.service.port == null </condition>
						<condition>jboss.web.service.port == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.web.service.port did not pass validation. jboss.web.service.port must be empty or between 0 and 65535. Sample valid value - "30250".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="jboss.web.user" description="" skip-property="exclude.validate.jboss">
		<rules>
			<rule>
				<name>jboss.web.user-syntax</name>
				<description>Checks jboss.web.user is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>jboss.web.user ==~ /.*\S+.*/</condition>
							<condition negate="true">jboss.web.user ==~ /.*\s.*/</condition>
							<condition negate="true">jboss.web.user ==~ /.*\x5c.*/</condition>
							<condition negate="true">jboss.web.user ==~ /.*\/.*/</condition>
						</and>
						<condition>jboss.web.user == null </condition>
						<condition>jboss.web.user == "" </condition>
					</or>
				</conditions>
				<fail-message>jboss.web.user did not pass validation. jboss.web.user must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "bda".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="ldap.basedn" description="" skip-property="">
		<rules>
			<rule>
				<name>ldap.basedn-syntax</name>
				<description>Checks ldap.basedn is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>ldap.basedn ==~ /.*\S+.*/</condition>
							<condition negate="true">ldap.basedn ==~ /.*\s.*/</condition>
							<condition negate="true">ldap.basedn ==~ /.*\x5c.*/</condition>
							<condition negate="true">ldap.basedn ==~ /.*\/.*/</condition>
						</and>
						<condition>ldap.basedn == null </condition>
						<condition>ldap.basedn == "" </condition>
					</or>
				</conditions>
				<fail-message>ldap.basedn did not pass validation. ldap.basedn must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "ou=nci,o=nih".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="ldap.url" description="" skip-property="">
		<rules>
			<rule>
				<name>ldap.url-syntax</name>
				<description>Checks ldap.url is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>ldap.url ==~ /.*\S+.*/</condition>
							<condition negate="true">ldap.url ==~ /.*\s.*/</condition>
							<condition negate="true">ldap.url ==~ /.*\x5c.*/</condition>
						</and>
						<condition>ldap.url == null </condition>
						<condition>ldap.url == "" </condition>
					</or>
				</conditions>
				<fail-message>ldap.url did not pass validation. ldap.url must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "ldaps://ncids4a.nci.nih.gov:636".</fail-message>
			</rule>
			<rule>
				<name>ldap.url-ldapurl</name>
				<description>Checks ldap.url has proper value.</description>
				<conditions>
					<condition>ldap.url ==~ /^ldap.*:\/\/.*/</condition>
				</conditions>
				<fail-message>ldap.url did not pass validation. ldap.url must be http(s)://*.nci.nih.gov/*. Sample valid value - "ldaps://ncids4a.nci.nih.gov:636".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="log4j.level" description="" skip-property="">
		<rules>
			<rule>
				<name>log4j.level-syntax</name>
				<description>Checks log4j.level is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>log4j.level ==~ /.*\S+.*/</condition>
							<condition negate="true">log4j.level ==~ /.*\s.*/</condition>
							<condition negate="true">log4j.level ==~ /.*\x5c.*/</condition>
							<condition negate="true">log4j.level ==~ /.*\/.*/</condition>
						</and>
						<condition>log4j.level == null </condition>
						<condition>log4j.level == "" </condition>
					</or>
				</conditions>
				<fail-message>log4j.level did not pass validation. log4j.level must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "WARN".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="log4j.maxDays" description="" skip-property="">
		<rules>
			<rule>
				<name>log4j.maxDays-syntax</name>
				<description>Checks log4j.maxDays is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>log4j.maxDays ==~ /.*\S+.*/</condition>
							<condition negate="true">log4j.maxDays ==~ /.*\s.*/</condition>
							<condition negate="true">log4j.maxDays ==~ /.*\x5c.*/</condition>
							<condition negate="true">log4j.maxDays ==~ /.*\/.*/</condition>
						</and>
						<condition>log4j.maxDays == null </condition>
						<condition>log4j.maxDays == "" </condition>
					</or>
				</conditions>
				<fail-message>log4j.maxDays did not pass validation. log4j.maxDays must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "7".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="log4j.maxFileSize" description="" skip-property="">
		<rules>
			<rule>
				<name>log4j.maxFileSize-syntax</name>
				<description>Checks log4j.maxFileSize is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>log4j.maxFileSize ==~ /.*\S+.*/</condition>
							<condition negate="true">log4j.maxFileSize ==~ /.*\s.*/</condition>
							<condition negate="true">log4j.maxFileSize ==~ /.*\x5c.*/</condition>
							<condition negate="true">log4j.maxFileSize ==~ /.*\/.*/</condition>
						</and>
						<condition>log4j.maxFileSize == null </condition>
						<condition>log4j.maxFileSize == "" </condition>
					</or>
				</conditions>
				<fail-message>log4j.maxFileSize did not pass validation. log4j.maxFileSize must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "100MB".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="mail.smtp.server" description="" skip-property="">
		<rules>
			<rule>
				<name>mail.smtp.server-syntax</name>
				<description>Checks mail.smtp.server is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>mail.smtp.server ==~ /.*\S+.*/</condition>
							<condition negate="true">mail.smtp.server ==~ /.*\s.*/</condition>
							<condition negate="true">mail.smtp.server ==~ /.*\x5c.*/</condition>
							<condition negate="true">mail.smtp.server ==~ /.*\/.*/</condition>
						</and>
						<condition>mail.smtp.server == null </condition>
						<condition>mail.smtp.server == "" </condition>
					</or>
				</conditions>
				<fail-message>mail.smtp.server did not pass validation. mail.smtp.server must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "mailfwd.nih.gov".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="mysql.lowercasetablenames" description="" skip-property="">
		<rules>
			<rule>
				<name>mysql.lowercasetablenames-syntax</name>
				<description>Checks mysql.lowercasetablenames is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>mysql.lowercasetablenames ==~ /.*\S+.*/</condition>
							<condition negate="true">mysql.lowercasetablenames ==~ /.*\s.*/</condition>
							<condition negate="true">mysql.lowercasetablenames ==~ /.*\x5c.*/</condition>
							<condition negate="true">mysql.lowercasetablenames ==~ /.*\/.*/</condition>
						</and>
						<condition>mysql.lowercasetablenames == null </condition>
						<condition>mysql.lowercasetablenames == "" </condition>
					</or>
				</conditions>
				<fail-message>mysql.lowercasetablenames did not pass validation. mysql.lowercasetablenames must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>mysql.lowercasetablenames-tf</name>
				<description>Checks mysql.lowercasetablenames has proper value.</description>
				<conditions>
					<or>
						<condition> mysql.lowercasetablenames == "true"</condition>
						<condition> mysql.lowercasetablenames == "false"</condition>
						<condition> mysql.lowercasetablenames == ""</condition>
						<condition> mysql.lowercasetablenames == null</condition>
					</or>
				</conditions>
				<fail-message>mysql.lowercasetablenames did not pass validation. Must be empty or true or false.</fail-message>
			</rule>

		</rules>
	</property>
	<property  name="mysql.minimum.version" description="" skip-property="">
		<rules>
			<rule>
				<name>mysql.minimum.version-syntax</name>
				<description>Checks mysql.minimum.version is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>mysql.minimum.version ==~ /.*\S+.*/</condition>
							<condition negate="true">mysql.minimum.version ==~ /.*\s.*/</condition>
							<condition negate="true">mysql.minimum.version ==~ /.*\x5c.*/</condition>
							<condition negate="true">mysql.minimum.version ==~ /.*\/.*/</condition>
						</and>
						<condition>mysql.minimum.version == null </condition>
						<condition>mysql.minimum.version == "" </condition>
					</or>
				</conditions>
				<fail-message>mysql.minimum.version did not pass validation. mysql.minimum.version must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "5.0.27".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="project.name" description="" skip-property="">
		<rules>
			<rule>
				<name>project.name-syntax</name>
				<description>Checks project.name is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>project.name ==~ /.*\S+.*/</condition>
							<condition negate="true">project.name ==~ /.*\s.*/</condition>
							<condition negate="true">project.name ==~ /.*\x5c.*/</condition>
							<condition negate="true">project.name ==~ /.*\/.*/</condition>
						</and>
						<condition>project.name == null </condition>
						<condition>project.name == "" </condition>
					</or>
				</conditions>
				<fail-message>project.name did not pass validation. project.name must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "bda-blueprints".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="require.build.wscore" description="" skip-property="">
		<rules>
			<rule>
				<name>require.build.wscore-syntax</name>
				<description>Checks require.build.wscore is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>require.build.wscore ==~ /.*\S+.*/</condition>
							<condition negate="true">require.build.wscore ==~ /.*\s.*/</condition>
							<condition negate="true">require.build.wscore ==~ /.*\x5c.*/</condition>
							<condition negate="true">require.build.wscore ==~ /.*\/.*/</condition>
						</and>
						<condition>require.build.wscore == null </condition>
						<condition>require.build.wscore == "" </condition>
					</or>
				</conditions>
				<fail-message>require.build.wscore did not pass validation. require.build.wscore must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>require.build.wscore-tf</name>
				<description>Checks require.build.wscore has proper value.</description>
				<conditions>
					<or>
						<condition> require.build.wscore == "true"</condition>
						<condition> require.build.wscore == "false"</condition>
						<condition> require.build.wscore == ""</condition>
						<condition> require.build.wscore == null</condition>
					</or>
				</conditions>
				<fail-message>require.build.wscore did not pass validation. Must be empty or true or false.</fail-message>
			</rule>

		</rules>
	</property>
	<property  name="sync-gts.binaries.file" description="" skip-property="">
		<rules>
			<rule>
				<name>sync-gts.binaries.file-syntax</name>
				<description>Checks sync-gts.binaries.file is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>sync-gts.binaries.file ==~ /.*\S+.*/</condition>
							<condition negate="true">sync-gts.binaries.file ==~ /.*\s.*/</condition>
							<condition negate="true">sync-gts.binaries.file ==~ /.*\x5c.*/</condition>
						</and>
						<condition>sync-gts.binaries.file == null </condition>
						<condition>sync-gts.binaries.file == "" </condition>
					</or>
				</conditions>
				<fail-message>sync-gts.binaries.file did not pass validation. sync-gts.binaries.file must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "gaards-syncgts-1.3.0.1-bin.zip".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="sync-gts.binaries.relative.dir" description="" skip-property="">
		<rules>
			<rule>
				<name>sync-gts.binaries.relative.dir-syntax</name>
				<description>Checks sync-gts.binaries.relative.dir is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>sync-gts.binaries.relative.dir ==~ /.*\S+.*/</condition>
							<condition negate="true">sync-gts.binaries.relative.dir ==~ /.*\s.*/</condition>
							<condition negate="true">sync-gts.binaries.relative.dir ==~ /.*\x5c.*/</condition>
						</and>
						<condition>sync-gts.binaries.relative.dir == null </condition>
						<condition>sync-gts.binaries.relative.dir == "" </condition>
					</or>
				</conditions>
				<fail-message>sync-gts.binaries.relative.dir did not pass validation. sync-gts.binaries.relative.dir must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - ".".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="sync-gts.src.url" description="" skip-property="">
		<rules>
			<rule>
				<name>sync-gts.src.url-syntax</name>
				<description>Checks sync-gts.src.url is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>sync-gts.src.url ==~ /.*\S+.*/</condition>
							<condition negate="true">sync-gts.src.url ==~ /.*\s.*/</condition>
							<condition negate="true">sync-gts.src.url ==~ /.*\x5c.*/</condition>
						</and>
						<condition>sync-gts.src.url == null </condition>
						<condition>sync-gts.src.url == "" </condition>
					</or>
				</conditions>
				<fail-message>sync-gts.src.url did not pass validation. sync-gts.src.url must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "http://gforge.nci.nih.gov/svnroot/commonlibrary/trunk/techstack-2009/os-independent/gaards-syncgts-1.3.0.1-bin.zip".</fail-message>
			</rule>
			<rule>
				<name>sync-gts.src.url-url</name>
				<description>Checks sync-gts.src.url has proper value.</description>
				<conditions>
					<condition>sync-gts.src.url ==~ /^http.*:\/\/.*.nci.nih.gov.*/</condition>
				</conditions>
				<fail-message>sync-gts.src.url did not pass validation. sync-gts.src.url must be http(s)://*.nci.nih.gov/*. Sample valid value - "http://gforge.nci.nih.gov/svnroot/commonlibrary/trunk/techstack-2009/os-independent/gaards-syncgts-1.3.0.1-bin.zip".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.binaries.file" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.binaries.file-syntax</name>
				<description>Checks tomcat.binaries.file is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.binaries.file ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.binaries.file ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.binaries.file ==~ /.*\x5c.*/</condition>
						</and>
						<condition>tomcat.binaries.file == null </condition>
						<condition>tomcat.binaries.file == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.binaries.file did not pass validation. tomcat.binaries.file must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "apache-tomcat-6.0.20.zip".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.binaries.relative.dir" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.binaries.relative.dir-syntax</name>
				<description>Checks tomcat.binaries.relative.dir is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.binaries.relative.dir ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.binaries.relative.dir ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.binaries.relative.dir ==~ /.*\x5c.*/</condition>
						</and>
						<condition>tomcat.binaries.relative.dir == null </condition>
						<condition>tomcat.binaries.relative.dir == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.binaries.relative.dir did not pass validation. tomcat.binaries.relative.dir must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "apache-tomcat-6.0.20".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.external.grid.secure.host" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.external.grid.secure.host-syntax</name>
				<description>Checks tomcat.external.grid.secure.host is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.external.grid.secure.host ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.external.grid.secure.host ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.external.grid.secure.host ==~ /.*\x5c.*/</condition>
							<condition negate="true">tomcat.external.grid.secure.host ==~ /.*\/.*/</condition>
						</and>
						<condition>tomcat.external.grid.secure.host == null </condition>
						<condition>tomcat.external.grid.secure.host == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.external.grid.secure.host did not pass validation. tomcat.external.grid.secure.host must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.external.grid.secure.port" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.external.grid.secure.port-syntax</name>
				<description>Checks tomcat.external.grid.secure.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.external.grid.secure.port ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.external.grid.secure.port ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.external.grid.secure.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">tomcat.external.grid.secure.port ==~ /.*\/.*/</condition>
						</and>
						<condition>tomcat.external.grid.secure.port == null </condition>
						<condition>tomcat.external.grid.secure.port == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.external.grid.secure.port did not pass validation. tomcat.external.grid.secure.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "".</fail-message>
			</rule>
			<rule>
				<name>tomcat.external.grid.secure.port-port</name>
				<description>Checks tomcat.external.grid.secure.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.external.grid.secure.port ==~ /\d+/</condition>
							<condition>tomcat.external.grid.secure.port &gt;= 0</condition>
							<condition>tomcat.external.grid.secure.port &lt;= 65535</condition>
						</and>
						<condition>tomcat.external.grid.secure.port == null </condition>
						<condition>tomcat.external.grid.secure.port == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.external.grid.secure.port did not pass validation. tomcat.external.grid.secure.port must be empty or between 0 and 65535. Sample valid value - "".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.external.http.host" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.external.http.host-syntax</name>
				<description>Checks tomcat.external.http.host is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.external.http.host ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.external.http.host ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.external.http.host ==~ /.*\x5c.*/</condition>
							<condition negate="true">tomcat.external.http.host ==~ /.*\/.*/</condition>
						</and>
						<condition>tomcat.external.http.host == null </condition>
						<condition>tomcat.external.http.host == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.external.http.host did not pass validation. tomcat.external.http.host must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.external.http.port" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.external.http.port-syntax</name>
				<description>Checks tomcat.external.http.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.external.http.port ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.external.http.port ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.external.http.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">tomcat.external.http.port ==~ /.*\/.*/</condition>
						</and>
						<condition>tomcat.external.http.port == null </condition>
						<condition>tomcat.external.http.port == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.external.http.port did not pass validation. tomcat.external.http.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "".</fail-message>
			</rule>
			<rule>
				<name>tomcat.external.http.port-port</name>
				<description>Checks tomcat.external.http.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.external.http.port ==~ /\d+/</condition>
							<condition>tomcat.external.http.port &gt;= 0</condition>
							<condition>tomcat.external.http.port &lt;= 65535</condition>
						</and>
						<condition>tomcat.external.http.port == null </condition>
						<condition>tomcat.external.http.port == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.external.http.port did not pass validation. tomcat.external.http.port must be empty or between 0 and 65535. Sample valid value - "".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.external.ssl.host" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.external.ssl.host-syntax</name>
				<description>Checks tomcat.external.ssl.host is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.external.ssl.host ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.external.ssl.host ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.external.ssl.host ==~ /.*\x5c.*/</condition>
							<condition negate="true">tomcat.external.ssl.host ==~ /.*\/.*/</condition>
						</and>
						<condition>tomcat.external.ssl.host == null </condition>
						<condition>tomcat.external.ssl.host == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.external.ssl.host did not pass validation. tomcat.external.ssl.host must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.external.ssl.port" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.external.ssl.port-syntax</name>
				<description>Checks tomcat.external.ssl.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.external.ssl.port ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.external.ssl.port ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.external.ssl.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">tomcat.external.ssl.port ==~ /.*\/.*/</condition>
						</and>
						<condition>tomcat.external.ssl.port == null </condition>
						<condition>tomcat.external.ssl.port == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.external.ssl.port did not pass validation. tomcat.external.ssl.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "".</fail-message>
			</rule>
			<rule>
				<name>tomcat.external.ssl.port-port</name>
				<description>Checks tomcat.external.ssl.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.external.ssl.port ==~ /\d+/</condition>
							<condition>tomcat.external.ssl.port &gt;= 0</condition>
							<condition>tomcat.external.ssl.port &lt;= 65535</condition>
						</and>
						<condition>tomcat.external.ssl.port == null </condition>
						<condition>tomcat.external.ssl.port == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.external.ssl.port did not pass validation. tomcat.external.ssl.port must be empty or between 0 and 65535. Sample valid value - "".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.grid.secure.cert.location" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.grid.secure.cert.location-syntax</name>
				<description>Checks tomcat.grid.secure.cert.location is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.grid.secure.cert.location ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.grid.secure.cert.location ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.grid.secure.cert.location ==~ /.*\x5c.*/</condition>
						</and>
						<condition>tomcat.grid.secure.cert.location == null </condition>
						<condition>tomcat.grid.secure.cert.location == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.grid.secure.cert.location did not pass validation. tomcat.grid.secure.cert.location must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "/path/165.112.132.171-cert.pem".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.grid.secure.enable" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.grid.secure.enable-syntax</name>
				<description>Checks tomcat.grid.secure.enable is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.grid.secure.enable ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.grid.secure.enable ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.grid.secure.enable ==~ /.*\x5c.*/</condition>
							<condition negate="true">tomcat.grid.secure.enable ==~ /.*\/.*/</condition>
						</and>
						<condition>tomcat.grid.secure.enable == null </condition>
						<condition>tomcat.grid.secure.enable == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.grid.secure.enable did not pass validation. tomcat.grid.secure.enable must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "false".</fail-message>
			</rule>
			<rule>
				<name>tomcat.grid.secure.enable-tf</name>
				<description>Checks tomcat.grid.secure.enable has proper value.</description>
				<conditions>
					<or>
						<condition> tomcat.grid.secure.enable == "true"</condition>
						<condition> tomcat.grid.secure.enable == "false"</condition>
						<condition> tomcat.grid.secure.enable == ""</condition>
						<condition> tomcat.grid.secure.enable == null</condition>
					</or>
				</conditions>
				<fail-message>tomcat.grid.secure.enable did not pass validation. Must be empty or true or false.</fail-message>
			</rule>
			<rule>
				<name>tomcat.grid.secure.enable-relationship</name>
				<description>Checks tomcat.grid.secure.enable has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition> tomcat.grid.secure.enable == "true"</condition>
							<condition> tomcat.grid.secure.cert.location ==~ /.*\S+.*/</condition>
							<condition> tomcat.grid.secure.key.location ==~ /.*\S+.*/</condition>
							<condition> tomcat.grid.secure.port ==~ /.*\S+.*/</condition>
						</and>
						<condition> tomcat.grid.secure.enable != "true"</condition>
					</or>
				</conditions>
				<fail-message>tomcat.grid.secure.enable did not pass validation. If true then jboss.grid.secure.cert.location, jboss.grid.secure.enable, jboss.grid.secure.key.location, jboss.grid.secure.port must have values.</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.grid.secure.key.location" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.grid.secure.key.location-syntax</name>
				<description>Checks tomcat.grid.secure.key.location is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.grid.secure.key.location ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.grid.secure.key.location ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.grid.secure.key.location ==~ /.*\x5c.*/</condition>
						</and>
						<condition>tomcat.grid.secure.key.location == null </condition>
						<condition>tomcat.grid.secure.key.location == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.grid.secure.key.location did not pass validation. tomcat.grid.secure.key.location must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "/path/165.112.132.171-key.pem".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.grid.secure.port" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.grid.secure.port-syntax</name>
				<description>Checks tomcat.grid.secure.port is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.grid.secure.port ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.grid.secure.port ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.grid.secure.port ==~ /.*\x5c.*/</condition>
							<condition negate="true">tomcat.grid.secure.port ==~ /.*\/.*/</condition>
						</and>
						<condition>tomcat.grid.secure.port == null </condition>
						<condition>tomcat.grid.secure.port == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.grid.secure.port did not pass validation. tomcat.grid.secure.port must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "21444".</fail-message>
			</rule>
			<rule>
				<name>tomcat.grid.secure.port-port</name>
				<description>Checks tomcat.grid.secure.port has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.grid.secure.port ==~ /\d+/</condition>
							<condition>tomcat.grid.secure.port &gt;= 0</condition>
							<condition>tomcat.grid.secure.port &lt;= 65535</condition>
						</and>
						<condition>tomcat.grid.secure.port == null </condition>
						<condition>tomcat.grid.secure.port == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.grid.secure.port did not pass validation. tomcat.grid.secure.port must be empty or between 0 and 65535. Sample valid value - "21444".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.relative.dir" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.relative.dir-syntax</name>
				<description>Checks tomcat.relative.dir is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.relative.dir ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.relative.dir ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.relative.dir ==~ /.*\x5c.*/</condition>
						</and>
						<condition>tomcat.relative.dir == null </condition>
						<condition>tomcat.relative.dir == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.relative.dir did not pass validation. tomcat.relative.dir must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "apache-tomcat-6.0.20".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.hostname" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.hostname-syntax</name>
				<description>Checks tomcat.hostname is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.hostname ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.hostname ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.hostname ==~ /.*\x5c.*/</condition>
							<condition negate="true">tomcat.hostname ==~ /.*\/.*/</condition>
						</and>
						<condition>tomcat.hostname == null </condition>
						<condition>tomcat.hostname == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.hostname did not pass validation. tomcat.hostname must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "localhost".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.http-connector.remove" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.http-connector.remove-syntax</name>
				<description>Checks tomcat.http-connector.remove is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.http-connector.remove ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.http-connector.remove ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.http-connector.remove ==~ /.*\x5c.*/</condition>
							<condition negate="true">tomcat.http-connector.remove ==~ /.*\/.*/</condition>
						</and>
						<condition>tomcat.http-connector.remove == null </condition>
						<condition>tomcat.http-connector.remove == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.http-connector.remove did not pass validation. tomcat.http-connector.remove must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "true".</fail-message>
			</rule>
			<rule>
				<name>tomcat.http-connector.remove-tf</name>
				<description>Checks tomcat.http-connector.remove has proper value.</description>
				<conditions>
					<or>
						<condition> tomcat.http-connector.remove == "true"</condition>
						<condition> tomcat.http-connector.remove == "false"</condition>
						<condition> tomcat.http-connector.remove == ""</condition>
						<condition> tomcat.http-connector.remove == null</condition>
					</or>
				</conditions>
				<fail-message>tomcat.http-connector.remove did not pass validation. Must be empty or true or false.</fail-message>
			</rule>
			<rule>
				<name>tomcat.http-connector.remove-relationship</name>
				<description>Checks tomcat.http-connector.remove has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition> tomcat.http-connector.remove == "true"</condition>
							<condition> tomcat.grid.secure.enable == "true"</condition>
						</and>
						<condition> tomcat.http-connector.remove != "true"</condition>
					</or>
				</conditions>
				<fail-message>tomcat.http-connector.remove did not pass validation. If true then tomcat.grid.secure.enable must also be true.</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.port.ajp" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.port.ajp-syntax</name>
				<description>Checks tomcat.port.ajp is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.port.ajp ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.port.ajp ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.port.ajp ==~ /.*\x5c.*/</condition>
							<condition negate="true">tomcat.port.ajp ==~ /.*\/.*/</condition>
						</and>
						<condition>tomcat.port.ajp == null </condition>
						<condition>tomcat.port.ajp == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.port.ajp did not pass validation. tomcat.port.ajp must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "21009".</fail-message>
			</rule>
			<rule>
				<name>tomcat.port.ajp-value</name>
				<description>Checks tomcat.port.ajp has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.port.ajp ==~ /\d+/</condition>
							<condition>tomcat.port.ajp &gt;= 0</condition>
							<condition>tomcat.port.ajp &lt;= 65535</condition>
						</and>
						<condition>tomcat.port.ajp == null </condition>
						<condition>tomcat.port.ajp == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.port.ajp did not pass validation. tomcat.port.ajp must be empty or between 0 and 65535. Sample valid value - "21009".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.port.http" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.port.http-syntax</name>
				<description>Checks tomcat.port.http is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.port.http ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.port.http ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.port.http ==~ /.*\x5c.*/</condition>
							<condition negate="true">tomcat.port.http ==~ /.*\/.*/</condition>
						</and>
						<condition>tomcat.port.http == null </condition>
						<condition>tomcat.port.http == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.port.http did not pass validation. tomcat.port.http must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "21080".</fail-message>
			</rule>
			<rule>
				<name>tomcat.port.http-value</name>
				<description>Checks tomcat.port.http has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.port.http ==~ /\d+/</condition>
							<condition>tomcat.port.http &gt;= 0</condition>
							<condition>tomcat.port.http &lt;= 65535</condition>
						</and>
						<condition>tomcat.port.http == null </condition>
						<condition>tomcat.port.http == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.port.http did not pass validation. tomcat.port.http must be empty or between 0 and 65535. Sample valid value - "21080".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.port.shutdown" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.port.shutdown-syntax</name>
				<description>Checks tomcat.port.shutdown is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.port.shutdown ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.port.shutdown ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.port.shutdown ==~ /.*\x5c.*/</condition>
							<condition negate="true">tomcat.port.shutdown ==~ /.*\/.*/</condition>
						</and>
						<condition>tomcat.port.shutdown == null </condition>
						<condition>tomcat.port.shutdown == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.port.shutdown did not pass validation. tomcat.port.shutdown must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "21005".</fail-message>
			</rule>
			<rule>
				<name>tomcat.port.shutdown-value</name>
				<description>Checks tomcat.port.shutdown has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.port.shutdown ==~ /\d+/</condition>
							<condition>tomcat.port.shutdown &gt;= 0</condition>
							<condition>tomcat.port.shutdown &lt;= 65535</condition>
						</and>
						<condition>tomcat.port.shutdown == null </condition>
						<condition>tomcat.port.shutdown == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.port.shutdown did not pass validation. tomcat.port.shutdown must be empty or between 0 and 65535. Sample valid value - "21005".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.port.ssl" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.port.ssl-syntax</name>
				<description>Checks tomcat.port.ssl is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.port.ssl ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.port.ssl ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.port.ssl ==~ /.*\x5c.*/</condition>
							<condition negate="true">tomcat.port.ssl ==~ /.*\/.*/</condition>
						</and>
						<condition>tomcat.port.ssl == null </condition>
						<condition>tomcat.port.ssl == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.port.ssl did not pass validation. tomcat.port.ssl must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "21443".</fail-message>
			</rule>
			<rule>
				<name>tomcat.port.ssl-value</name>
				<description>Checks tomcat.port.ssl has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.port.ssl ==~ /\d+/</condition>
							<condition>tomcat.port.ssl &gt;= 0</condition>
							<condition>tomcat.port.ssl &lt;= 65535</condition>
						</and>
						<condition>tomcat.port.ssl == null </condition>
						<condition>tomcat.port.ssl == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.port.ssl did not pass validation. tomcat.port.ssl must be empty or between 0 and 65535. Sample valid value - "21443".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.src.url" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.src.url-syntax</name>
				<description>Checks tomcat.src.url is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.src.url ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.src.url ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.src.url ==~ /.*\x5c.*/</condition>
						</and>
						<condition>tomcat.src.url == null </condition>
						<condition>tomcat.src.url == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.src.url did not pass validation. tomcat.src.url must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "http://gforge.nci.nih.gov/svnroot/commonlibrary/trunk/techstack-2009/os-independent/apache-tomcat-6.0.20.zip".</fail-message>
			</rule>
			<rule>
				<name>tomcat.src.url-url</name>
				<description>Checks tomcat.src.url has proper value.</description>
				<conditions>
					<condition>tomcat.src.url ==~ /^http.*:\/\/.*.nci.nih.gov.*/</condition>
				</conditions>
				<fail-message>tomcat.src.url did not pass validation. tomcat.src.url must be http(s)://*.nci.nih.gov/*. Sample valid value - "http://gforge.nci.nih.gov/svnroot/commonlibrary/trunk/techstack-2009/os-independent/apache-tomcat-6.0.20.zip".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.ssl.enable" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.ssl.enable-syntax</name>
				<description>Checks tomcat.ssl.enable is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.ssl.enable ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.ssl.enable ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.ssl.enable ==~ /.*\x5c.*/</condition>
							<condition negate="true">tomcat.ssl.enable ==~ /.*\/.*/</condition>
						</and>
						<condition>tomcat.ssl.enable == null </condition>
						<condition>tomcat.ssl.enable == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.ssl.enable did not pass validation. tomcat.ssl.enable must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "false".</fail-message>
			</rule>
			<rule>
				<name>tomcat.ssl.enable-tf</name>
				<description>Checks tomcat.ssl.enable has proper value.</description>
				<conditions>
					<or>
						<condition> tomcat.ssl.enable == "true"</condition>
						<condition> tomcat.ssl.enable == "false"</condition>
						<condition> tomcat.ssl.enable == ""</condition>
						<condition> tomcat.ssl.enable == null</condition>
					</or>
				</conditions>
				<fail-message>tomcat.ssl.enable did not pass validation. Must be empty or true or false.</fail-message>
			</rule>
			<rule>
				<name>tomcat.ssl.enable-relationship</name>
				<description>Checks tomcat.ssl.enable has proper value.</description>
				<conditions>
					<or>
						<and>
							<condition> tomcat.ssl.enable == "true"</condition>
							<condition> tomcat.ssl.keystore.location ==~ /.*\S+.*/</condition>
							<condition> tomcat.ssl.keystore.pass ==~ /.*\S+.*/</condition>
							<condition> tomcat.ssl.keystore.alias ==~ /.*\S+.*/</condition>
							<condition> tomcat.ssl.fullyqualified.hostname ==~ /.*\S+.*/</condition>
						</and>
						<condition> tomcat.ssl.enable != "true"</condition>
					</or>
				</conditions>
				<fail-message>tomcat.ssl.enable did not pass validation. If true then tomcat.ssl.keystore.location, tomcat.ssl.keystore.pass, tomcat.ssl.keystore.alias, tomcat.ssl.fullyqualified.hostname.</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.ssl.fullyqualified.hostname" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.ssl.fullyqualified.hostname-syntax</name>
				<description>Checks tomcat.ssl.fullyqualified.hostname is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.ssl.fullyqualified.hostname ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.ssl.fullyqualified.hostname ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.ssl.fullyqualified.hostname ==~ /.*\x5c.*/</condition>
							<condition negate="true">tomcat.ssl.fullyqualified.hostname ==~ /.*\/.*/</condition>
						</and>
						<condition>tomcat.ssl.fullyqualified.hostname == null </condition>
						<condition>tomcat.ssl.fullyqualified.hostname == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.ssl.fullyqualified.hostname did not pass validation. tomcat.ssl.fullyqualified.hostname must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "localhost.nci.nih.gov".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.ssl.keystore.alias" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.ssl.keystore.alias-syntax</name>
				<description>Checks tomcat.ssl.keystore.alias is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.ssl.keystore.alias ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.ssl.keystore.alias ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.ssl.keystore.alias ==~ /.*\x5c.*/</condition>
							<condition negate="true">tomcat.ssl.keystore.alias ==~ /.*\/.*/</condition>
						</and>
						<condition>tomcat.ssl.keystore.alias == null </condition>
						<condition>tomcat.ssl.keystore.alias == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.ssl.keystore.alias did not pass validation. tomcat.ssl.keystore.alias must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "ncicb-test-ssl-key".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.ssl.keystore.location" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.ssl.keystore.location-syntax</name>
				<description>Checks tomcat.ssl.keystore.location is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.ssl.keystore.location ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.ssl.keystore.location ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.ssl.keystore.location ==~ /.*\x5c.*/</condition>
						</and>
						<condition>tomcat.ssl.keystore.location == null </condition>
						<condition>tomcat.ssl.keystore.location == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.ssl.keystore.location did not pass validation. tomcat.ssl.keystore.location must be null or have a value and not contain spaces or  back slashes (\). Sample valid value - "/path/ncicb-test-ssl.keystore".</fail-message>
			</rule>
		</rules>
	</property>
	<property  name="tomcat.ssl.keystore.pass" description="" skip-property="exclude.validate.tomcat">
		<rules>
			<rule>
				<name>tomcat.ssl.keystore.pass-syntax</name>
				<description>Checks tomcat.ssl.keystore.pass is the valid syntax.</description>
				<conditions>
					<or>
						<and>
							<condition>tomcat.ssl.keystore.pass ==~ /.*\S+.*/</condition>
							<condition negate="true">tomcat.ssl.keystore.pass ==~ /.*\s.*/</condition>
							<condition negate="true">tomcat.ssl.keystore.pass ==~ /.*\x5c.*/</condition>
							<condition negate="true">tomcat.ssl.keystore.pass ==~ /.*\/.*/</condition>
						</and>
						<condition>tomcat.ssl.keystore.pass == null </condition>
						<condition>tomcat.ssl.keystore.pass == "" </condition>
					</or>
				</conditions>
				<fail-message>tomcat.ssl.keystore.pass did not pass validation. tomcat.ssl.keystore.pass must be null or have a value and not contain spaces, forward slashes (/) or back slashes (\). Sample valid value - "ncicb1!".</fail-message>
			</rule>
		</rules>
	</property>
</properties>
