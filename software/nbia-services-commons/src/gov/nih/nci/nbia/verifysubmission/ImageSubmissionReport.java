/*L
 *  Copyright SAIC, Ellumen and RSNA (CTP)
 *
 *
 *  Distributed under the OSI-approved BSD 3-Clause License.
 *  See http://ncip.github.com/national-biomedical-image-archive/LICENSE.txt for details.
 */

package gov.nih.nci.nbia.verifysubmission;

import java.util.Collections;
import java.util.Date;
import java.util.SortedMap;

/**
 * This is generated by the public class ImageSubmissionReportGenerator.  This contains
 * all the information necessary to show image submission counts within
 * a time frame.
 * 
 * <p>This object is meant to be immutable.
 */
public class ImageSubmissionReport {
	
	/**
	 * Constructor.  All parameters feed through here
	 * to avoid setters that would violate immutability.
	 */	
	public ImageSubmissionReport(ImageSubmissionCountReport imageSubmissionCountReport,
			                     SortedMap<Date, Integer> submissionDays,
			                     SortedMap<Date, Integer> correctedSubmissionDays,
			                     Date from,
                                 Date to,
                                 String collectionSite) {
		this.imageSubmissionCountReport = imageSubmissionCountReport;
		this.submissionDays = submissionDays;
		this.correctedSubmissionDays = correctedSubmissionDays;
		this.from = from;
		this.to = to;
		this.collectionSite = collectionSite;
		
	}
	
	/**
	 * Entry for each day in day range that had new image submissions
	 * plus the submission count for that day
	 */
	public SortedMap<Date, Integer> getSubmissionDays() {
		return Collections.unmodifiableSortedMap(submissionDays);
	}
	
	/**
	 * Entry for each day in day range that had correction submissions
	 * plus the submission count for that day
	 */
	public SortedMap<Date, Integer> getCorrectedSubmissionDays() {
		return Collections.unmodifiableSortedMap(correctedSubmissionDays);
	}	
	
	public ImageSubmissionCountReport getImageSubmissionCountReport() {
		return imageSubmissionCountReport;
	}	
	
    /**
     * The starting day for the report. 
     */
	public Date getFrom() {
		return new Date(from.getTime());
	}
	
    /**
     * The end day for the report (inclusive). 
     */	
	public Date getTo() {
		return new Date(to.getTime());
	}	
	
	/**
	 * The collection+site this report is relevant to
	 */
	public String getCollectionSite(){		
		return collectionSite;
	}
	////////////////////////////////////PRIVATE//////////////////////////////////
	
	private SortedMap<Date, Integer> submissionDays;	
	
	private SortedMap<Date, Integer> correctedSubmissionDays;	

	private ImageSubmissionCountReport imageSubmissionCountReport;
	
	private Date from;
	
	private Date to;	
	
	private String collectionSite;
	
}
